{
	"id": "2e2c2d1a063d47adceb4cbc5da975dfd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/contracts/WrappedAgToken.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\nimport {ERC20} from \"../../lib/solmate/src/tokens/ERC20.sol\";\n\nimport {IAgToken} from \"./interfaces/IAgToken.sol\";\nimport {ILendingPool} from \"./interfaces/ILendingPool.sol\";\nimport {DataTypes} from  \"./types/DataTypes.sol\";\n\n/// @notice Wrapped AgToken (ERC-20) implementation.\n/// @author Luigy-Lemon (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/WETH.sol)\n/// @author Inspired by Solmate WETH (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/WETH.sol)\ncontract WrappedAgToken is ERC20 {\n\n    event Deposit(address indexed from, uint256 amount);\n\n    event Withdrawal(address indexed to, uint256 amount);\n\n    event Claimed(uint256 amount);\n\n    uint256 constant ACTIVE_MASK = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFF;\n\n    uint256 userDeposits = 0;\n    address public manager;\n    address public interestCollector;\n    address public reserveAsset;\n    IAgToken public underlyingAgToken;\n    ILendingPool public POOL;\n\n\n    constructor(\n    string memory tokenName,\n    string memory tokenSymbol,\n    uint8 tokenDecimals,\n    address _underlyingAgToken,\n    address _interestCollector,\n    address governanceAddress\n  ) ERC20(tokenName, tokenSymbol, tokenDecimals) {\n    interestCollector = _interestCollector;\n    underlyingAgToken = IAgToken(_underlyingAgToken);\n    POOL = ILendingPool(governanceAddress);\n    reserveAsset = _underlyingAgToken;\n    manager = governanceAddress;\n  }\n\n    /*//////////////////////////////////////////////////////////////\n                        AUTH LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    modifier isManager {\n        require(msg.sender == manager, \"UNAUTHORIZED\");\n\n        _;\n    }\n\n    modifier isActive {\n        DataTypes.ReserveConfigurationMap memory config = POOL.getConfiguration(reserveAsset);\n        \n        require((config.data & ~ACTIVE_MASK) != 0, \"Underlying Asset is not active\");\n        _;\n    }\n\n    \n    /*//////////////////////////////////////////////////////////////\n                        WRAPPER LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function deposit(uint256 amount) public isActive() {\n\n        underlyingAgToken.transferFrom(msg.sender, address(this), amount);\n\n        _mint(msg.sender, amount);\n\n        userDeposits += amount;\n\n        emit Deposit(msg.sender, amount);\n    }\n\n    function withdraw(uint256 amount) public {\n        userDeposits -= amount;\n        \n        _burn(msg.sender, amount);\n\n\n        underlyingAgToken.transfer(msg.sender, amount);\n\n        emit Withdrawal(msg.sender, amount);\n    }\n\n\n    /*//////////////////////////////////////////////////////////////\n                        GOVERNANCE LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function claim() public {\n        uint256 claimable = totalSupply - userDeposits;\n\n        underlyingAgToken.transfer(interestCollector, claimable);\n\n        emit Claimed(claimable);\n    }\n\n\n    function setInterestCollector(address newCollector) external isManager() {\n        interestCollector = newCollector;\n    }\n\n    function setManager(address newManager) external isManager() {\n        manager = newManager;\n    }\n\n    receive() external payable {\n        require(msg.value < 0, \"Contract can only handle ERC20 tokens\");\n    }\n}"
			},
			"src/contracts/types/DataTypes.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\nlibrary DataTypes {\n    // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\n    struct ReserveData {\n    //stores the reserve configuration\n        ReserveConfigurationMap configuration;\n        //the liquidity index. Expressed in ray\n        uint128 liquidityIndex;\n        //variable borrow index. Expressed in ray\n        uint128 variableBorrowIndex;\n        //the current supply rate. Expressed in ray\n        uint128 currentLiquidityRate;\n        //the current variable borrow rate. Expressed in ray\n        uint128 currentVariableBorrowRate;\n        //the current stable borrow rate. Expressed in ray\n        uint128 currentStableBorrowRate;\n        uint40 lastUpdateTimestamp;\n        //tokens addresses\n        address aTokenAddress;\n        address stableDebtTokenAddress;\n        address variableDebtTokenAddress;\n        //address of the interest rate strategy\n        address interestRateStrategyAddress;\n        //the id of the reserve. Represents the position in the list of the active reserves\n        uint8 id;\n    }\n\n    struct ReserveConfigurationMap {\n    //bit 0-15: LTV\n    //bit 16-31: Liq. threshold\n    //bit 32-47: Liq. bonus\n    //bit 48-55: Decimals\n    //bit 56: Reserve is active\n    //bit 57: reserve is frozen\n    //bit 58: borrowing is enabled\n    //bit 59: stable rate borrowing enabled\n    //bit 60-63: reserved\n    //bit 64-79: reserve factor\n        uint256 data;\n    }\n\n    struct UserConfigurationMap {\n        uint256 data;\n    }\n\n    enum InterestRateMode {\n        NONE,\n        STABLE,\n        VARIABLE\n    }\n}\n"
			},
			"src/contracts/interfaces/ILendingPool.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\nimport {ILendingPoolAddressesProvider} from './ILendingPoolAddressesProvider.sol';\nimport {DataTypes} from '../types/DataTypes.sol';\n\ninterface ILendingPool {\n  /**\n   * @dev Emitted on deposit()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the deposit\n   * @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n   * @param amount The amount deposited\n   * @param referral The referral code used\n   **/\n  event Deposit(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referral\n  );\n\n  /**\n   * @dev Emitted on withdraw()\n   * @param reserve The address of the underlyng asset being withdrawn\n   * @param user The address initiating the withdrawal, owner of aTokens\n   * @param to Address that will receive the underlying\n   * @param amount The amount to be withdrawn\n   **/\n  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);\n\n  /**\n   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n   * @param reserve The address of the underlying asset being borrowed\n   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n   * initiator of the transaction on flashLoan()\n   * @param onBehalfOf The address that will be getting the debt\n   * @param amount The amount borrowed out\n   * @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable\n   * @param borrowRate The numeric rate at which the user has borrowed\n   * @param referral The referral code used\n   **/\n  event Borrow(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint256 borrowRateMode,\n    uint256 borrowRate,\n    uint16 indexed referral\n  );\n\n  /**\n   * @dev Emitted on repay()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The beneficiary of the repayment, getting his debt reduced\n   * @param repayer The address of the user initiating the repay(), providing the funds\n   * @param amount The amount repaid\n   **/\n  event Repay(\n    address indexed reserve,\n    address indexed user,\n    address indexed repayer,\n    uint256 amount\n  );\n\n  /**\n   * @dev Emitted on swapBorrowRateMode()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user swapping his rate mode\n   * @param rateMode The rate mode that the user wants to swap to\n   **/\n  event Swap(address indexed reserve, address indexed user, uint256 rateMode);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   **/\n  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   **/\n  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on rebalanceStableBorrowRate()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user for which the rebalance has been executed\n   **/\n  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on flashLoan()\n   * @param target The address of the flash loan receiver contract\n   * @param initiator The address initiating the flash loan\n   * @param asset The address of the asset being flash borrowed\n   * @param amount The amount flash borrowed\n   * @param premium The fee flash borrowed\n   * @param referralCode The referral code used\n   **/\n  event FlashLoan(\n    address indexed target,\n    address indexed initiator,\n    address indexed asset,\n    uint256 amount,\n    uint256 premium,\n    uint16 referralCode\n  );\n\n  /**\n   * @dev Emitted when the pause is triggered.\n   */\n  event Paused();\n\n  /**\n   * @dev Emitted when the pause is lifted.\n   */\n  event Unpaused();\n\n  /**\n   * @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n   * LendingPoolCollateral manager using a DELEGATECALL\n   * This allows to have the events in the generated ABI for LendingPool.\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n   * @param liquidator The address of the liquidator\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   **/\n  event LiquidationCall(\n    address indexed collateralAsset,\n    address indexed debtAsset,\n    address indexed user,\n    uint256 debtToCover,\n    uint256 liquidatedCollateralAmount,\n    address liquidator,\n    bool receiveAToken\n  );\n\n  /**\n   * @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n   * in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n   * the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n   * gets added to the LendingPool ABI\n   * @param reserve The address of the underlying asset of the reserve\n   * @param liquidityRate The new liquidity rate\n   * @param stableBorrowRate The new stable borrow rate\n   * @param variableBorrowRate The new variable borrow rate\n   * @param liquidityIndex The new liquidity index\n   * @param variableBorrowIndex The new variable borrow index\n   **/\n  event ReserveDataUpdated(\n    address indexed reserve,\n    uint256 liquidityRate,\n    uint256 stableBorrowRate,\n    uint256 variableBorrowRate,\n    uint256 liquidityIndex,\n    uint256 variableBorrowIndex\n  );\n\n  /**\n   * @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n   * @param asset The address of the underlying asset to deposit\n   * @param amount The amount to be deposited\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function deposit(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n   * @param asset The address of the underlying asset to withdraw\n   * @param amount The underlying amount to be withdrawn\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n   * @param to Address that will receive the underlying, same as msg.sender if the user\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   *   different wallet\n   * @return The final amount withdrawn\n   **/\n  function withdraw(\n    address asset,\n    uint256 amount,\n    address to\n  ) external returns (uint256);\n\n  /**\n   * @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n   * already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n   * corresponding debt token (StableDebtToken or VariableDebtToken)\n   * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n   * @param asset The address of the underlying asset to borrow\n   * @param amount The amount to be borrowed\n   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n   * if he has been given credit delegation allowance\n   **/\n  function borrow(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    uint16 referralCode,\n    address onBehalfOf\n  ) external;\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @return The final amount repaid\n   **/\n  function repay(\n    address asset,\n    uint256 amount,\n    uint256 rateMode,\n    address onBehalfOf\n  ) external returns (uint256);\n\n  /**\n   * @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n   * @param asset The address of the underlying asset borrowed\n   * @param rateMode The rate mode that the user wants to swap to\n   **/\n  function swapBorrowRateMode(address asset, uint256 rateMode) external;\n\n  /**\n   * @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n   * - Users can be rebalanced if the following conditions are satisfied:\n   *     1. Usage ratio is above 95%\n   *     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n   *        borrowed at a stable rate and depositors are not earning enough\n   * @param asset The address of the underlying asset borrowed\n   * @param user The address of the user to be rebalanced\n   **/\n  function rebalanceStableBorrowRate(address asset, address user) external;\n\n  /**\n   * @dev Allows depositors to enable/disable a specific deposited asset as collateral\n   * @param asset The address of the underlying asset deposited\n   * @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise\n   **/\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\n\n  /**\n   * @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n   * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   **/\n  function liquidationCall(\n    address collateralAsset,\n    address debtAsset,\n    address user,\n    uint256 debtToCover,\n    bool receiveAToken\n  ) external;\n\n  /**\n   * @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n   * For further details please visit https://developers.aave.com\n   * @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n   * @param assets The addresses of the assets being flash-borrowed\n   * @param amounts The amounts amounts being flash-borrowed\n   * @param modes Types of the debt to open if the flash loan is not returned:\n   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function flashLoan(\n    address receiverAddress,\n    address[] calldata assets,\n    uint256[] calldata amounts,\n    uint256[] calldata modes,\n    address onBehalfOf,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @dev Returns the user account data across all the reserves\n   * @param user The address of the user\n   * @return totalCollateralETH the total collateral in ETH of the user\n   * @return totalDebtETH the total debt in ETH of the user\n   * @return availableBorrowsETH the borrowing power left of the user\n   * @return currentLiquidationThreshold the liquidation threshold of the user\n   * @return ltv the loan to value of the user\n   * @return healthFactor the current health factor of the user\n   **/\n  function getUserAccountData(address user)\n    external\n    view\n    returns (\n      uint256 totalCollateralETH,\n      uint256 totalDebtETH,\n      uint256 availableBorrowsETH,\n      uint256 currentLiquidationThreshold,\n      uint256 ltv,\n      uint256 healthFactor\n    );\n\n  function initReserve(\n    address reserve,\n    address aTokenAddress,\n    address stableDebtAddress,\n    address variableDebtAddress,\n    address interestRateStrategyAddress\n  ) external;\n\n  function setReserveInterestRateStrategyAddress(address reserve, address rateStrategyAddress)\n    external;\n\n  function setConfiguration(address reserve, uint256 configuration) external;\n\n  /**\n   * @dev Returns the configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The configuration of the reserve\n   **/\n  function getConfiguration(address asset)\n    external\n    view\n    returns (DataTypes.ReserveConfigurationMap memory);\n\n  /**\n   * @dev Returns the configuration of the user across all the reserves\n   * @param user The user address\n   * @return The configuration of the user\n   **/\n  function getUserConfiguration(address user)\n    external\n    view\n    returns (DataTypes.UserConfigurationMap memory);\n\n  /**\n   * @dev Returns the normalized income normalized income of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve's normalized income\n   */\n  function getReserveNormalizedIncome(address asset) external view returns (uint256);\n\n  /**\n   * @dev Returns the normalized variable debt per unit of asset\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve normalized variable debt\n   */\n  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);\n\n  /**\n   * @dev Returns the state and configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The state of the reserve\n   **/\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\n\n  function finalizeTransfer(\n    address asset,\n    address from,\n    address to,\n    uint256 amount,\n    uint256 balanceFromAfter,\n    uint256 balanceToBefore\n  ) external;\n\n  function getReservesList() external view returns (address[] memory);\n\n  function getAddressesProvider() external view returns (ILendingPoolAddressesProvider);\n\n  function setPause(bool val) external;\n\n  function paused() external view returns (bool);\n}\n"
			},
			"src/contracts/interfaces/IAgToken.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IScaledBalanceToken} from \"./IScaledBalanceToken.sol\";\n\ninterface IAgToken is IERC20, IScaledBalanceToken {\n    /**\n     * @dev Emitted after the mint action\n     * @param from The address performing the mint\n     * @param value The amount being\n     * @param index The new liquidity index of the reserve\n     *\n     */\n    event Mint(address indexed from, uint256 value, uint256 index);\n\n\n    function POOL() external returns (address);\n\n    function UNDERLYING_ASSET_ADDRESS() external returns (address);\n\n    /**\n     * @dev Mints `amount` agTokens to `user`\n     * @param user The address receiving the minted tokens\n     * @param amount The amount of tokens getting minted\n     * @param index The new liquidity index of the reserve\n     * @return `true` if the the previous balance of the user was 0\n     */\n    function mint(address user, uint256 amount, uint256 index)\n        external\n        returns (bool);\n\n    /**\n     * @dev Emitted after agTokens are burned\n     * @param from The owner of the agTokens, getting them burned\n     * @param target The address that will receive the underlying\n     * @param value The amount being burned\n     * @param index The new liquidity index of the reserve\n     *\n     */\n    event Burn(\n        address indexed from,\n        address indexed target,\n        uint256 value,\n        uint256 index\n    );\n\n    /**\n     * @dev Emitted during the transfer action\n     * @param from The user whose tokens are being transferred\n     * @param to The recipient\n     * @param value The amount being transferred\n     * @param index The new liquidity index of the reserve\n     *\n     */\n    event BalanceTransfer(\n        address indexed from,\n        address indexed to,\n        uint256 value,\n        uint256 index\n    );\n\n    /**\n     * @dev Burns agTokens from `user` and sends the equivalent amount of underlying to `receiverOfUnderlying`\n     * @param user The owner of the agTokens, getting them burned\n     * @param receiverOfUnderlying The address that will receive the underlying\n     * @param amount The amount being burned\n     * @param index The new liquidity index of the reserve\n     *\n     */\n    function burn(\n        address user,\n        address receiverOfUnderlying,\n        uint256 amount,\n        uint256 index\n    )\n        external;\n\n    /**\n     * @dev Mints agTokens to the reserve treasury\n     * @param amount The amount of tokens getting minted\n     * @param index The new liquidity index of the reserve\n     */\n    function mintToTreasury(uint256 amount, uint256 index) external;\n\n    /**\n     * @dev Transfers agTokens in the event of a borrow being liquidated, in case the liquidators reclaims the agToken\n     * @param from The address getting liquidated, current owner of the agTokens\n     * @param to The recipient\n     * @param value The amount of tokens getting transferred\n     *\n     */\n    function transferOnLiquidation(address from, address to, uint256 value)\n        external;\n\n    /**\n     * @dev Transfers the underlying asset to `target`. Used by the LendingPool to transfer\n     * assets in borrow(), withdraw() and flashLoan()\n     * @param user The recipient of the agTokens\n     * @param amount The amount getting transferred\n     * @return The amount transferred\n     *\n     */\n    function transferUnderlyingTo(address user, uint256 amount)\n        external\n        returns (uint256);\n}\n"
			},
			"lib/solmate/src/tokens/ERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\nabstract contract ERC20 {\n    /*//////////////////////////////////////////////////////////////\n                                 EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /*//////////////////////////////////////////////////////////////\n                            METADATA STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    string public name;\n\n    string public symbol;\n\n    uint8 public immutable decimals;\n\n    /*//////////////////////////////////////////////////////////////\n                              ERC20 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 public totalSupply;\n\n    mapping(address => uint256) public balanceOf;\n\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    /*//////////////////////////////////////////////////////////////\n                            EIP-2612 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 internal immutable INITIAL_CHAIN_ID;\n\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\n\n    mapping(address => uint256) public nonces;\n\n    /*//////////////////////////////////////////////////////////////\n                               CONSTRUCTOR\n    //////////////////////////////////////////////////////////////*/\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint8 _decimals\n    ) {\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n\n        INITIAL_CHAIN_ID = block.chainid;\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                               ERC20 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\n        allowance[msg.sender][spender] = amount;\n\n        emit Approval(msg.sender, spender, amount);\n\n        return true;\n    }\n\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\n        balanceOf[msg.sender] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(msg.sender, to, amount);\n\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual returns (bool) {\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\n\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\n\n        balanceOf[from] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        return true;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                             EIP-2612 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        require(deadline >= block.timestamp, \"PERMIT_DEADLINE_EXPIRED\");\n\n        // Unchecked because the only math done is incrementing\n        // the owner's nonce which cannot realistically overflow.\n        unchecked {\n            address recoveredAddress = ecrecover(\n                keccak256(\n                    abi.encodePacked(\n                        \"\\x19\\x01\",\n                        DOMAIN_SEPARATOR(),\n                        keccak256(\n                            abi.encode(\n                                keccak256(\n                                    \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\n                                ),\n                                owner,\n                                spender,\n                                value,\n                                nonces[owner]++,\n                                deadline\n                            )\n                        )\n                    )\n                ),\n                v,\n                r,\n                s\n            );\n\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \"INVALID_SIGNER\");\n\n            allowance[recoveredAddress][spender] = value;\n        }\n\n        emit Approval(owner, spender, value);\n    }\n\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\n    }\n\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                    keccak256(bytes(name)),\n                    keccak256(\"1\"),\n                    block.chainid,\n                    address(this)\n                )\n            );\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        INTERNAL MINT/BURN LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function _mint(address to, uint256 amount) internal virtual {\n        totalSupply += amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(address(0), to, amount);\n    }\n\n    function _burn(address from, uint256 amount) internal virtual {\n        balanceOf[from] -= amount;\n\n        // Cannot underflow because a user's balance\n        // will never be larger than the total supply.\n        unchecked {\n            totalSupply -= amount;\n        }\n\n        emit Transfer(from, address(0), amount);\n    }\n}\n"
			},
			"src/contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\n/**\n * @title LendingPoolAddressesProvider contract\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\n * - Owned by the Aave Governance\n * @author Aave\n **/\ninterface ILendingPoolAddressesProvider {\n  event MarketIdSet(string newMarketId);\n  event LendingPoolUpdated(address indexed newAddress);\n  event ConfigurationAdminUpdated(address indexed newAddress);\n  event EmergencyAdminUpdated(address indexed newAddress);\n  event LendingPoolConfiguratorUpdated(address indexed newAddress);\n  event LendingPoolCollateralManagerUpdated(address indexed newAddress);\n  event PriceOracleUpdated(address indexed newAddress);\n  event LendingRateOracleUpdated(address indexed newAddress);\n  event ProxyCreated(bytes32 id, address indexed newAddress);\n  event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\n\n  function getMarketId() external view returns (string memory);\n\n  function setMarketId(string calldata marketId) external;\n\n  function setAddress(bytes32 id, address newAddress) external;\n\n  function setAddressAsProxy(bytes32 id, address impl) external;\n\n  function getAddress(bytes32 id) external view returns (address);\n\n  function getLendingPool() external view returns (address);\n\n  function setLendingPoolImpl(address pool) external;\n\n  function getLendingPoolConfigurator() external view returns (address);\n\n  function setLendingPoolConfiguratorImpl(address configurator) external;\n\n  function getLendingPoolCollateralManager() external view returns (address);\n\n  function setLendingPoolCollateralManager(address manager) external;\n\n  function getPoolAdmin() external view returns (address);\n\n  function setPoolAdmin(address admin) external;\n\n  function getEmergencyAdmin() external view returns (address);\n\n  function setEmergencyAdmin(address admin) external;\n\n  function getPriceOracle() external view returns (address);\n\n  function setPriceOracle(address priceOracle) external;\n\n  function getLendingRateOracle() external view returns (address);\n\n  function setLendingRateOracle(address lendingRateOracle) external;\n}\n"
			},
			"src/contracts/interfaces/IScaledBalanceToken.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\ninterface IScaledBalanceToken {\n  /**\n   * @dev Returns the scaled balance of the user. The scaled balance is the sum of all the\n   * updated stored balance divided by the reserve's liquidity index at the moment of the update\n   * @param user The user whose balance is calculated\n   * @return The scaled balance of the user\n   **/\n  function scaledBalanceOf(address user) external view returns (uint256);\n\n  /**\n   * @dev Returns the scaled balance of the user and the scaled total supply.\n   * @param user The address of the user\n   * @return The scaled balance of the user\n   * @return The scaled balance and the scaled total supply\n   **/\n  function getScaledUserBalanceAndSupply(address user) external view returns (uint256, uint256);\n\n  /**\n   * @dev Returns the scaled total supply of the variable debt token. Represents sum(debt/index)\n   * @return The scaled total supply\n   **/\n  function scaledTotalSupply() external view returns (uint256);\n}\n"
			},
			"src/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\npragma solidity >=0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"lib/solmate/src/tokens/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)",
						"details": "Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\",\"details\":\"Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Modern and gas efficient ERC20 + EIP-2612 implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/solmate/src/tokens/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x0240f7703cff32a61ee3e9fbb339e09a944260432a9ef37debf3692b1a6c8049\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2d8b0c0158b1952a87c327d506a645040924a94c8f9f937184659f8a8e3b0759\",\"dweb:/ipfs/QmZ9rGdkjRCk8zfr4xeH7Jh88tkWJNt9LvG1o2GcCm7Uqa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 20,
								"contract": "lib/solmate/src/tokens/ERC20.sol:ERC20",
								"label": "name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 22,
								"contract": "lib/solmate/src/tokens/ERC20.sol:ERC20",
								"label": "symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "lib/solmate/src/tokens/ERC20.sol:ERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 30,
								"contract": "lib/solmate/src/tokens/ERC20.sol:ERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 36,
								"contract": "lib/solmate/src/tokens/ERC20.sol:ERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 44,
								"contract": "lib/solmate/src/tokens/ERC20.sol:ERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Modern and gas efficient ERC20 + EIP-2612 implementation.",
						"version": 1
					}
				}
			},
			"src/contracts/WrappedAgToken.sol": {
				"WrappedAgToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenSymbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "tokenDecimals",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "_underlyingAgToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_interestCollector",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "governanceAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawal",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "POOL",
							"outputs": [
								{
									"internalType": "contract ILendingPool",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "interestCollector",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "manager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveAsset",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newCollector",
									"type": "address"
								}
							],
							"name": "setInterestCollector",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "setManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "underlyingAgToken",
							"outputs": [
								{
									"internalType": "contract IAgToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"author": "Luigy-Lemon (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/WETH.sol)Inspired by Solmate WETH (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/WETH.sol)",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/contracts/WrappedAgToken.sol\":552:3406  contract WrappedAgToken is ERC20 {... */\n  mstore(0x40, 0xe0)\n    /* \"src/contracts/WrappedAgToken.sol\":872:873  0 */\n  0x00\n    /* \"src/contracts/WrappedAgToken.sol\":849:873  uint256 userDeposits = 0 */\n  0x06\n  sstore\n    /* \"src/contracts/WrappedAgToken.sol\":1049:1509  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/contracts/WrappedAgToken.sol\":1251:1260  tokenName */\n  dup6\n    /* \"src/contracts/WrappedAgToken.sol\":1262:1273  tokenSymbol */\n  dup6\n    /* \"src/contracts/WrappedAgToken.sol\":1275:1288  tokenDecimals */\n  dup6\n    /* \"lib/solmate/src/tokens/ERC20.sol\":2098:2103  _name */\n  dup3\n    /* \"lib/solmate/src/tokens/ERC20.sol\":2091:2095  name */\n  0x00\n    /* \"lib/solmate/src/tokens/ERC20.sol\":2091:2103  name = _name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_7\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"lib/solmate/src/tokens/ERC20.sol\":2113:2129  symbol = _symbol */\n  dup2\n  mload\n  tag_9\n  swap1\n    /* \"lib/solmate/src/tokens/ERC20.sol\":2113:2119  symbol */\n  0x01\n  swap1\n    /* \"lib/solmate/src/tokens/ERC20.sol\":2113:2129  symbol = _symbol */\n  0x20\n  dup6\n  add\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"lib/solmate/src/tokens/ERC20.sol\":2139:2159  decimals = _decimals */\n  0xff\n  dup2\n  and\n  0x80\n  mstore\n    /* \"lib/solmate/src/tokens/ERC20.sol\":2189:2202  block.chainid */\n  chainid\n    /* \"lib/solmate/src/tokens/ERC20.sol\":2170:2202  INITIAL_CHAIN_ID = block.chainid */\n  0xa0\n  mstore\n    /* \"lib/solmate/src/tokens/ERC20.sol\":2239:2263  computeDomainSeparator() */\n  tag_10\n    /* \"lib/solmate/src/tokens/ERC20.sol\":2239:2261  computeDomainSeparator */\n  tag_11\n    /* \"lib/solmate/src/tokens/ERC20.sol\":2239:2263  computeDomainSeparator() */\n  jump\t// in\ntag_10:\n    /* \"lib/solmate/src/tokens/ERC20.sol\":2212:2263  INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator() */\n  0xc0\n  mstore\n  pop\n  pop\n    /* \"src/contracts/WrappedAgToken.sol\":1296:1313  interestCollector */\n  0x08\n    /* \"src/contracts/WrappedAgToken.sol\":1296:1334  interestCollector = _interestCollector */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap5\n  dup6\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"src/contracts/WrappedAgToken.sol\":1340:1357  underlyingAgToken */\n  0x0a\n    /* \"src/contracts/WrappedAgToken.sol\":1340:1388  underlyingAgToken = IAgToken(_underlyingAgToken) */\n  dup1\n  sload\n  swap6\n  dup6\n  and\n  swap6\n  dup3\n  and\n  dup7\n  or\n  swap1\n  sstore\n    /* \"src/contracts/WrappedAgToken.sol\":1394:1398  POOL */\n  0x0b\n    /* \"src/contracts/WrappedAgToken.sol\":1394:1432  POOL = ILendingPool(governanceAddress) */\n  dup1\n  sload\n  swap4\n  swap1\n  swap5\n  and\n  swap3\n  dup2\n  and\n  dup4\n  or\n  swap1\n  swap4\n  sstore\n  pop\n    /* \"src/contracts/WrappedAgToken.sol\":1438:1450  reserveAsset */\n  0x09\n    /* \"src/contracts/WrappedAgToken.sol\":1438:1471  reserveAsset = _underlyingAgToken */\n  dup1\n  sload\n  dup4\n  and\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"src/contracts/WrappedAgToken.sol\":1477:1484  manager */\n  0x07\n    /* \"src/contracts/WrappedAgToken.sol\":1477:1504  manager = governanceAddress */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/contracts/WrappedAgToken.sol\":552:3406  contract WrappedAgToken is ERC20 {... */\n  tag_34\n  swap2\n  pop\n  pop\n  jump\n    /* \"lib/solmate/src/tokens/ERC20.sol\":5507:5953  function computeDomainSeparator() internal view virtual returns (bytes32) {... */\ntag_11:\n    /* \"lib/solmate/src/tokens/ERC20.sol\":5572:5579  bytes32 */\n  0x00\n    /* \"lib/solmate/src/tokens/ERC20.sol\":5669:5764  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"lib/solmate/src/tokens/ERC20.sol\":5802:5806  name */\n  0x00\n    /* \"lib/solmate/src/tokens/ERC20.sol\":5786:5808  keccak256(bytes(name)) */\n  mload(0x40)\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  0x40\n  dup1\n  mload\n  swap2\n  dup3\n  swap1\n  sub\n  dup3\n  keccak256\n    /* \"lib/solmate/src/tokens/ERC20.sol\":5637:5932  abi.encode(... */\n  0x20\n  dup4\n  add\n    /* \"#utility.yul\":4075:4100   */\n  swap4\n  swap1\n  swap4\n  mstore\n    /* \"#utility.yul\":4116:4134   */\n  dup2\n  add\n    /* \"#utility.yul\":4109:4143   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"lib/solmate/src/tokens/ERC20.sol\":5830:5844  keccak256(\"1\") */\n  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n    /* \"#utility.yul\":4159:4177   */\n  0x60\n  dup3\n  add\n    /* \"#utility.yul\":4152:4186   */\n  mstore\n    /* \"lib/solmate/src/tokens/ERC20.sol\":5866:5879  block.chainid */\n  chainid\n    /* \"#utility.yul\":4202:4220   */\n  0x80\n  dup3\n  add\n    /* \"#utility.yul\":4195:4229   */\n  mstore\n    /* \"lib/solmate/src/tokens/ERC20.sol\":5909:5913  this */\n  address\n    /* \"#utility.yul\":4245:4264   */\n  0xa0\n  dup3\n  add\n    /* \"#utility.yul\":4238:4299   */\n  mstore\n    /* \"#utility.yul\":4047:4066   */\n  0xc0\n  add\n    /* \"lib/solmate/src/tokens/ERC20.sol\":5637:5932  abi.encode(... */\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"lib/solmate/src/tokens/ERC20.sol\":5610:5946  keccak256(... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"lib/solmate/src/tokens/ERC20.sol\":5591:5946  return... */\n  swap1\n  pop\n    /* \"lib/solmate/src/tokens/ERC20.sol\":5507:5953  function computeDomainSeparator() internal view virtual returns (bytes32) {... */\n  swap1\n  jump\t// out\n    /* \"src/contracts/WrappedAgToken.sol\":552:3406  contract WrappedAgToken is ERC20 {... */\ntag_8:\n  dup3\n  dup1\n  sload\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_22\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_25)\ntag_22:\n  dup3\n  0x1f\n  lt\n  tag_23\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_25)\ntag_23:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_25\n  jumpi\n  swap2\n  dup3\n  add\ntag_24:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_25\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_24)\ntag_25:\n  pop\n  tag_26\n  swap3\n  swap2\n  pop\n  tag_27\n  jump\t// in\ntag_26:\n  pop\n  swap1\n  jump\t// out\ntag_27:\ntag_28:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_26\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_28)\n    /* \"#utility.yul\":14:141   */\ntag_30:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_31:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_37:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_39\n  tag_30\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_41\n  tag_30\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_42:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_43:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_43)\ntag_45:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_46:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1213   */\ntag_32:\n    /* \"#utility.yul\":1115:1128   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1157:1188   */\n  dup2\n  and\n    /* \"#utility.yul\":1147:1189   */\n  dup2\n  eq\n    /* \"#utility.yul\":1137:1207   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1203:1204   */\n  0x00\n    /* \"#utility.yul\":1200:1201   */\n  dup1\n    /* \"#utility.yul\":1193:1205   */\n  revert\n    /* \"#utility.yul\":1137:1207   */\ntag_48:\n    /* \"#utility.yul\":1036:1213   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1218:2188   */\ntag_3:\n    /* \"#utility.yul\":1351:1357   */\n  0x00\n    /* \"#utility.yul\":1359:1365   */\n  dup1\n    /* \"#utility.yul\":1367:1373   */\n  0x00\n    /* \"#utility.yul\":1375:1381   */\n  dup1\n    /* \"#utility.yul\":1383:1389   */\n  0x00\n    /* \"#utility.yul\":1391:1397   */\n  dup1\n    /* \"#utility.yul\":1444:1447   */\n  0xc0\n    /* \"#utility.yul\":1432:1441   */\n  dup8\n    /* \"#utility.yul\":1423:1430   */\n  dup10\n    /* \"#utility.yul\":1419:1442   */\n  sub\n    /* \"#utility.yul\":1415:1448   */\n  slt\n    /* \"#utility.yul\":1412:1465   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1412:1465   */\ntag_50:\n    /* \"#utility.yul\":1488:1504   */\n  dup7\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1553:1567   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1550:1584   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1580:1581   */\n  0x00\n    /* \"#utility.yul\":1577:1578   */\n  dup1\n    /* \"#utility.yul\":1570:1582   */\n  revert\n    /* \"#utility.yul\":1550:1584   */\ntag_51:\n    /* \"#utility.yul\":1603:1664   */\n  tag_52\n    /* \"#utility.yul\":1656:1663   */\n  dup11\n    /* \"#utility.yul\":1647:1653   */\n  dup4\n    /* \"#utility.yul\":1636:1645   */\n  dup12\n    /* \"#utility.yul\":1632:1654   */\n  add\n    /* \"#utility.yul\":1603:1664   */\n  tag_31\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1593:1664   */\n  swap8\n  pop\n    /* \"#utility.yul\":1710:1712   */\n  0x20\n    /* \"#utility.yul\":1699:1708   */\n  dup10\n    /* \"#utility.yul\":1695:1713   */\n  add\n    /* \"#utility.yul\":1689:1714   */\n  mload\n    /* \"#utility.yul\":1673:1714   */\n  swap2\n  pop\n    /* \"#utility.yul\":1739:1741   */\n  dup1\n    /* \"#utility.yul\":1729:1737   */\n  dup3\n    /* \"#utility.yul\":1726:1742   */\n  gt\n    /* \"#utility.yul\":1723:1759   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1752:1753   */\n  dup1\n    /* \"#utility.yul\":1745:1757   */\n  revert\n    /* \"#utility.yul\":1723:1759   */\ntag_53:\n  pop\n    /* \"#utility.yul\":1778:1841   */\n  tag_54\n    /* \"#utility.yul\":1833:1840   */\n  dup10\n    /* \"#utility.yul\":1822:1830   */\n  dup3\n    /* \"#utility.yul\":1811:1820   */\n  dup11\n    /* \"#utility.yul\":1807:1831   */\n  add\n    /* \"#utility.yul\":1778:1841   */\n  tag_31\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1768:1841   */\n  swap6\n  pop\n  pop\n    /* \"#utility.yul\":1884:1886   */\n  0x40\n    /* \"#utility.yul\":1873:1882   */\n  dup8\n    /* \"#utility.yul\":1869:1887   */\n  add\n    /* \"#utility.yul\":1863:1888   */\n  mload\n    /* \"#utility.yul\":1928:1932   */\n  0xff\n    /* \"#utility.yul\":1921:1926   */\n  dup2\n    /* \"#utility.yul\":1917:1933   */\n  and\n    /* \"#utility.yul\":1910:1915   */\n  dup2\n    /* \"#utility.yul\":1907:1934   */\n  eq\n    /* \"#utility.yul\":1897:1952   */\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1948:1949   */\n  0x00\n    /* \"#utility.yul\":1945:1946   */\n  dup1\n    /* \"#utility.yul\":1938:1950   */\n  revert\n    /* \"#utility.yul\":1897:1952   */\ntag_55:\n    /* \"#utility.yul\":1971:1976   */\n  swap4\n  pop\n    /* \"#utility.yul\":1995:2044   */\n  tag_56\n    /* \"#utility.yul\":2040:2042   */\n  0x60\n    /* \"#utility.yul\":2025:2043   */\n  dup9\n  add\n    /* \"#utility.yul\":1995:2044   */\n  tag_32\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1985:2044   */\n  swap3\n  pop\n    /* \"#utility.yul\":2063:2113   */\n  tag_57\n    /* \"#utility.yul\":2108:2111   */\n  0x80\n    /* \"#utility.yul\":2097:2106   */\n  dup9\n    /* \"#utility.yul\":2093:2112   */\n  add\n    /* \"#utility.yul\":2063:2113   */\n  tag_32\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2053:2113   */\n  swap2\n  pop\n    /* \"#utility.yul\":2132:2182   */\n  tag_58\n    /* \"#utility.yul\":2177:2180   */\n  0xa0\n    /* \"#utility.yul\":2166:2175   */\n  dup9\n    /* \"#utility.yul\":2162:2181   */\n  add\n    /* \"#utility.yul\":2132:2182   */\n  tag_32\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2122:2182   */\n  swap1\n  pop\n    /* \"#utility.yul\":1218:2188   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":2193:2573   */\ntag_20:\n    /* \"#utility.yul\":2272:2273   */\n  0x01\n    /* \"#utility.yul\":2268:2280   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2315:2327   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2336:2397   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2390:2394   */\n  0x7f\n    /* \"#utility.yul\":2382:2388   */\n  dup3\n    /* \"#utility.yul\":2378:2395   */\n  and\n    /* \"#utility.yul\":2368:2395   */\n  swap2\n  pop\n    /* \"#utility.yul\":2336:2397   */\ntag_60:\n    /* \"#utility.yul\":2443:2445   */\n  0x20\n    /* \"#utility.yul\":2435:2441   */\n  dup3\n    /* \"#utility.yul\":2432:2446   */\n  lt\n    /* \"#utility.yul\":2412:2430   */\n  dup2\n    /* \"#utility.yul\":2409:2447   */\n  sub\n    /* \"#utility.yul\":2406:2567   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":2489:2499   */\n  0x4e487b71\n    /* \"#utility.yul\":2484:2487   */\n  0xe0\n    /* \"#utility.yul\":2480:2500   */\n  shl\n    /* \"#utility.yul\":2477:2478   */\n  0x00\n    /* \"#utility.yul\":2470:2501   */\n  mstore\n    /* \"#utility.yul\":2524:2528   */\n  0x22\n    /* \"#utility.yul\":2521:2522   */\n  0x04\n    /* \"#utility.yul\":2514:2529   */\n  mstore\n    /* \"#utility.yul\":2552:2556   */\n  0x24\n    /* \"#utility.yul\":2549:2550   */\n  0x00\n    /* \"#utility.yul\":2542:2557   */\n  revert\n    /* \"#utility.yul\":2406:2567   */\ntag_61:\n  pop\n    /* \"#utility.yul\":2193:2573   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2707:3811   */\ntag_16:\n    /* \"#utility.yul\":2837:2840   */\n  0x00\n    /* \"#utility.yul\":2866:2867   */\n  dup1\n    /* \"#utility.yul\":2899:2905   */\n  dup4\n    /* \"#utility.yul\":2893:2906   */\n  sload\n    /* \"#utility.yul\":2929:2932   */\n  dup2\n    /* \"#utility.yul\":2951:2952   */\n  0x01\n    /* \"#utility.yul\":2979:2988   */\n  dup3\n    /* \"#utility.yul\":2975:2977   */\n  dup2\n    /* \"#utility.yul\":2971:2989   */\n  shr\n    /* \"#utility.yul\":2961:2989   */\n  swap2\n  pop\n    /* \"#utility.yul\":3039:3041   */\n  dup1\n    /* \"#utility.yul\":3028:3037   */\n  dup4\n    /* \"#utility.yul\":3024:3042   */\n  and\n    /* \"#utility.yul\":3061:3079   */\n  dup1\n    /* \"#utility.yul\":3051:3112   */\n  tag_64\n  jumpi\n    /* \"#utility.yul\":3105:3109   */\n  0x7f\n    /* \"#utility.yul\":3097:3103   */\n  dup4\n    /* \"#utility.yul\":3093:3110   */\n  and\n    /* \"#utility.yul\":3083:3110   */\n  swap3\n  pop\n    /* \"#utility.yul\":3051:3112   */\ntag_64:\n    /* \"#utility.yul\":3131:3133   */\n  0x20\n    /* \"#utility.yul\":3179:3181   */\n  dup1\n    /* \"#utility.yul\":3171:3177   */\n  dup5\n    /* \"#utility.yul\":3168:3182   */\n  lt\n    /* \"#utility.yul\":3148:3166   */\n  dup3\n    /* \"#utility.yul\":3145:3183   */\n  sub\n    /* \"#utility.yul\":3142:3307   */\n  tag_65\n  jumpi\n  shl(0xe0, 0x4e487b71)\n    /* \"#utility.yul\":3206:3239   */\n  dup7\n  mstore\n    /* \"#utility.yul\":3262:3266   */\n  0x22\n    /* \"#utility.yul\":3259:3260   */\n  0x04\n    /* \"#utility.yul\":3252:3267   */\n  mstore\n    /* \"#utility.yul\":3292:3296   */\n  0x24\n    /* \"#utility.yul\":3213:3216   */\n  dup7\n    /* \"#utility.yul\":3280:3297   */\n  revert\n    /* \"#utility.yul\":3142:3307   */\ntag_65:\n    /* \"#utility.yul\":3323:3341   */\n  dup2\n    /* \"#utility.yul\":3350:3454   */\n  dup1\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":3468:3469   */\n  0x01\n    /* \"#utility.yul\":3463:3786   */\n  dup2\n  eq\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3316:3786   */\n  jump(tag_66)\n    /* \"#utility.yul\":3350:3454   */\ntag_67:\n  not(0xff)\n    /* \"#utility.yul\":3383:3407   */\n  dup7\n  and\n    /* \"#utility.yul\":3371:3408   */\n  dup10\n  mstore\n    /* \"#utility.yul\":3428:3444   */\n  dup5\n  dup10\n  add\n  swap7\n  pop\n    /* \"#utility.yul\":3350:3454   */\n  jump(tag_66)\n    /* \"#utility.yul\":3463:3786   */\ntag_68:\n    /* \"#utility.yul\":2654:2655   */\n  0x00\n    /* \"#utility.yul\":2647:2661   */\n  dup11\n  dup2\n  mstore\n    /* \"#utility.yul\":2691:2695   */\n  0x20\n    /* \"#utility.yul\":2678:2696   */\n  swap1\n  keccak256\n    /* \"#utility.yul\":3561:3562   */\n  0x00\n    /* \"#utility.yul\":3575:3740   */\ntag_70:\n    /* \"#utility.yul\":3589:3595   */\n  dup7\n    /* \"#utility.yul\":3586:3587   */\n  dup2\n    /* \"#utility.yul\":3583:3596   */\n  lt\n    /* \"#utility.yul\":3575:3740   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":3667:3681   */\n  dup2\n  sload\n    /* \"#utility.yul\":3654:3665   */\n  dup12\n  dup3\n  add\n    /* \"#utility.yul\":3647:3682   */\n  mstore\n    /* \"#utility.yul\":3710:3726   */\n  swap1\n  dup6\n  add\n  swap1\n    /* \"#utility.yul\":3604:3614   */\n  dup4\n  add\n    /* \"#utility.yul\":3575:3740   */\n  jump(tag_70)\ntag_72:\n    /* \"#utility.yul\":3579:3582   */\n  pop\n  pop\n    /* \"#utility.yul\":3769:3775   */\n  dup5\n    /* \"#utility.yul\":3764:3767   */\n  dup10\n    /* \"#utility.yul\":3760:3776   */\n  add\n    /* \"#utility.yul\":3753:3776   */\n  swap7\n  pop\n    /* \"#utility.yul\":3316:3786   */\ntag_66:\n  pop\n    /* \"#utility.yul\":3802:3805   */\n  swap5\n  swap9\n    /* \"#utility.yul\":2707:3811   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3816:4305   */\ntag_34:\n    /* \"src/contracts/WrappedAgToken.sol\":552:3406  contract WrappedAgToken is ERC20 {... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x880de8116b3dfac28e9ff528a9fef1d1e0a51449c1addce011ffec1f302992b6\")\n  0x00\n  assignImmutable(\"0xd67d834462ca31eaef1f30157e31659f60355143b7441e6fc7d9eae1fa79f3f8\")\n  0x00\n  assignImmutable(\"0x6585423cb6456b1d4957f6454d2f004f0c4f58d53a00082412d5c2ef4b1b31fd\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/contracts/WrappedAgToken.sol\":552:3406  contract WrappedAgToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7535d246\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xbcaaf576\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xbcaaf576\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd0ebdbe7\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd859562c\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf85cb5c8\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x7535d246\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x313ce567\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x481c6a75\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6b6bd8d9\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"src/contracts/WrappedAgToken.sol\":3334:3397  require(msg.value < 0, \"Contract can only handle ERC20 tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":216:218   */\n      0x20\n        /* \"src/contracts/WrappedAgToken.sol\":3334:3397  require(msg.value < 0, \"Contract can only handle ERC20 tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":198:219   */\n      mstore\n        /* \"#utility.yul\":255:257   */\n      0x25\n        /* \"#utility.yul\":235:253   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":228:258   */\n      mstore\n        /* \"#utility.yul\":294:328   */\n      0x436f6e74726163742063616e206f6e6c792068616e646c652045524332302074\n        /* \"#utility.yul\":274:292   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":267:329   */\n      mstore\n      shl(0xd8, 0x6f6b656e73)\n        /* \"#utility.yul\":345:363   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":338:373   */\n      mstore\n        /* \"#utility.yul\":390:409   */\n      0x84\n      add\n        /* \"src/contracts/WrappedAgToken.sol\":3334:3397  require(msg.value < 0, \"Contract can only handle ERC20 tokens\") */\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_30:\n        /* \"src/contracts/WrappedAgToken.sol\":552:3406  contract WrappedAgToken is ERC20 {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"lib/solmate/src/tokens/ERC20.sol\":1028:1046  string public name */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2458:2669  function approve(address spender, uint256 amount) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":1624:1638   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1617:1639   */\n      iszero\n        /* \"#utility.yul\":1599:1640   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1587:1589   */\n      0x20\n        /* \"#utility.yul\":1572:1590   */\n      add\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2458:2669  function approve(address spender, uint256 amount) public virtual returns (bool) {... */\n      tag_36\n        /* \"#utility.yul\":1459:1646   */\n      jump\n        /* \"lib/solmate/src/tokens/ERC20.sol\":1301:1327  uint256 public totalSupply */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      sload(0x02)\n      dup2\n      jump\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":1797:1822   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1770:1788   */\n      add\n        /* \"lib/solmate/src/tokens/ERC20.sol\":1301:1327  uint256 public totalSupply */\n      tag_36\n        /* \"#utility.yul\":1651:1828   */\n      jump\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3054:3646  function transferFrom(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_39\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n        /* \"src/contracts/WrappedAgToken.sol\":2455:2683  function withdraw(uint256 amount) public {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_30\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"lib/solmate/src/tokens/ERC20.sol\":1080:1111  uint8 public immutable decimals */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      immutable(\"0x6585423cb6456b1d4957f6454d2f004f0c4f58d53a00082412d5c2ef4b1b31fd\")\n      dup2\n      jump\n    tag_62:\n      mload(0x40)\n        /* \"#utility.yul\":2523:2527   */\n      0xff\n        /* \"#utility.yul\":2511:2528   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2493:2529   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2481:2483   */\n      0x20\n        /* \"#utility.yul\":2466:2484   */\n      add\n        /* \"lib/solmate/src/tokens/ERC20.sol\":1080:1111  uint8 public immutable decimals */\n      tag_36\n        /* \"#utility.yul\":2351:2535   */\n      jump\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5324:5501  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_46\n      tag_68\n      jump\t// in\n        /* \"src/contracts/WrappedAgToken.sol\":879:901  address public manager */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      sload(0x07)\n      tag_72\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_72:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2886:2918   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2868:2919   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2856:2858   */\n      0x20\n        /* \"#utility.yul\":2841:2859   */\n      add\n        /* \"src/contracts/WrappedAgToken.sol\":879:901  address public manager */\n      tag_36\n        /* \"#utility.yul\":2722:2925   */\n      jump\n        /* \"src/contracts/WrappedAgToken.sol\":2870:3058  function claim() public {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_30\n      tag_78\n      jump\t// in\n        /* \"src/contracts/WrappedAgToken.sol\":907:939  address public interestCollector */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      sload(0x08)\n      tag_72\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"lib/solmate/src/tokens/ERC20.sol\":1334:1378  mapping(address => uint256) public balanceOf */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_46\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"src/contracts/WrappedAgToken.sol\":1017:1041  ILendingPool public POOL */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      sload(0x0b)\n      tag_72\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"lib/solmate/src/tokens/ERC20.sol\":1748:1789  mapping(address => uint256) public nonces */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_46\n      tag_96\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_96:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"lib/solmate/src/tokens/ERC20.sol\":1053:1073  string public symbol */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_34\n      tag_101\n      jump\t// in\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2675:3048  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_39\n      tag_105\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"src/contracts/WrappedAgToken.sol\":2203:2449  function deposit(uint256 amount) public isActive() {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_30\n      tag_110\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n        /* \"src/contracts/WrappedAgToken.sol\":3065:3187  function setInterestCollector(address newCollector) external isManager() {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_30\n      tag_114\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n        /* \"src/contracts/WrappedAgToken.sol\":3193:3291  function setManager(address newManager) external isManager() {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_30\n      tag_118\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3835:5318  function permit(... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_30\n      tag_122\n      calldatasize\n      0x04\n      tag_123\n      jump\t// in\n    tag_122:\n      tag_124\n      jump\t// in\n        /* \"src/contracts/WrappedAgToken.sol\":978:1011  IAgToken public underlyingAgToken */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      sload(0x0a)\n      tag_72\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"lib/solmate/src/tokens/ERC20.sol\":1385:1449  mapping(address => mapping(address => uint256)) public allowance */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_46\n      tag_132\n      calldatasize\n      0x04\n      tag_133\n      jump\t// in\n    tag_132:\n      0x04\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"src/contracts/WrappedAgToken.sol\":945:972  address public reserveAsset */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      sload(0x09)\n      tag_72\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"lib/solmate/src/tokens/ERC20.sol\":1028:1046  string public name */\n    tag_35:\n      0x00\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_142\n      swap1\n      tag_141\n      jump\t// in\n    tag_142:\n      dup1\n      iszero\n      tag_143\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_144\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_143)\n    tag_144:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_145:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_145\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2458:2669  function approve(address spender, uint256 amount) public virtual returns (bool) {... */\n    tag_42:\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2558:2568  msg.sender */\n      caller\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2532:2536  bool */\n      0x00\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2548:2569  allowance[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2548:2557  allowance */\n      0x04\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2548:2569  allowance[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2548:2578  allowance[msg.sender][spender] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2548:2587  allowance[msg.sender][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2603:2640  Approval(msg.sender, spender, amount) */\n      mload\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2532:2536  bool */\n      swap2\n      swap3\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2548:2578  allowance[msg.sender][spender] */\n      swap1\n      swap2\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2603:2640  Approval(msg.sender, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap1\n      tag_147\n      swap1\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2581:2587  amount */\n      dup7\n        /* \"#utility.yul\":1797:1822   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1770:1788   */\n      add\n      swap1\n        /* \"#utility.yul\":1651:1828   */\n      jump\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2603:2640  Approval(msg.sender, spender, amount) */\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2658:2662  true */\n      0x01\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2458:2669  function approve(address spender, uint256 amount) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3054:3646  function transferFrom(... */\n    tag_54:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3206:3221  allowance[from] */\n      dup4\n      and\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3172:3176  bool */\n      0x00\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3206:3221  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3206:3215  allowance */\n      0x04\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3206:3221  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3222:3232  msg.sender */\n      caller\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3206:3233  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      not(0x00)\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3284:3312  allowed != type(uint256).max */\n      dup2\n      eq\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3280:3360  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */\n      tag_149\n      jumpi\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3344:3360  allowed - amount */\n      tag_150\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3354:3360  amount */\n      dup4\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3344:3351  allowed */\n      dup3\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3344:3360  allowed - amount */\n      tag_151\n      jump\t// in\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3314:3329  allowance[from] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3314:3323  allowance */\n      0x04\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3314:3329  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3330:3340  msg.sender */\n      caller\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3314:3341  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3314:3360  allowance[from][msg.sender] = allowed - amount */\n      sstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3280:3360  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3371:3386  balanceOf[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3371:3380  balanceOf */\n      0x03\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3371:3386  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3371:3396  balanceOf[from] -= amount */\n      dup1\n      sload\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3390:3396  amount */\n      dup6\n      swap3\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3371:3386  balanceOf[from] */\n      swap1\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3371:3396  balanceOf[from] -= amount */\n      tag_152\n      swap1\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3390:3396  amount */\n      dup5\n      swap1\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3371:3396  balanceOf[from] -= amount */\n      tag_151\n      jump\t// in\n    tag_152:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3542:3555  balanceOf[to] */\n      dup1\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3542:3551  balanceOf */\n      0x03\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3542:3555  balanceOf[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3542:3565  balanceOf[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3591:3617  Transfer(from, to, amount) */\n      mload\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3542:3555  balanceOf[to] */\n      swap1\n      swap2\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3591:3617  Transfer(from, to, amount) */\n      dup8\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n      tag_153\n      swap1\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3559:3565  amount */\n      dup8\n        /* \"#utility.yul\":1797:1822   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1770:1788   */\n      add\n      swap1\n        /* \"#utility.yul\":1651:1828   */\n      jump\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3591:3617  Transfer(from, to, amount) */\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3635:3639  true */\n      0x01\n      swap5\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3054:3646  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/contracts/WrappedAgToken.sol\":2455:2683  function withdraw(uint256 amount) public {... */\n    tag_60:\n        /* \"src/contracts/WrappedAgToken.sol\":2522:2528  amount */\n      dup1\n        /* \"src/contracts/WrappedAgToken.sol\":2506:2518  userDeposits */\n      0x06\n      0x00\n        /* \"src/contracts/WrappedAgToken.sol\":2506:2528  userDeposits -= amount */\n      dup3\n      dup3\n      sload\n      tag_155\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_155:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"src/contracts/WrappedAgToken.sol\":2547:2572  _burn(msg.sender, amount) */\n      tag_156\n      swap1\n      pop\n        /* \"src/contracts/WrappedAgToken.sol\":2553:2563  msg.sender */\n      caller\n        /* \"src/contracts/WrappedAgToken.sol\":2565:2571  amount */\n      dup3\n        /* \"src/contracts/WrappedAgToken.sol\":2547:2552  _burn */\n      tag_157\n        /* \"src/contracts/WrappedAgToken.sol\":2547:2572  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_156:\n        /* \"src/contracts/WrappedAgToken.sol\":2584:2601  underlyingAgToken */\n      sload(0x0a)\n        /* \"src/contracts/WrappedAgToken.sol\":2584:2630  underlyingAgToken.transfer(msg.sender, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"src/contracts/WrappedAgToken.sol\":2611:2621  msg.sender */\n      caller\n        /* \"src/contracts/WrappedAgToken.sol\":2584:2630  underlyingAgToken.transfer(msg.sender, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5358:5409   */\n      mstore\n        /* \"#utility.yul\":5425:5443   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5418:5452   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/contracts/WrappedAgToken.sol\":2584:2601  underlyingAgToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"src/contracts/WrappedAgToken.sol\":2584:2610  underlyingAgToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":5331:5349   */\n      0x44\n      add\n        /* \"src/contracts/WrappedAgToken.sol\":2584:2630  underlyingAgToken.transfer(msg.sender, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      pop\n        /* \"src/contracts/WrappedAgToken.sol\":2646:2676  Withdrawal(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1797:1822   */\n      dup2\n      dup2\n      mstore\n        /* \"src/contracts/WrappedAgToken.sol\":2657:2667  msg.sender */\n      caller\n      swap1\n        /* \"src/contracts/WrappedAgToken.sol\":2646:2676  Withdrawal(msg.sender, amount) */\n      0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65\n      swap1\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1770:1788   */\n      add\n        /* \"src/contracts/WrappedAgToken.sol\":2646:2676  Withdrawal(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/contracts/WrappedAgToken.sol\":2455:2683  function withdraw(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5324:5501  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */\n    tag_68:\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5381:5388  bytes32 */\n      0x00\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5424:5440  INITIAL_CHAIN_ID */\n      immutable(\"0xd67d834462ca31eaef1f30157e31659f60355143b7441e6fc7d9eae1fa79f3f8\")\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5407:5420  block.chainid */\n      chainid\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5407:5440  block.chainid == INITIAL_CHAIN_ID */\n      eq\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5407:5494  block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator() */\n      tag_166\n      jumpi\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5470:5494  computeDomainSeparator() */\n      tag_167\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5470:5492  computeDomainSeparator */\n      tag_168\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5470:5494  computeDomainSeparator() */\n      jump\t// in\n    tag_167:\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5400:5494  return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator() */\n      swap1\n      pop\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5324:5501  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5407:5494  block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator() */\n    tag_166:\n      pop\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5443:5467  INITIAL_DOMAIN_SEPARATOR */\n      immutable(\"0x880de8116b3dfac28e9ff528a9fef1d1e0a51449c1addce011ffec1f302992b6\")\n      swap1\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5324:5501  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */\n      jump\t// out\n        /* \"src/contracts/WrappedAgToken.sol\":2870:3058  function claim() public {... */\n    tag_78:\n        /* \"src/contracts/WrappedAgToken.sol\":2904:2921  uint256 claimable */\n      0x00\n        /* \"src/contracts/WrappedAgToken.sol\":2938:2950  userDeposits */\n      sload(0x06)\n        /* \"src/contracts/WrappedAgToken.sol\":2924:2935  totalSupply */\n      sload(0x02)\n        /* \"src/contracts/WrappedAgToken.sol\":2924:2950  totalSupply - userDeposits */\n      tag_171\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_171:\n        /* \"src/contracts/WrappedAgToken.sol\":2961:2978  underlyingAgToken */\n      sload(0x0a)\n        /* \"src/contracts/WrappedAgToken.sol\":2988:3005  interestCollector */\n      sload(0x08)\n        /* \"src/contracts/WrappedAgToken.sol\":2961:3017  underlyingAgToken.transfer(interestCollector, claimable) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/contracts/WrappedAgToken.sol\":2988:3005  interestCollector */\n      swap2\n      dup3\n      and\n        /* \"src/contracts/WrappedAgToken.sol\":2961:3017  underlyingAgToken.transfer(interestCollector, claimable) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5358:5409   */\n      mstore\n        /* \"#utility.yul\":5425:5443   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5418:5452   */\n      dup5\n      swap1\n      mstore\n        /* \"src/contracts/WrappedAgToken.sol\":2904:2950  uint256 claimable = totalSupply - userDeposits */\n      swap3\n      swap4\n      pop\n        /* \"src/contracts/WrappedAgToken.sol\":2961:2978  underlyingAgToken */\n      and\n      swap1\n        /* \"src/contracts/WrappedAgToken.sol\":2961:2987  underlyingAgToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":5331:5349   */\n      0x44\n      add\n        /* \"src/contracts/WrappedAgToken.sol\":2961:3017  underlyingAgToken.transfer(interestCollector, claimable) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_175\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_175:\n      pop\n        /* \"src/contracts/WrappedAgToken.sol\":3033:3051  Claimed(claimable) */\n      mload(0x40)\n        /* \"#utility.yul\":1797:1822   */\n      dup2\n      dup2\n      mstore\n        /* \"src/contracts/WrappedAgToken.sol\":3033:3051  Claimed(claimable) */\n      0x7a355715549cfe7c1cba26304350343fbddc4b4f72d3ce3e7c27117dd20b5cb8\n      swap1\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1770:1788   */\n      add\n        /* \"src/contracts/WrappedAgToken.sol\":3033:3051  Claimed(claimable) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/contracts/WrappedAgToken.sol\":2894:3058  {... */\n      pop\n        /* \"src/contracts/WrappedAgToken.sol\":2870:3058  function claim() public {... */\n      jump\t// out\n        /* \"lib/solmate/src/tokens/ERC20.sol\":1053:1073  string public symbol */\n    tag_101:\n      0x01\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2675:3048  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n    tag_106:\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2771:2781  msg.sender */\n      caller\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2745:2749  bool */\n      0x00\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2761:2782  balanceOf[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2761:2770  balanceOf */\n      0x03\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2761:2782  balanceOf[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2761:2792  balanceOf[msg.sender] -= amount */\n      dup1\n      sload\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2786:2792  amount */\n      dup4\n      swap2\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2761:2782  balanceOf[msg.sender] */\n      swap1\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2745:2749  bool */\n      dup4\n      swap1\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2761:2792  balanceOf[msg.sender] -= amount */\n      tag_183\n      swap1\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2786:2792  amount */\n      dup5\n      swap1\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2761:2792  balanceOf[msg.sender] -= amount */\n      tag_151\n      jump\t// in\n    tag_183:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2938:2951  balanceOf[to] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2938:2947  balanceOf */\n      0x03\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2938:2951  balanceOf[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2938:2961  balanceOf[to] += amount */\n      dup1\n      sload\n      dup6\n      add\n      swap1\n      sstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2987:3019  Transfer(msg.sender, to, amount) */\n      mload\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2996:3006  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2987:3019  Transfer(msg.sender, to, amount) */\n      swap1\n      tag_147\n      swap1\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2955:2961  amount */\n      dup7\n        /* \"#utility.yul\":1797:1822   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1770:1788   */\n      add\n      swap1\n        /* \"#utility.yul\":1651:1828   */\n      jump\n        /* \"src/contracts/WrappedAgToken.sol\":2203:2449  function deposit(uint256 amount) public isActive() {... */\n    tag_111:\n        /* \"src/contracts/WrappedAgToken.sol\":1867:1871  POOL */\n      sload(0x0b)\n        /* \"src/contracts/WrappedAgToken.sol\":1889:1901  reserveAsset */\n      sload(0x09)\n        /* \"src/contracts/WrappedAgToken.sol\":1867:1902  POOL.getConfiguration(reserveAsset) */\n      mload(0x40)\n      shl(0xe0, 0xc44b11f7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/contracts/WrappedAgToken.sol\":1889:1901  reserveAsset */\n      swap2\n      dup3\n      and\n        /* \"src/contracts/WrappedAgToken.sol\":1867:1902  POOL.getConfiguration(reserveAsset) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2868:2919   */\n      mstore\n        /* \"src/contracts/WrappedAgToken.sol\":1817:1864  DataTypes.ReserveConfigurationMap memory config */\n      0x00\n      swap3\n        /* \"src/contracts/WrappedAgToken.sol\":1867:1871  POOL */\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n        /* \"src/contracts/WrappedAgToken.sol\":1867:1888  POOL.getConfiguration */\n      0xc44b11f7\n      swap1\n        /* \"#utility.yul\":2841:2859   */\n      0x24\n      add\n        /* \"src/contracts/WrappedAgToken.sol\":1867:1902  POOL.getConfiguration(reserveAsset) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"src/contracts/WrappedAgToken.sol\":1930:1941  config.data */\n      dup1\n      mload\n        /* \"src/contracts/WrappedAgToken.sol\":1817:1902  DataTypes.ReserveConfigurationMap memory config = POOL.getConfiguration(reserveAsset) */\n      swap1\n      swap2\n      pop\n        /* \"src/contracts/WrappedAgToken.sol\":1944:1956  ~ACTIVE_MASK */\n      0x0100000000000000\n        /* \"src/contracts/WrappedAgToken.sol\":1930:1956  config.data & ~ACTIVE_MASK */\n      and\n        /* \"src/contracts/WrappedAgToken.sol\":1930:1941  config.data */\n      0x00\n        /* \"src/contracts/WrappedAgToken.sol\":1929:1962  (config.data & ~ACTIVE_MASK) != 0 */\n      sub\n        /* \"src/contracts/WrappedAgToken.sol\":1921:1997  require((config.data & ~ACTIVE_MASK) != 0, \"Underlying Asset is not active\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6507:6509   */\n      0x20\n        /* \"src/contracts/WrappedAgToken.sol\":1921:1997  require((config.data & ~ACTIVE_MASK) != 0, \"Underlying Asset is not active\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6489:6510   */\n      mstore\n        /* \"#utility.yul\":6546:6548   */\n      0x1e\n        /* \"#utility.yul\":6526:6544   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6519:6549   */\n      mstore\n        /* \"#utility.yul\":6585:6617   */\n      0x556e6465726c79696e67204173736574206973206e6f74206163746976650000\n        /* \"#utility.yul\":6565:6583   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6558:6618   */\n      mstore\n        /* \"#utility.yul\":6635:6653   */\n      0x64\n      add\n        /* \"src/contracts/WrappedAgToken.sol\":1921:1997  require((config.data & ~ACTIVE_MASK) != 0, \"Underlying Asset is not active\") */\n      tag_31\n        /* \"#utility.yul\":6305:6659   */\n      jump\n        /* \"src/contracts/WrappedAgToken.sol\":1921:1997  require((config.data & ~ACTIVE_MASK) != 0, \"Underlying Asset is not active\") */\n    tag_191:\n        /* \"src/contracts/WrappedAgToken.sol\":2265:2282  underlyingAgToken */\n      sload(0x0a)\n        /* \"src/contracts/WrappedAgToken.sol\":2265:2330  underlyingAgToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"src/contracts/WrappedAgToken.sol\":2296:2306  msg.sender */\n      caller\n        /* \"src/contracts/WrappedAgToken.sol\":2265:2330  underlyingAgToken.transferFrom(msg.sender, address(this), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6904:6938   */\n      mstore\n        /* \"src/contracts/WrappedAgToken.sol\":2316:2320  this */\n      address\n        /* \"#utility.yul\":6954:6972   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6947:6990   */\n      mstore\n        /* \"#utility.yul\":7006:7024   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6999:7033   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/contracts/WrappedAgToken.sol\":2265:2282  underlyingAgToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"src/contracts/WrappedAgToken.sol\":2265:2295  underlyingAgToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":6839:6857   */\n      0x64\n      add\n        /* \"src/contracts/WrappedAgToken.sol\":2265:2330  underlyingAgToken.transferFrom(msg.sender, address(this), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_199:\n      pop\n        /* \"src/contracts/WrappedAgToken.sol\":2341:2366  _mint(msg.sender, amount) */\n      tag_200\n        /* \"src/contracts/WrappedAgToken.sol\":2347:2357  msg.sender */\n      caller\n        /* \"src/contracts/WrappedAgToken.sol\":2359:2365  amount */\n      dup4\n        /* \"src/contracts/WrappedAgToken.sol\":2341:2346  _mint */\n      tag_201\n        /* \"src/contracts/WrappedAgToken.sol\":2341:2366  _mint(msg.sender, amount) */\n      jump\t// in\n    tag_200:\n        /* \"src/contracts/WrappedAgToken.sol\":2393:2399  amount */\n      dup2\n        /* \"src/contracts/WrappedAgToken.sol\":2377:2389  userDeposits */\n      0x06\n      0x00\n        /* \"src/contracts/WrappedAgToken.sol\":2377:2399  userDeposits += amount */\n      dup3\n      dup3\n      sload\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/contracts/WrappedAgToken.sol\":2415:2442  Deposit(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1797:1822   */\n      dup3\n      dup2\n      mstore\n        /* \"src/contracts/WrappedAgToken.sol\":2423:2433  msg.sender */\n      caller\n      swap1\n        /* \"src/contracts/WrappedAgToken.sol\":2415:2442  Deposit(msg.sender, amount) */\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n      swap1\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1770:1788   */\n      add\n        /* \"src/contracts/WrappedAgToken.sol\":2415:2442  Deposit(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/contracts/WrappedAgToken.sol\":1807:2015  {... */\n      pop\n        /* \"src/contracts/WrappedAgToken.sol\":2203:2449  function deposit(uint256 amount) public isActive() {... */\n      pop\n      jump\t// out\n        /* \"src/contracts/WrappedAgToken.sol\":3065:3187  function setInterestCollector(address newCollector) external isManager() {... */\n    tag_115:\n        /* \"src/contracts/WrappedAgToken.sol\":1740:1747  manager */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"src/contracts/WrappedAgToken.sol\":1726:1736  msg.sender */\n      caller\n        /* \"src/contracts/WrappedAgToken.sol\":1726:1747  msg.sender == manager */\n      eq\n        /* \"src/contracts/WrappedAgToken.sol\":1718:1764  require(msg.sender == manager, \"UNAUTHORIZED\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7379:7381   */\n      0x20\n        /* \"src/contracts/WrappedAgToken.sol\":1718:1764  require(msg.sender == manager, \"UNAUTHORIZED\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7361:7382   */\n      mstore\n        /* \"#utility.yul\":7418:7420   */\n      0x0c\n        /* \"#utility.yul\":7398:7416   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7391:7421   */\n      mstore\n      shl(0xa2, 0x15539055551213d492569151)\n        /* \"#utility.yul\":7437:7455   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7430:7472   */\n      mstore\n        /* \"#utility.yul\":7489:7507   */\n      0x64\n      add\n        /* \"src/contracts/WrappedAgToken.sol\":1718:1764  require(msg.sender == manager, \"UNAUTHORIZED\") */\n      tag_31\n        /* \"#utility.yul\":7177:7513   */\n      jump\n        /* \"src/contracts/WrappedAgToken.sol\":1718:1764  require(msg.sender == manager, \"UNAUTHORIZED\") */\n    tag_206:\n        /* \"src/contracts/WrappedAgToken.sol\":3148:3165  interestCollector */\n      0x08\n        /* \"src/contracts/WrappedAgToken.sol\":3148:3180  interestCollector = newCollector */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/contracts/WrappedAgToken.sol\":3065:3187  function setInterestCollector(address newCollector) external isManager() {... */\n      jump\t// out\n        /* \"src/contracts/WrappedAgToken.sol\":3193:3291  function setManager(address newManager) external isManager() {... */\n    tag_119:\n        /* \"src/contracts/WrappedAgToken.sol\":1740:1747  manager */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"src/contracts/WrappedAgToken.sol\":1726:1736  msg.sender */\n      caller\n        /* \"src/contracts/WrappedAgToken.sol\":1726:1747  msg.sender == manager */\n      eq\n        /* \"src/contracts/WrappedAgToken.sol\":1718:1764  require(msg.sender == manager, \"UNAUTHORIZED\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7379:7381   */\n      0x20\n        /* \"src/contracts/WrappedAgToken.sol\":1718:1764  require(msg.sender == manager, \"UNAUTHORIZED\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7361:7382   */\n      mstore\n        /* \"#utility.yul\":7418:7420   */\n      0x0c\n        /* \"#utility.yul\":7398:7416   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7391:7421   */\n      mstore\n      shl(0xa2, 0x15539055551213d492569151)\n        /* \"#utility.yul\":7437:7455   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7430:7472   */\n      mstore\n        /* \"#utility.yul\":7489:7507   */\n      0x64\n      add\n        /* \"src/contracts/WrappedAgToken.sol\":1718:1764  require(msg.sender == manager, \"UNAUTHORIZED\") */\n      tag_31\n        /* \"#utility.yul\":7177:7513   */\n      jump\n        /* \"src/contracts/WrappedAgToken.sol\":1718:1764  require(msg.sender == manager, \"UNAUTHORIZED\") */\n    tag_211:\n        /* \"src/contracts/WrappedAgToken.sol\":3264:3271  manager */\n      0x07\n        /* \"src/contracts/WrappedAgToken.sol\":3264:3284  manager = newManager */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/contracts/WrappedAgToken.sol\":3193:3291  function setManager(address newManager) external isManager() {... */\n      jump\t// out\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3835:5318  function permit(... */\n    tag_124:\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4054:4069  block.timestamp */\n      timestamp\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4042:4050  deadline */\n      dup5\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4042:4069  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4034:4097  require(deadline >= block.timestamp, \"PERMIT_DEADLINE_EXPIRED\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7720:7722   */\n      0x20\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4034:4097  require(deadline >= block.timestamp, \"PERMIT_DEADLINE_EXPIRED\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7702:7723   */\n      mstore\n        /* \"#utility.yul\":7759:7761   */\n      0x17\n        /* \"#utility.yul\":7739:7757   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7732:7762   */\n      mstore\n        /* \"#utility.yul\":7798:7823   */\n      0x5045524d49545f444541444c494e455f45585049524544000000000000000000\n        /* \"#utility.yul\":7778:7796   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7771:7824   */\n      mstore\n        /* \"#utility.yul\":7841:7859   */\n      0x64\n      add\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4034:4097  require(deadline >= block.timestamp, \"PERMIT_DEADLINE_EXPIRED\") */\n      tag_31\n        /* \"#utility.yul\":7518:7865   */\n      jump\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4034:4097  require(deadline >= block.timestamp, \"PERMIT_DEADLINE_EXPIRED\") */\n    tag_215:\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4262:4286  address recoveredAddress */\n      0x00\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4289:5094  ecrecover(... */\n      0x01\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4425:4443  DOMAIN_SEPARATOR() */\n      tag_218\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4425:4441  DOMAIN_SEPARATOR */\n      tag_68\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4425:4443  DOMAIN_SEPARATOR() */\n      jump\t// in\n    tag_218:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4870:4883  nonces[owner] */\n      dup11\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4870:4876  nonces */\n      0x05\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4870:4883  nonces[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4870:4885  nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4508:4957  abi.encode(... */\n      dup3\n      mload\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4552:4717  keccak256(... */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4508:4957  abi.encode(... */\n      dup2\n      dup5\n      add\n        /* \"#utility.yul\":8157:8182   */\n      mstore\n        /* \"#utility.yul\":8236:8254   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":8229:8272   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":8308:8323   */\n      swap4\n      dup14\n      and\n        /* \"#utility.yul\":8288:8306   */\n      0x60\n      dup5\n      add\n        /* \"#utility.yul\":8281:8324   */\n      mstore\n        /* \"#utility.yul\":8340:8358   */\n      0x80\n      dup4\n      add\n        /* \"#utility.yul\":8333:8367   */\n      dup13\n      swap1\n      mstore\n        /* \"#utility.yul\":8383:8402   */\n      0xa0\n      dup4\n      add\n        /* \"#utility.yul\":8376:8411   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":8427:8446   */\n      0xc0\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":8420:8455   */\n      dup12\n      swap1\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4508:4957  abi.encode(... */\n      dup2\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":8129:8148   */\n      0xe0\n      dup4\n      add\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4508:4957  abi.encode(... */\n      swap1\n      swap2\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4469:4983  keccak256(... */\n      dup1\n      mload\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4347:5005  abi.encodePacked(... */\n      0x0100\n      dup4\n      add\n        /* \"#utility.yul\":8724:8751   */\n      mstore\n        /* \"#utility.yul\":8767:8778   */\n      0x0102\n      dup3\n      add\n        /* \"#utility.yul\":8760:8787   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":8803:8815   */\n      0x0122\n      dup2\n      add\n        /* \"#utility.yul\":8796:8824   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":8840:8852   */\n      0x0142\n      add\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4347:5005  abi.encodePacked(... */\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      dup3\n      dup3\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4316:5023  keccak256(... */\n      dup1\n      mload\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4347:5005  abi.encodePacked(... */\n      0x20\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4316:5023  keccak256(... */\n      swap2\n      dup3\n      add\n      keccak256\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4289:5094  ecrecover(... */\n      0x00\n      dup5\n      mstore\n      swap1\n      dup4\n      add\n      dup1\n      dup4\n      mstore\n        /* \"#utility.yul\":9090:9115   */\n      mstore\n        /* \"#utility.yul\":9163:9167   */\n      0xff\n        /* \"#utility.yul\":9151:9168   */\n      dup8\n      and\n        /* \"#utility.yul\":9131:9149   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9124:9169   */\n      mstore\n        /* \"#utility.yul\":9185:9203   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":9178:9212   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":9228:9246   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":9221:9255   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":9062:9081   */\n      0xa0\n      add\n        /* \"lib/solmate/src/tokens/ERC20.sol\":4289:5094  ecrecover(... */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_226:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5117:5147  recoveredAddress != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5117:5176  recoveredAddress != address(0) && recoveredAddress == owner */\n      tag_227\n      jumpi\n      pop\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5171:5176  owner */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5151:5176  recoveredAddress == owner */\n      and\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5151:5167  recoveredAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5151:5176  recoveredAddress == owner */\n      and\n      eq\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5117:5176  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_227:\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5109:5195  require(recoveredAddress != address(0) && recoveredAddress == owner, \"INVALID_SIGNER\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9468:9470   */\n      0x20\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5109:5195  require(recoveredAddress != address(0) && recoveredAddress == owner, \"INVALID_SIGNER\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9450:9471   */\n      mstore\n        /* \"#utility.yul\":9507:9509   */\n      0x0e\n        /* \"#utility.yul\":9487:9505   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9480:9510   */\n      mstore\n      shl(0x91, 0x24a72b20a624a22fa9a4a3a722a9)\n        /* \"#utility.yul\":9526:9544   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9519:9563   */\n      mstore\n        /* \"#utility.yul\":9580:9598   */\n      0x64\n      add\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5109:5195  require(recoveredAddress != address(0) && recoveredAddress == owner, \"INVALID_SIGNER\") */\n      tag_31\n        /* \"#utility.yul\":9266:9604   */\n      jump\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5109:5195  require(recoveredAddress != address(0) && recoveredAddress == owner, \"INVALID_SIGNER\") */\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5210:5237  allowance[recoveredAddress] */\n      swap1\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5210:5219  allowance */\n      0x04\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5210:5237  allowance[recoveredAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5210:5246  allowance[recoveredAddress][spender] */\n      dup11\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5210:5254  allowance[recoveredAddress][spender] = value */\n      dup10\n      swap1\n      sstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5280:5311  Approval(owner, spender, value) */\n      mload\n        /* \"#utility.yul\":1797:1822   */\n      dup9\n      dup2\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5210:5246  allowance[recoveredAddress][spender] */\n      swap2\n      swap3\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5280:5311  Approval(owner, spender, value) */\n      dup11\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1770:1788   */\n      add\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5280:5311  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"lib/solmate/src/tokens/ERC20.sol\":3835:5318  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6478:6806  function _burn(address from, uint256 amount) internal virtual {... */\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6550:6565  balanceOf[from] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6550:6559  balanceOf */\n      0x03\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6550:6565  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6550:6575  balanceOf[from] -= amount */\n      dup1\n      sload\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6569:6575  amount */\n      dup4\n      swap3\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6550:6565  balanceOf[from] */\n      swap1\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6550:6575  balanceOf[from] -= amount */\n      tag_233\n      swap1\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6569:6575  amount */\n      dup5\n      swap1\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6550:6575  balanceOf[from] -= amount */\n      tag_151\n      jump\t// in\n    tag_233:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6718:6729  totalSupply */\n      0x02\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6718:6739  totalSupply -= amount */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6765:6799  Transfer(from, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1797:1822   */\n      dup2\n      dup2\n      mstore\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6765:6799  Transfer(from, address(0), amount) */\n      dup5\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1770:1788   */\n      add\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6765:6799  Transfer(from, address(0), amount) */\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6478:6806  function _burn(address from, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5507:5953  function computeDomainSeparator() internal view virtual returns (bytes32) {... */\n    tag_168:\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5572:5579  bytes32 */\n      0x00\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5669:5764  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5802:5806  name */\n      0x00\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5786:5808  keccak256(bytes(name)) */\n      mload(0x40)\n      tag_236\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      dup3\n      keccak256\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5637:5932  abi.encode(... */\n      0x20\n      dup4\n      add\n        /* \"#utility.yul\":11106:11131   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":11147:11165   */\n      dup2\n      add\n        /* \"#utility.yul\":11140:11174   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5830:5844  keccak256(\"1\") */\n      0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n        /* \"#utility.yul\":11190:11208   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":11183:11217   */\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5866:5879  block.chainid */\n      chainid\n        /* \"#utility.yul\":11233:11251   */\n      0x80\n      dup3\n      add\n        /* \"#utility.yul\":11226:11260   */\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5909:5913  this */\n      address\n        /* \"#utility.yul\":11276:11295   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":11269:11330   */\n      mstore\n        /* \"#utility.yul\":11078:11097   */\n      0xc0\n      add\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5637:5932  abi.encode(... */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5610:5946  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5591:5946  return... */\n      swap1\n      pop\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5507:5953  function computeDomainSeparator() internal view virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6147:6472  function _mint(address to, uint256 amount) internal virtual {... */\n    tag_201:\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6232:6238  amount */\n      dup1\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6217:6228  totalSupply */\n      0x02\n      0x00\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6217:6238  totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_241\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_241:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6384:6397  balanceOf[to] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6384:6393  balanceOf */\n      0x03\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6384:6397  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6384:6407  balanceOf[to] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6433:6465  Transfer(address(0), to, amount) */\n      mload\n        /* \"#utility.yul\":1797:1822   */\n      dup5\n      dup2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6433:6465  Transfer(address(0), to, amount) */\n      swap2\n        /* \"#utility.yul\":1770:1788   */\n      add\n        /* \"lib/solmate/src/tokens/ERC20.sol\":6433:6465  Transfer(address(0), to, amount) */\n      tag_234\n        /* \"#utility.yul\":1651:1828   */\n      jump\n        /* \"#utility.yul\":420:1017   */\n    tag_37:\n        /* \"#utility.yul\":532:536   */\n      0x00\n        /* \"#utility.yul\":561:563   */\n      0x20\n        /* \"#utility.yul\":590:592   */\n      dup1\n        /* \"#utility.yul\":579:588   */\n      dup4\n        /* \"#utility.yul\":572:593   */\n      mstore\n        /* \"#utility.yul\":622:628   */\n      dup4\n        /* \"#utility.yul\":616:629   */\n      mload\n        /* \"#utility.yul\":665:671   */\n      dup1\n        /* \"#utility.yul\":660:662   */\n      dup3\n        /* \"#utility.yul\":649:658   */\n      dup6\n        /* \"#utility.yul\":645:663   */\n      add\n        /* \"#utility.yul\":638:672   */\n      mstore\n        /* \"#utility.yul\":690:691   */\n      0x00\n        /* \"#utility.yul\":700:840   */\n    tag_249:\n        /* \"#utility.yul\":714:720   */\n      dup2\n        /* \"#utility.yul\":711:712   */\n      dup2\n        /* \"#utility.yul\":708:721   */\n      lt\n        /* \"#utility.yul\":700:840   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":809:823   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":805:828   */\n      dup4\n      add\n        /* \"#utility.yul\":799:829   */\n      mload\n        /* \"#utility.yul\":775:792   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":794:796   */\n      0x40\n        /* \"#utility.yul\":771:797   */\n      add\n        /* \"#utility.yul\":764:830   */\n      mstore\n        /* \"#utility.yul\":729:739   */\n      dup3\n      add\n        /* \"#utility.yul\":700:840   */\n      jump(tag_249)\n    tag_251:\n        /* \"#utility.yul\":858:864   */\n      dup2\n        /* \"#utility.yul\":855:856   */\n      dup2\n        /* \"#utility.yul\":852:865   */\n      gt\n        /* \"#utility.yul\":849:940   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":928:929   */\n      0x00\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":914:920   */\n      dup4\n        /* \"#utility.yul\":903:912   */\n      dup8\n        /* \"#utility.yul\":899:921   */\n      add\n        /* \"#utility.yul\":895:926   */\n      add\n        /* \"#utility.yul\":888:930   */\n      mstore\n        /* \"#utility.yul\":849:940   */\n    tag_252:\n      pop\n        /* \"#utility.yul\":1001:1003   */\n      0x1f\n        /* \"#utility.yul\":980:995   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":976:1005   */\n      and\n        /* \"#utility.yul\":961:1006   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1008:1010   */\n      0x40\n        /* \"#utility.yul\":957:1011   */\n      add\n      swap4\n        /* \"#utility.yul\":420:1017   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1022:1195   */\n    tag_243:\n        /* \"#utility.yul\":1090:1110   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1139:1170   */\n      dup2\n      and\n        /* \"#utility.yul\":1129:1171   */\n      dup2\n      eq\n        /* \"#utility.yul\":1119:1189   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":1185:1186   */\n      0x00\n        /* \"#utility.yul\":1182:1183   */\n      dup1\n        /* \"#utility.yul\":1175:1187   */\n      revert\n        /* \"#utility.yul\":1119:1189   */\n    tag_254:\n        /* \"#utility.yul\":1022:1195   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1200:1454   */\n    tag_41:\n        /* \"#utility.yul\":1268:1274   */\n      0x00\n        /* \"#utility.yul\":1276:1282   */\n      dup1\n        /* \"#utility.yul\":1329:1331   */\n      0x40\n        /* \"#utility.yul\":1317:1326   */\n      dup4\n        /* \"#utility.yul\":1308:1315   */\n      dup6\n        /* \"#utility.yul\":1304:1327   */\n      sub\n        /* \"#utility.yul\":1300:1332   */\n      slt\n        /* \"#utility.yul\":1297:1349   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":1345:1346   */\n      0x00\n        /* \"#utility.yul\":1342:1343   */\n      dup1\n        /* \"#utility.yul\":1335:1347   */\n      revert\n        /* \"#utility.yul\":1297:1349   */\n    tag_256:\n        /* \"#utility.yul\":1368:1397   */\n      tag_257\n        /* \"#utility.yul\":1387:1396   */\n      dup4\n        /* \"#utility.yul\":1368:1397   */\n      tag_243\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1358:1397   */\n      swap5\n        /* \"#utility.yul\":1444:1446   */\n      0x20\n        /* \"#utility.yul\":1429:1447   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1416:1448   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1200:1454   */\n      jump\t// out\n        /* \"#utility.yul\":1833:2161   */\n    tag_53:\n        /* \"#utility.yul\":1910:1916   */\n      0x00\n        /* \"#utility.yul\":1918:1924   */\n      dup1\n        /* \"#utility.yul\":1926:1932   */\n      0x00\n        /* \"#utility.yul\":1979:1981   */\n      0x60\n        /* \"#utility.yul\":1967:1976   */\n      dup5\n        /* \"#utility.yul\":1958:1965   */\n      dup7\n        /* \"#utility.yul\":1954:1977   */\n      sub\n        /* \"#utility.yul\":1950:1982   */\n      slt\n        /* \"#utility.yul\":1947:1999   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":1995:1996   */\n      0x00\n        /* \"#utility.yul\":1992:1993   */\n      dup1\n        /* \"#utility.yul\":1985:1997   */\n      revert\n        /* \"#utility.yul\":1947:1999   */\n    tag_261:\n        /* \"#utility.yul\":2018:2047   */\n      tag_262\n        /* \"#utility.yul\":2037:2046   */\n      dup5\n        /* \"#utility.yul\":2018:2047   */\n      tag_243\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2008:2047   */\n      swap3\n      pop\n        /* \"#utility.yul\":2066:2104   */\n      tag_263\n        /* \"#utility.yul\":2100:2102   */\n      0x20\n        /* \"#utility.yul\":2089:2098   */\n      dup6\n        /* \"#utility.yul\":2085:2103   */\n      add\n        /* \"#utility.yul\":2066:2104   */\n      tag_243\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":2056:2104   */\n      swap2\n      pop\n        /* \"#utility.yul\":2151:2153   */\n      0x40\n        /* \"#utility.yul\":2140:2149   */\n      dup5\n        /* \"#utility.yul\":2136:2154   */\n      add\n        /* \"#utility.yul\":2123:2155   */\n      calldataload\n        /* \"#utility.yul\":2113:2155   */\n      swap1\n      pop\n        /* \"#utility.yul\":1833:2161   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2166:2346   */\n    tag_59:\n        /* \"#utility.yul\":2225:2231   */\n      0x00\n        /* \"#utility.yul\":2278:2280   */\n      0x20\n        /* \"#utility.yul\":2266:2275   */\n      dup3\n        /* \"#utility.yul\":2257:2264   */\n      dup5\n        /* \"#utility.yul\":2253:2276   */\n      sub\n        /* \"#utility.yul\":2249:2281   */\n      slt\n        /* \"#utility.yul\":2246:2298   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2246:2298   */\n    tag_265:\n      pop\n        /* \"#utility.yul\":2317:2340   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2166:2346   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2930:3116   */\n    tag_86:\n        /* \"#utility.yul\":2989:2995   */\n      0x00\n        /* \"#utility.yul\":3042:3044   */\n      0x20\n        /* \"#utility.yul\":3030:3039   */\n      dup3\n        /* \"#utility.yul\":3021:3028   */\n      dup5\n        /* \"#utility.yul\":3017:3040   */\n      sub\n        /* \"#utility.yul\":3013:3045   */\n      slt\n        /* \"#utility.yul\":3010:3062   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3058:3059   */\n      0x00\n        /* \"#utility.yul\":3055:3056   */\n      dup1\n        /* \"#utility.yul\":3048:3060   */\n      revert\n        /* \"#utility.yul\":3010:3062   */\n    tag_270:\n        /* \"#utility.yul\":3081:3110   */\n      tag_271\n        /* \"#utility.yul\":3100:3109   */\n      dup3\n        /* \"#utility.yul\":3081:3110   */\n      tag_243\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3071:3110   */\n      swap4\n        /* \"#utility.yul\":2930:3116   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3350:4043   */\n    tag_123:\n        /* \"#utility.yul\":3461:3467   */\n      0x00\n        /* \"#utility.yul\":3469:3475   */\n      dup1\n        /* \"#utility.yul\":3477:3483   */\n      0x00\n        /* \"#utility.yul\":3485:3491   */\n      dup1\n        /* \"#utility.yul\":3493:3499   */\n      0x00\n        /* \"#utility.yul\":3501:3507   */\n      dup1\n        /* \"#utility.yul\":3509:3515   */\n      0x00\n        /* \"#utility.yul\":3562:3565   */\n      0xe0\n        /* \"#utility.yul\":3550:3559   */\n      dup9\n        /* \"#utility.yul\":3541:3548   */\n      dup11\n        /* \"#utility.yul\":3537:3560   */\n      sub\n        /* \"#utility.yul\":3533:3566   */\n      slt\n        /* \"#utility.yul\":3530:3583   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":3579:3580   */\n      0x00\n        /* \"#utility.yul\":3576:3577   */\n      dup1\n        /* \"#utility.yul\":3569:3581   */\n      revert\n        /* \"#utility.yul\":3530:3583   */\n    tag_274:\n        /* \"#utility.yul\":3602:3631   */\n      tag_275\n        /* \"#utility.yul\":3621:3630   */\n      dup9\n        /* \"#utility.yul\":3602:3631   */\n      tag_243\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":3592:3631   */\n      swap7\n      pop\n        /* \"#utility.yul\":3650:3688   */\n      tag_276\n        /* \"#utility.yul\":3684:3686   */\n      0x20\n        /* \"#utility.yul\":3673:3682   */\n      dup10\n        /* \"#utility.yul\":3669:3687   */\n      add\n        /* \"#utility.yul\":3650:3688   */\n      tag_243\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":3640:3688   */\n      swap6\n      pop\n        /* \"#utility.yul\":3735:3737   */\n      0x40\n        /* \"#utility.yul\":3724:3733   */\n      dup9\n        /* \"#utility.yul\":3720:3738   */\n      add\n        /* \"#utility.yul\":3707:3739   */\n      calldataload\n        /* \"#utility.yul\":3697:3739   */\n      swap5\n      pop\n        /* \"#utility.yul\":3786:3788   */\n      0x60\n        /* \"#utility.yul\":3775:3784   */\n      dup9\n        /* \"#utility.yul\":3771:3789   */\n      add\n        /* \"#utility.yul\":3758:3790   */\n      calldataload\n        /* \"#utility.yul\":3748:3790   */\n      swap4\n      pop\n        /* \"#utility.yul\":3840:3843   */\n      0x80\n        /* \"#utility.yul\":3829:3838   */\n      dup9\n        /* \"#utility.yul\":3825:3844   */\n      add\n        /* \"#utility.yul\":3812:3845   */\n      calldataload\n        /* \"#utility.yul\":3885:3889   */\n      0xff\n        /* \"#utility.yul\":3878:3883   */\n      dup2\n        /* \"#utility.yul\":3874:3890   */\n      and\n        /* \"#utility.yul\":3867:3872   */\n      dup2\n        /* \"#utility.yul\":3864:3891   */\n      eq\n        /* \"#utility.yul\":3854:3909   */\n      tag_277\n      jumpi\n        /* \"#utility.yul\":3905:3906   */\n      0x00\n        /* \"#utility.yul\":3902:3903   */\n      dup1\n        /* \"#utility.yul\":3895:3907   */\n      revert\n        /* \"#utility.yul\":3854:3909   */\n    tag_277:\n        /* \"#utility.yul\":3350:4043   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      swap3\n      swap6\n        /* \"#utility.yul\":3928:3933   */\n      swap5\n        /* \"#utility.yul\":3980:3983   */\n      0xa0\n        /* \"#utility.yul\":3965:3984   */\n      dup5\n      add\n        /* \"#utility.yul\":3952:3985   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":4032:4035   */\n      0xc0\n        /* \"#utility.yul\":4017:4036   */\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":4004:4037   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":3350:4043   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4272:4532   */\n    tag_133:\n        /* \"#utility.yul\":4340:4346   */\n      0x00\n        /* \"#utility.yul\":4348:4354   */\n      dup1\n        /* \"#utility.yul\":4401:4403   */\n      0x40\n        /* \"#utility.yul\":4389:4398   */\n      dup4\n        /* \"#utility.yul\":4380:4387   */\n      dup6\n        /* \"#utility.yul\":4376:4399   */\n      sub\n        /* \"#utility.yul\":4372:4404   */\n      slt\n        /* \"#utility.yul\":4369:4421   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":4417:4418   */\n      0x00\n        /* \"#utility.yul\":4414:4415   */\n      dup1\n        /* \"#utility.yul\":4407:4419   */\n      revert\n        /* \"#utility.yul\":4369:4421   */\n    tag_280:\n        /* \"#utility.yul\":4440:4469   */\n      tag_281\n        /* \"#utility.yul\":4459:4468   */\n      dup4\n        /* \"#utility.yul\":4440:4469   */\n      tag_243\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":4430:4469   */\n      swap2\n      pop\n        /* \"#utility.yul\":4488:4526   */\n      tag_282\n        /* \"#utility.yul\":4522:4524   */\n      0x20\n        /* \"#utility.yul\":4511:4520   */\n      dup5\n        /* \"#utility.yul\":4507:4525   */\n      add\n        /* \"#utility.yul\":4488:4526   */\n      tag_243\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4478:4526   */\n      swap1\n      pop\n        /* \"#utility.yul\":4272:4532   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4537:4917   */\n    tag_141:\n        /* \"#utility.yul\":4616:4617   */\n      0x01\n        /* \"#utility.yul\":4612:4624   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4659:4671   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4680:4741   */\n      tag_284\n      jumpi\n        /* \"#utility.yul\":4734:4738   */\n      0x7f\n        /* \"#utility.yul\":4726:4732   */\n      dup3\n        /* \"#utility.yul\":4722:4739   */\n      and\n        /* \"#utility.yul\":4712:4739   */\n      swap2\n      pop\n        /* \"#utility.yul\":4680:4741   */\n    tag_284:\n        /* \"#utility.yul\":4787:4789   */\n      0x20\n        /* \"#utility.yul\":4779:4785   */\n      dup3\n        /* \"#utility.yul\":4776:4790   */\n      lt\n        /* \"#utility.yul\":4756:4774   */\n      dup2\n        /* \"#utility.yul\":4753:4791   */\n      sub\n        /* \"#utility.yul\":4750:4911   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":4833:4843   */\n      0x4e487b71\n        /* \"#utility.yul\":4828:4831   */\n      0xe0\n        /* \"#utility.yul\":4824:4844   */\n      shl\n        /* \"#utility.yul\":4821:4822   */\n      0x00\n        /* \"#utility.yul\":4814:4845   */\n      mstore\n        /* \"#utility.yul\":4868:4872   */\n      0x22\n        /* \"#utility.yul\":4865:4866   */\n      0x04\n        /* \"#utility.yul\":4858:4873   */\n      mstore\n        /* \"#utility.yul\":4896:4900   */\n      0x24\n        /* \"#utility.yul\":4893:4894   */\n      0x00\n        /* \"#utility.yul\":4886:4901   */\n      revert\n        /* \"#utility.yul\":4750:4911   */\n    tag_285:\n      pop\n        /* \"#utility.yul\":4537:4917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4922:5049   */\n    tag_244:\n        /* \"#utility.yul\":4983:4993   */\n      0x4e487b71\n        /* \"#utility.yul\":4978:4981   */\n      0xe0\n        /* \"#utility.yul\":4974:4994   */\n      shl\n        /* \"#utility.yul\":4971:4972   */\n      0x00\n        /* \"#utility.yul\":4964:4995   */\n      mstore\n        /* \"#utility.yul\":5014:5018   */\n      0x11\n        /* \"#utility.yul\":5011:5012   */\n      0x04\n        /* \"#utility.yul\":5004:5019   */\n      mstore\n        /* \"#utility.yul\":5038:5042   */\n      0x24\n        /* \"#utility.yul\":5035:5036   */\n      0x00\n        /* \"#utility.yul\":5028:5043   */\n      revert\n        /* \"#utility.yul\":5054:5179   */\n    tag_151:\n        /* \"#utility.yul\":5094:5098   */\n      0x00\n        /* \"#utility.yul\":5122:5123   */\n      dup3\n        /* \"#utility.yul\":5119:5120   */\n      dup3\n        /* \"#utility.yul\":5116:5124   */\n      lt\n        /* \"#utility.yul\":5113:5147   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":5127:5145   */\n      tag_289\n      tag_244\n      jump\t// in\n    tag_289:\n      pop\n        /* \"#utility.yul\":5164:5173   */\n      sub\n      swap1\n        /* \"#utility.yul\":5054:5179   */\n      jump\t// out\n        /* \"#utility.yul\":5463:5740   */\n    tag_163:\n        /* \"#utility.yul\":5530:5536   */\n      0x00\n        /* \"#utility.yul\":5583:5585   */\n      0x20\n        /* \"#utility.yul\":5571:5580   */\n      dup3\n        /* \"#utility.yul\":5562:5569   */\n      dup5\n        /* \"#utility.yul\":5558:5581   */\n      sub\n        /* \"#utility.yul\":5554:5586   */\n      slt\n        /* \"#utility.yul\":5551:5603   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":5599:5600   */\n      0x00\n        /* \"#utility.yul\":5596:5597   */\n      dup1\n        /* \"#utility.yul\":5589:5601   */\n      revert\n        /* \"#utility.yul\":5551:5603   */\n    tag_292:\n        /* \"#utility.yul\":5631:5640   */\n      dup2\n        /* \"#utility.yul\":5625:5641   */\n      mload\n        /* \"#utility.yul\":5684:5689   */\n      dup1\n        /* \"#utility.yul\":5677:5690   */\n      iszero\n        /* \"#utility.yul\":5670:5691   */\n      iszero\n        /* \"#utility.yul\":5663:5668   */\n      dup2\n        /* \"#utility.yul\":5660:5692   */\n      eq\n        /* \"#utility.yul\":5650:5710   */\n      tag_271\n      jumpi\n        /* \"#utility.yul\":5706:5707   */\n      0x00\n        /* \"#utility.yul\":5703:5704   */\n      dup1\n        /* \"#utility.yul\":5696:5708   */\n      revert\n        /* \"#utility.yul\":5745:6300   */\n    tag_190:\n        /* \"#utility.yul\":5856:5862   */\n      0x00\n        /* \"#utility.yul\":5909:5911   */\n      0x20\n        /* \"#utility.yul\":5897:5906   */\n      dup3\n        /* \"#utility.yul\":5888:5895   */\n      dup5\n        /* \"#utility.yul\":5884:5907   */\n      sub\n        /* \"#utility.yul\":5880:5912   */\n      slt\n        /* \"#utility.yul\":5877:5929   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":5925:5926   */\n      0x00\n        /* \"#utility.yul\":5922:5923   */\n      dup1\n        /* \"#utility.yul\":5915:5927   */\n      revert\n        /* \"#utility.yul\":5877:5929   */\n    tag_295:\n        /* \"#utility.yul\":5958:5960   */\n      0x40\n        /* \"#utility.yul\":5952:5961   */\n      mload\n        /* \"#utility.yul\":6000:6002   */\n      0x20\n        /* \"#utility.yul\":5992:5998   */\n      dup2\n        /* \"#utility.yul\":5988:6003   */\n      add\n        /* \"#utility.yul\":6069:6075   */\n      dup2\n        /* \"#utility.yul\":6057:6067   */\n      dup2\n        /* \"#utility.yul\":6054:6076   */\n      lt\n        /* \"#utility.yul\":6033:6051   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6021:6031   */\n      dup3\n        /* \"#utility.yul\":6018:6052   */\n      gt\n        /* \"#utility.yul\":6015:6077   */\n      or\n        /* \"#utility.yul\":6012:6197   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":6119:6129   */\n      0x4e487b71\n        /* \"#utility.yul\":6114:6117   */\n      0xe0\n        /* \"#utility.yul\":6110:6130   */\n      shl\n        /* \"#utility.yul\":6107:6108   */\n      0x00\n        /* \"#utility.yul\":6100:6131   */\n      mstore\n        /* \"#utility.yul\":6154:6158   */\n      0x41\n        /* \"#utility.yul\":6151:6152   */\n      0x04\n        /* \"#utility.yul\":6144:6159   */\n      mstore\n        /* \"#utility.yul\":6182:6186   */\n      0x24\n        /* \"#utility.yul\":6179:6180   */\n      0x00\n        /* \"#utility.yul\":6172:6187   */\n      revert\n        /* \"#utility.yul\":6012:6197   */\n    tag_296:\n        /* \"#utility.yul\":6213:6215   */\n      0x40\n        /* \"#utility.yul\":6206:6228   */\n      mstore\n        /* \"#utility.yul\":6252:6268   */\n      swap2\n      mload\n        /* \"#utility.yul\":6237:6269   */\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":6244:6250   */\n      swap2\n        /* \"#utility.yul\":5745:6300   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7044:7172   */\n    tag_203:\n        /* \"#utility.yul\":7084:7087   */\n      0x00\n        /* \"#utility.yul\":7115:7116   */\n      dup3\n        /* \"#utility.yul\":7111:7117   */\n      not\n        /* \"#utility.yul\":7108:7109   */\n      dup3\n        /* \"#utility.yul\":7105:7118   */\n      gt\n        /* \"#utility.yul\":7102:7141   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":7121:7139   */\n      tag_301\n      tag_244\n      jump\t// in\n    tag_301:\n      pop\n        /* \"#utility.yul\":7157:7166   */\n      add\n      swap1\n        /* \"#utility.yul\":7044:7172   */\n      jump\t// out\n        /* \"#utility.yul\":9738:10842   */\n    tag_237:\n        /* \"#utility.yul\":9868:9871   */\n      0x00\n        /* \"#utility.yul\":9897:9898   */\n      dup1\n        /* \"#utility.yul\":9930:9936   */\n      dup4\n        /* \"#utility.yul\":9924:9937   */\n      sload\n        /* \"#utility.yul\":9960:9963   */\n      dup2\n        /* \"#utility.yul\":9982:9983   */\n      0x01\n        /* \"#utility.yul\":10010:10019   */\n      dup3\n        /* \"#utility.yul\":10006:10008   */\n      dup2\n        /* \"#utility.yul\":10002:10020   */\n      shr\n        /* \"#utility.yul\":9992:10020   */\n      swap2\n      pop\n        /* \"#utility.yul\":10070:10072   */\n      dup1\n        /* \"#utility.yul\":10059:10068   */\n      dup4\n        /* \"#utility.yul\":10055:10073   */\n      and\n        /* \"#utility.yul\":10092:10110   */\n      dup1\n        /* \"#utility.yul\":10082:10143   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":10136:10140   */\n      0x7f\n        /* \"#utility.yul\":10128:10134   */\n      dup4\n        /* \"#utility.yul\":10124:10141   */\n      and\n        /* \"#utility.yul\":10114:10141   */\n      swap3\n      pop\n        /* \"#utility.yul\":10082:10143   */\n    tag_310:\n        /* \"#utility.yul\":10162:10164   */\n      0x20\n        /* \"#utility.yul\":10210:10212   */\n      dup1\n        /* \"#utility.yul\":10202:10208   */\n      dup5\n        /* \"#utility.yul\":10199:10213   */\n      lt\n        /* \"#utility.yul\":10179:10197   */\n      dup3\n        /* \"#utility.yul\":10176:10214   */\n      sub\n        /* \"#utility.yul\":10173:10338   */\n      tag_311\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":10237:10270   */\n      dup7\n      mstore\n        /* \"#utility.yul\":10293:10297   */\n      0x22\n        /* \"#utility.yul\":10290:10291   */\n      0x04\n        /* \"#utility.yul\":10283:10298   */\n      mstore\n        /* \"#utility.yul\":10323:10327   */\n      0x24\n        /* \"#utility.yul\":10244:10247   */\n      dup7\n        /* \"#utility.yul\":10311:10328   */\n      revert\n        /* \"#utility.yul\":10173:10338   */\n    tag_311:\n        /* \"#utility.yul\":10354:10372   */\n      dup2\n        /* \"#utility.yul\":10381:10485   */\n      dup1\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":10499:10500   */\n      0x01\n        /* \"#utility.yul\":10494:10817   */\n      dup2\n      eq\n      tag_314\n      jumpi\n        /* \"#utility.yul\":10347:10817   */\n      jump(tag_312)\n        /* \"#utility.yul\":10381:10485   */\n    tag_313:\n      not(0xff)\n        /* \"#utility.yul\":10414:10438   */\n      dup7\n      and\n        /* \"#utility.yul\":10402:10439   */\n      dup10\n      mstore\n        /* \"#utility.yul\":10459:10475   */\n      dup5\n      dup10\n      add\n      swap7\n      pop\n        /* \"#utility.yul\":10381:10485   */\n      jump(tag_312)\n        /* \"#utility.yul\":10494:10817   */\n    tag_314:\n        /* \"#utility.yul\":9685:9686   */\n      0x00\n        /* \"#utility.yul\":9678:9692   */\n      dup11\n      dup2\n      mstore\n        /* \"#utility.yul\":9722:9726   */\n      0x20\n        /* \"#utility.yul\":9709:9727   */\n      swap1\n      keccak256\n        /* \"#utility.yul\":10592:10593   */\n      0x00\n        /* \"#utility.yul\":10606:10771   */\n    tag_316:\n        /* \"#utility.yul\":10620:10626   */\n      dup7\n        /* \"#utility.yul\":10617:10618   */\n      dup2\n        /* \"#utility.yul\":10614:10627   */\n      lt\n        /* \"#utility.yul\":10606:10771   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":10698:10712   */\n      dup2\n      sload\n        /* \"#utility.yul\":10685:10696   */\n      dup12\n      dup3\n      add\n        /* \"#utility.yul\":10678:10713   */\n      mstore\n        /* \"#utility.yul\":10741:10757   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":10635:10645   */\n      dup4\n      add\n        /* \"#utility.yul\":10606:10771   */\n      jump(tag_316)\n    tag_318:\n        /* \"#utility.yul\":10610:10613   */\n      pop\n      pop\n        /* \"#utility.yul\":10800:10806   */\n      dup5\n        /* \"#utility.yul\":10795:10798   */\n      dup10\n        /* \"#utility.yul\":10791:10807   */\n      add\n        /* \"#utility.yul\":10784:10807   */\n      swap7\n      pop\n        /* \"#utility.yul\":10347:10817   */\n    tag_312:\n      pop\n        /* \"#utility.yul\":10833:10836   */\n      swap5\n      swap9\n        /* \"#utility.yul\":9738:10842   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n\n    auxdata: 0xa2646970667358221220416eb4fc8458d97e53acc0c611c6f099e186734d0a93d6d033daf58e948f43ae64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_479": {
									"entryPoint": null,
									"id": 479,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_76": {
									"entryPoint": null,
									"id": 76,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@computeDomainSeparator_330": {
									"entryPoint": 229,
									"id": 330,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_addresst_addresst_address_fromMemory": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"array_dataslot_bytes_storage_ptr": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4307:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:8"
															},
															"nodeType": "YulIf",
															"src": "220:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:8"
															},
															"nodeType": "YulIf",
															"src": "353:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:8"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:8"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:8"
															},
															"nodeType": "YulIf",
															"src": "536:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:8"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:8"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:8"
															},
															"nodeType": "YulIf",
															"src": "698:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:8"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:8"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:8",
																"statements": []
															},
															"src": "779:133:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:8"
															},
															"nodeType": "YulIf",
															"src": "921:80:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:8",
														"type": ""
													}
												],
												"src": "146:885:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1096:117:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1106:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1121:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1115:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1106:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1191:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1200:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1203:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1193:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1193:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1193:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1150:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1161:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1176:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1181:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1172:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1172:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1185:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1168:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1168:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1157:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1157:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1147:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1147:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1140:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:50:8"
															},
															"nodeType": "YulIf",
															"src": "1137:70:8"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1075:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1086:5:8",
														"type": ""
													}
												],
												"src": "1036:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1402:786:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1423:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1432:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1419:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1419:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1444:3:8",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1415:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1415:33:8"
															},
															"nodeType": "YulIf",
															"src": "1412:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1474:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1494:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1488:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1488:16:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1478:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1513:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1531:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1535:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1527:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1527:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1523:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1523:18:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1517:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1568:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1577:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1580:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1570:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1570:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1570:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1556:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1564:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1553:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1553:14:8"
															},
															"nodeType": "YulIf",
															"src": "1550:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1593:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1636:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1647:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1632:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1656:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1603:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1603:61:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1593:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1673:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1699:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1710:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1695:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1695:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1689:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1689:25:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1677:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1743:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1752:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1745:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1745:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1745:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1729:8:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1739:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1726:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1726:16:8"
															},
															"nodeType": "YulIf",
															"src": "1723:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1768:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1811:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1822:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1807:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1807:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1833:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1778:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1778:63:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1768:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1850:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1873:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1884:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1869:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1869:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1863:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:25:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1854:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1936:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1945:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1948:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1938:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1938:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1910:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1921:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1928:4:8",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1917:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1917:16:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1907:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1907:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1900:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1900:35:8"
															},
															"nodeType": "YulIf",
															"src": "1897:55:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1971:5:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1961:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1985:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2029:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2040:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2025:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2025:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1995:29:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1995:49:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1985:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2053:60:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2097:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2108:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2093:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2093:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2063:29:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:50:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2053:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2122:60:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2166:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2177:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2162:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2162:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2132:29:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2132:50:8"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "2122:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1328:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1339:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1351:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1359:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1367:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1375:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1383:6:8",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1391:6:8",
														"type": ""
													}
												],
												"src": "1218:970:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2248:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2258:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2272:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2275:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2268:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2268:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2258:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2289:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2319:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2325:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2315:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2293:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2368:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2382:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2390:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2378:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2378:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2346:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2339:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2339:26:8"
															},
															"nodeType": "YulIf",
															"src": "2336:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2456:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2477:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2484:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2489:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2480:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2480:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2470:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2470:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2470:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2521:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2524:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2514:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2514:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2514:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2549:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2552:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2542:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2542:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2542:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2412:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2435:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2443:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2432:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2432:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2409:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:38:8"
															},
															"nodeType": "YulIf",
															"src": "2406:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2228:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2237:6:8",
														"type": ""
													}
												],
												"src": "2193:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2637:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2654:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2657:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2647:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2647:14:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2647:14:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2670:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2688:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2691:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2678:9:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2678:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2670:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_bytes_storage_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2628:4:8",
														"type": ""
													}
												],
												"src": "2578:124:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2845:966:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2855:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2866:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nodeType": "YulTypedName",
																	"src": "2859:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2876:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2899:6:8"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "2893:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2893:13:8"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "2880:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2915:17:8",
															"value": {
																"name": "ret",
																"nodeType": "YulIdentifier",
																"src": "2929:3:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2919:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2941:11:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2951:1:8",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2945:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2961:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2975:2:8"
																	},
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "2979:9:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2971:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2971:18:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2961:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2998:44:8",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "3028:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3039:2:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3024:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3024:18:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3002:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3081:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3083:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3097:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3105:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3093:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3093:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3083:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3061:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3054:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3054:26:8"
															},
															"nodeType": "YulIf",
															"src": "3051:61:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3121:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3131:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3125:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3192:115:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "3213:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3222:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3227:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3218:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3218:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3206:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3206:33:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3206:33:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3259:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3262:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3252:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3252:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3252:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "3287:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3292:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3280:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3280:17:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3280:17:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3148:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3171:6:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3179:2:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3168:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3168:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3145:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:38:8"
															},
															"nodeType": "YulIf",
															"src": "3142:165:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3357:97:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "3378:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "3387:9:8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3402:3:8",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "3398:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3398:8:8"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "3383:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3383:24:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "3371:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3371:37:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3371:37:8"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "3421:23:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "3432:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "3437:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3428:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3428:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "3421:3:8"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3350:104:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:1:8",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3470:316:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3484:55:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "value0",
																							"nodeType": "YulIdentifier",
																							"src": "3532:6:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_bytes_storage_ptr",
																						"nodeType": "YulIdentifier",
																						"src": "3499:32:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3499:40:8"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "3488:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3552:10:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3561:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3556:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3629:111:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "3658:3:8"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "3663:1:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3654:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3654:11:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "3673:7:8"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "3667:5:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3667:14:8"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "3647:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3647:35:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3647:35:8"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3699:27:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "3714:7:8"
																									},
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "3723:2:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3710:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3710:16:8"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "3699:7:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3586:1:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "3589:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3583:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3583:13:8"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3597:19:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3599:15:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3608:1:8"
																									},
																									{
																										"name": "_2",
																										"nodeType": "YulIdentifier",
																										"src": "3611:2:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3604:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3604:10:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3599:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3579:3:8",
																					"statements": []
																				},
																				"src": "3575:165:8"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "3753:23:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "3764:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "3769:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3760:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3760:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "3753:3:8"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3463:323:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3468:1:8",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"name": "outOfPlaceEncoding",
																"nodeType": "YulIdentifier",
																"src": "3323:18:8"
															},
															"nodeType": "YulSwitch",
															"src": "3316:470:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3795:10:8",
															"value": {
																"name": "ret",
																"nodeType": "YulIdentifier",
																"src": "3802:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3795:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2821:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2826:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2837:3:8",
														"type": ""
													}
												],
												"src": "2707:1104:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4029:276:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4039:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4051:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4062:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4047:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4047:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4039:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4082:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4093:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4075:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4075:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4075:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4120:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4131:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4116:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4116:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4136:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4109:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4109:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4109:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4163:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4174:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4159:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4159:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4179:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4152:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4152:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4206:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4217:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4202:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4202:18:8"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4222:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4195:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4195:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4249:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4260:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4245:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4245:19:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "4270:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4286:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4291:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4282:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4282:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4295:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4278:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4278:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4266:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4266:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:61:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:61:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3966:9:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3977:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3985:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3993:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4001:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4009:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4020:4:8",
														"type": ""
													}
												],
												"src": "3816:489:8"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value2 := value\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n        value5 := abi_decode_address_fromMemory(add(headStart, 160))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_bytes_storage_ptr(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := ret\n        let _1 := 1\n        length := shr(_1, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        let _2 := 32\n        if eq(outOfPlaceEncoding, lt(length, _2))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(ret, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, length)\n        }\n        case 1 {\n            let dataPos := array_dataslot_bytes_storage_ptr(value0)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60e060405260006006553480156200001657600080fd5b506040516200179738038062001797833981016040819052620000399162000311565b85858582600090805190602001906200005492919062000181565b5081516200006a90600190602085019062000181565b5060ff81166080524660a05262000080620000e5565b60c0525050600880546001600160a01b039485166001600160a01b031991821617909155600a805495851695821686179055600b80549390941692811683179093555060098054831690931790925560078054909116909117905550620004aa915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405162000119919062000407565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8280546200018f90620003cb565b90600052602060002090601f016020900481019282620001b35760008555620001fe565b82601f10620001ce57805160ff1916838001178555620001fe565b82800160010185558215620001fe579182015b82811115620001fe578251825591602001919060010190620001e1565b506200020c92915062000210565b5090565b5b808211156200020c576000815560010162000211565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200024f57600080fd5b81516001600160401b03808211156200026c576200026c62000227565b604051601f8301601f19908116603f0116810190828211818310171562000297576200029762000227565b81604052838152602092508683858801011115620002b457600080fd5b600091505b83821015620002d85785820183015181830184015290820190620002b9565b83821115620002ea5760008385830101525b9695505050505050565b80516001600160a01b03811681146200030c57600080fd5b919050565b60008060008060008060c087890312156200032b57600080fd5b86516001600160401b03808211156200034357600080fd5b620003518a838b016200023d565b975060208901519150808211156200036857600080fd5b506200037789828a016200023d565b955050604087015160ff811681146200038f57600080fd5b93506200039f60608801620002f4565b9250620003af60808801620002f4565b9150620003bf60a08801620002f4565b90509295509295509295565b600181811c90821680620003e057607f821691505b6020821081036200040157634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200042457607f831692505b602080841082036200044457634e487b7160e01b86526022600452602486fd5b8180156200045b57600181146200046d576200049c565b60ff198616895284890196506200049c565b60008a81526020902060005b86811015620004945781548b82015290850190830162000479565b505084890196505b509498975050505050505050565b60805160a05160c0516112bd620004da60003960006107b10152600061077c0152600061027101526112bd6000f3fe6080604052600436106101395760003560e01c80637535d246116100ab578063bcaaf5761161006f578063bcaaf576146103f6578063d0ebdbe714610416578063d505accf14610436578063d859562c14610456578063dd62ed3e14610476578063f85cb5c8146104ae57600080fd5b80637535d246146103545780637ecebe001461037457806395d89b41146103a1578063a9059cbb146103b6578063b6b55f25146103d657600080fd5b8063313ce567116100fd578063313ce5671461025f5780633644e515146102a5578063481c6a75146102ba5780634e71d92d146102f25780636b6bd8d91461030757806370a082311461032757600080fd5b806306fdde03146101a0578063095ea7b3146101cb57806318160ddd146101fb57806323b872dd1461021f5780632e1a7d4d1461023f57600080fd5b3661019b5760405162461bcd60e51b815260206004820152602560248201527f436f6e74726163742063616e206f6e6c792068616e646c6520455243323020746044820152646f6b656e7360d81b60648201526084015b60405180910390fd5b005b600080fd5b3480156101ac57600080fd5b506101b56104ce565b6040516101c29190610f23565b60405180910390f35b3480156101d757600080fd5b506101eb6101e6366004610f94565b61055c565b60405190151581526020016101c2565b34801561020757600080fd5b5061021160025481565b6040519081526020016101c2565b34801561022b57600080fd5b506101eb61023a366004610fbe565b6105c8565b34801561024b57600080fd5b5061019961025a366004610ffa565b6106a8565b34801561026b57600080fd5b506102937f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016101c2565b3480156102b157600080fd5b50610211610778565b3480156102c657600080fd5b506007546102da906001600160a01b031681565b6040516001600160a01b0390911681526020016101c2565b3480156102fe57600080fd5b506101996107d3565b34801561031357600080fd5b506008546102da906001600160a01b031681565b34801561033357600080fd5b50610211610342366004611013565b60036020526000908152604090205481565b34801561036057600080fd5b50600b546102da906001600160a01b031681565b34801561038057600080fd5b5061021161038f366004611013565b60056020526000908152604090205481565b3480156103ad57600080fd5b506101b5610897565b3480156103c257600080fd5b506101eb6103d1366004610f94565b6108a4565b3480156103e257600080fd5b506101996103f1366004610ffa565b61090a565b34801561040257600080fd5b50610199610411366004611013565b610ab3565b34801561042257600080fd5b50610199610431366004611013565b610b1e565b34801561044257600080fd5b50610199610451366004611035565b610b89565b34801561046257600080fd5b50600a546102da906001600160a01b031681565b34801561048257600080fd5b506102116104913660046110a8565b600460209081526000928352604080842090915290825290205481565b3480156104ba57600080fd5b506009546102da906001600160a01b031681565b600080546104db906110db565b80601f0160208091040260200160405190810160405280929190818152602001828054610507906110db565b80156105545780601f1061052957610100808354040283529160200191610554565b820191906000526020600020905b81548152906001019060200180831161053757829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105b79086815260200190565b60405180910390a350600192915050565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610624576105ff838261112b565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b0385166000908152600360205260408120805485929061064c90849061112b565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020611268833981519152906106959087815260200190565b60405180910390a3506001949350505050565b80600660008282546106ba919061112b565b909155506106ca90503382610dcd565b600a5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561071b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073f9190611142565b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b60007f000000000000000000000000000000000000000000000000000000000000000046146107ae576107a9610e37565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b60006006546002546107e5919061112b565b600a5460085460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052929350169063a9059cbb906044016020604051808303816000875af115801561083c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108609190611142565b506040518181527f7a355715549cfe7c1cba26304350343fbddc4b4f72d3ce3e7c27117dd20b5cb89060200160405180910390a150565b600180546104db906110db565b336000908152600360205260408120805483919083906108c590849061112b565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020611268833981519152906105b79086815260200190565b600b5460095460405163c44b11f760e01b81526001600160a01b039182166004820152600092919091169063c44b11f790602401602060405180830381865afa15801561095b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097f9190611164565b8051909150670100000000000000166000036109dd5760405162461bcd60e51b815260206004820152601e60248201527f556e6465726c79696e67204173736574206973206e6f742061637469766500006044820152606401610190565b600a546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610a34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a589190611142565b50610a633383610ed1565b8160066000828254610a7591906111b4565b909155505060405182815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a25050565b6007546001600160a01b03163314610afc5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610190565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b03163314610b675760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610190565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b42841015610bd95760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606401610190565b60006001610be5610778565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610cf1573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610d275750876001600160a01b0316816001600160a01b0316145b610d645760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610190565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b6001600160a01b03821660009081526003602052604081208054839290610df590849061112b565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020611268833981519152906020015b60405180910390a35050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610e6991906111cc565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8060026000828254610ee391906111b4565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481526000805160206112688339815191529101610e2b565b600060208083528351808285015260005b81811015610f5057858101830151858201604001528201610f34565b81811115610f62576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610f8f57600080fd5b919050565b60008060408385031215610fa757600080fd5b610fb083610f78565b946020939093013593505050565b600080600060608486031215610fd357600080fd5b610fdc84610f78565b9250610fea60208501610f78565b9150604084013590509250925092565b60006020828403121561100c57600080fd5b5035919050565b60006020828403121561102557600080fd5b61102e82610f78565b9392505050565b600080600080600080600060e0888a03121561105057600080fd5b61105988610f78565b965061106760208901610f78565b95506040880135945060608801359350608088013560ff8116811461108b57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156110bb57600080fd5b6110c483610f78565b91506110d260208401610f78565b90509250929050565b600181811c908216806110ef57607f821691505b60208210810361110f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561113d5761113d611115565b500390565b60006020828403121561115457600080fd5b8151801515811461102e57600080fd5b60006020828403121561117657600080fd5b6040516020810181811067ffffffffffffffff821117156111a757634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b600082198211156111c7576111c7611115565b500190565b600080835481600182811c9150808316806111e857607f831692505b6020808410820361120757634e487b7160e01b86526022600452602486fd5b81801561121b576001811461122c57611259565b60ff19861689528489019650611259565b60008a81526020902060005b868110156112515781548b820152908501908301611238565b505084890196505b50949897505050505050505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220416eb4fc8458d97e53acc0c611c6f099e186734d0a93d6d033daf58e948f43ae64736f6c634300080e0033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1797 CODESIZE SUB DUP1 PUSH3 0x1797 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x39 SWAP2 PUSH3 0x311 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP3 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x54 SWAP3 SWAP2 SWAP1 PUSH3 0x181 JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0x6A SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x181 JUMP JUMPDEST POP PUSH1 0xFF DUP2 AND PUSH1 0x80 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0x80 PUSH3 0xE5 JUMP JUMPDEST PUSH1 0xC0 MSTORE POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD SWAP6 DUP6 AND SWAP6 DUP3 AND DUP7 OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD SWAP4 SWAP1 SWAP5 AND SWAP3 DUP2 AND DUP4 OR SWAP1 SWAP4 SSTORE POP PUSH1 0x9 DUP1 SLOAD DUP4 AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x4AA SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH3 0x119 SWAP2 SWAP1 PUSH3 0x407 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x18F SWAP1 PUSH3 0x3CB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1B3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1FE JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1CE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1FE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1FE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1FE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1E1 JUMP JUMPDEST POP PUSH3 0x20C SWAP3 SWAP2 POP PUSH3 0x210 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x20C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x211 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x26C JUMPI PUSH3 0x26C PUSH3 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x297 JUMPI PUSH3 0x297 PUSH3 0x227 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x2D8 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x2B9 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x2EA JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x351 DUP11 DUP4 DUP12 ADD PUSH3 0x23D JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x377 DUP10 DUP3 DUP11 ADD PUSH3 0x23D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 POP PUSH3 0x39F PUSH1 0x60 DUP9 ADD PUSH3 0x2F4 JUMP JUMPDEST SWAP3 POP PUSH3 0x3AF PUSH1 0x80 DUP9 ADD PUSH3 0x2F4 JUMP JUMPDEST SWAP2 POP PUSH3 0x3BF PUSH1 0xA0 DUP9 ADD PUSH3 0x2F4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x3E0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x401 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH3 0x424 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 SUB PUSH3 0x444 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH3 0x45B JUMPI PUSH1 0x1 DUP2 EQ PUSH3 0x46D JUMPI PUSH3 0x49C JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH3 0x49C JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH3 0x494 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH3 0x479 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x12BD PUSH3 0x4DA PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x7B1 ADD MSTORE PUSH1 0x0 PUSH2 0x77C ADD MSTORE PUSH1 0x0 PUSH2 0x271 ADD MSTORE PUSH2 0x12BD PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x139 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7535D246 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xBCAAF576 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xBCAAF576 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xD0EBDBE7 EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0xD859562C EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xF85CB5C8 EQ PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7535D246 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x6B6BD8D9 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x19B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74726163742063616E206F6E6C792068616E646C652045524332302074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6F6B656E73 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x1E6 CALLDATASIZE PUSH1 0x4 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0xFBE JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0xFFA JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x778 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x2DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x7D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x2DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x2DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x897 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x8A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x3F1 CALLDATASIZE PUSH1 0x4 PUSH2 0xFFA JUMP JUMPDEST PUSH2 0x90A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x411 CALLDATASIZE PUSH1 0x4 PUSH2 0x1013 JUMP JUMPDEST PUSH2 0xAB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0x1013 JUMP JUMPDEST PUSH2 0xB1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0xB89 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x2DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x4DB SWAP1 PUSH2 0x10DB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x507 SWAP1 PUSH2 0x10DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x554 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x529 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x554 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x537 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x5B7 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x624 JUMPI PUSH2 0x5FF DUP4 DUP3 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x64C SWAP1 DUP5 SWAP1 PUSH2 0x112B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE MLOAD SWAP1 SWAP2 DUP8 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1268 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x695 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6BA SWAP2 SWAP1 PUSH2 0x112B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x6CA SWAP1 POP CALLER DUP3 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x71B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x73F SWAP2 SWAP1 PUSH2 0x1142 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ PUSH2 0x7AE JUMPI PUSH2 0x7A9 PUSH2 0xE37 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x2 SLOAD PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0x112B JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x83C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x860 SWAP2 SWAP1 PUSH2 0x1142 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x7A355715549CFE7C1CBA26304350343FBDDC4B4F72D3CE3E7C27117DD20B5CB8 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x4DB SWAP1 PUSH2 0x10DB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 PUSH2 0x8C5 SWAP1 DUP5 SWAP1 PUSH2 0x112B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1268 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x5B7 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC44B11F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xC44B11F7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x95B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97F SWAP2 SWAP1 PUSH2 0x1164 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH8 0x100000000000000 AND PUSH1 0x0 SUB PUSH2 0x9DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6465726C79696E67204173736574206973206E6F74206163746976650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA34 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0x1142 JUMP JUMPDEST POP PUSH2 0xA63 CALLER DUP4 PUSH2 0xED1 JUMP JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA75 SWAP2 SWAP1 PUSH2 0x11B4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x15539055551213D492569151 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x15539055551213D492569151 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xBD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5045524D49545F444541444C494E455F45585049524544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0xBE5 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP5 ADD MSTORE DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 DUP14 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP1 DUP4 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x102 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x122 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x142 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP5 MSTORE SWAP1 DUP4 ADD DUP1 DUP4 MSTORE MSTORE PUSH1 0xFF DUP8 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD27 JUMPI POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xD64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x24A72B20A624A22FA9A4A3A722A9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP11 DUP6 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP10 SWAP1 SSTORE MLOAD DUP9 DUP2 MSTORE SWAP2 SWAP3 DUP11 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xDF5 SWAP1 DUP5 SWAP1 PUSH2 0x112B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1268 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xE69 SWAP2 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEE3 SWAP2 SWAP1 PUSH2 0x11B4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1268 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF50 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xF34 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xF62 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB0 DUP4 PUSH2 0xF78 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFDC DUP5 PUSH2 0xF78 JUMP JUMPDEST SWAP3 POP PUSH2 0xFEA PUSH1 0x20 DUP6 ADD PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x100C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1025 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102E DUP3 PUSH2 0xF78 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1050 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1059 DUP9 PUSH2 0xF78 JUMP JUMPDEST SWAP7 POP PUSH2 0x1067 PUSH1 0x20 DUP10 ADD PUSH2 0xF78 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x108B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C4 DUP4 PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP PUSH2 0x10D2 PUSH1 0x20 DUP5 ADD PUSH2 0xF78 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x10EF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x110F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x113D JUMPI PUSH2 0x113D PUSH2 0x1115 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x102E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x11A7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x11C7 JUMPI PUSH2 0x11C7 PUSH2 0x1115 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x11E8 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 SUB PUSH2 0x1207 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x121B JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x122C JUMPI PUSH2 0x1259 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x1259 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1251 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x1238 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE PUSH15 0xB4FC8458D97E53ACC0C611C6F099E1 DUP7 PUSH20 0x4D0A93D6D033DAF58E948F43AE64736F6C634300 ADDMOD 0xE STOP CALLER ",
							"sourceMap": "552:2854:1:-:0;;;872:1;849:24;;1049:460;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1251:9;1262:11;1275:13;2098:5:0;2091:4;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2113:16:0;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;2139:20:0;;;;;2189:13;2170:32;;2239:24;:22;:24::i;:::-;2212:51;;-1:-1:-1;;1296:17:1::1;:38:::0;;-1:-1:-1;;;;;1296:38:1;;::::1;-1:-1:-1::0;;;;;;1296:38:1;;::::1;;::::0;;;1340:17:::1;:48:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;1394:4:::1;:38:::0;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;-1:-1:-1;1438:12:1::1;:33:::0;;;::::1;::::0;;::::1;::::0;;;1477:7:::1;:27:::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;552:2854:1;;-1:-1:-1;;552:2854:1;5507:446:0;5572:7;5669:95;5802:4;5786:22;;;;;;:::i;:::-;;;;;;;;;;5637:295;;;4075:25:8;;;;4116:18;;4109:34;;;;5830:14:0;4159:18:8;;;4152:34;5866:13:0;4202:18:8;;;4195:34;5909:4:0;4245:19:8;;;4238:61;4047:19;;5637:295:0;;;;;;;;;;;;5610:336;;;;;;5591:355;;5507:446;:::o;552:2854:1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;552:2854:1;;;-1:-1:-1;552:2854:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:8;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:8;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:8;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:8:o;1036:177::-;1115:13;;-1:-1:-1;;;;;1157:31:8;;1147:42;;1137:70;;1203:1;1200;1193:12;1137:70;1036:177;;;:::o;1218:970::-;1351:6;1359;1367;1375;1383;1391;1444:3;1432:9;1423:7;1419:23;1415:33;1412:53;;;1461:1;1458;1451:12;1412:53;1488:16;;-1:-1:-1;;;;;1553:14:8;;;1550:34;;;1580:1;1577;1570:12;1550:34;1603:61;1656:7;1647:6;1636:9;1632:22;1603:61;:::i;:::-;1593:71;;1710:2;1699:9;1695:18;1689:25;1673:41;;1739:2;1729:8;1726:16;1723:36;;;1755:1;1752;1745:12;1723:36;;1778:63;1833:7;1822:8;1811:9;1807:24;1778:63;:::i;:::-;1768:73;;;1884:2;1873:9;1869:18;1863:25;1928:4;1921:5;1917:16;1910:5;1907:27;1897:55;;1948:1;1945;1938:12;1897:55;1971:5;-1:-1:-1;1995:49:8;2040:2;2025:18;;1995:49;:::i;:::-;1985:59;;2063:50;2108:3;2097:9;2093:19;2063:50;:::i;:::-;2053:60;;2132:50;2177:3;2166:9;2162:19;2132:50;:::i;:::-;2122:60;;1218:970;;;;;;;;:::o;2193:380::-;2272:1;2268:12;;;;2315;;;2336:61;;2390:4;2382:6;2378:17;2368:27;;2336:61;2443:2;2435:6;2432:14;2412:18;2409:38;2406:161;;2489:10;2484:3;2480:20;2477:1;2470:31;2524:4;2521:1;2514:15;2552:4;2549:1;2542:15;2406:161;;2193:380;;;:::o;2707:1104::-;2837:3;2866:1;2899:6;2893:13;2929:3;2951:1;2979:9;2975:2;2971:18;2961:28;;3039:2;3028:9;3024:18;3061;3051:61;;3105:4;3097:6;3093:17;3083:27;;3051:61;3131:2;3179;3171:6;3168:14;3148:18;3145:38;3142:165;;-1:-1:-1;;;3206:33:8;;3262:4;3259:1;3252:15;3292:4;3213:3;3280:17;3142:165;3323:18;3350:104;;;;3468:1;3463:323;;;;3316:470;;3350:104;-1:-1:-1;;3383:24:8;;3371:37;;3428:16;;;;-1:-1:-1;3350:104:8;;3463:323;2654:1;2647:14;;;2691:4;2678:18;;3561:1;3575:165;3589:6;3586:1;3583:13;3575:165;;;3667:14;;3654:11;;;3647:35;3710:16;;;;3604:10;;3575:165;;;3579:3;;3769:6;3764:3;3760:16;3753:23;;3316:470;-1:-1:-1;3802:3:8;;2707:1104;-1:-1:-1;;;;;;;;2707:1104:8:o;3816:489::-;552:2854:1;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_300": {
									"entryPoint": 1912,
									"id": 300,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@POOL_434": {
									"entryPoint": null,
									"id": 434,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_640": {
									"entryPoint": null,
									"id": 640,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_burn_386": {
									"entryPoint": 3533,
									"id": 386,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_358": {
									"entryPoint": 3793,
									"id": 358,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_36": {
									"entryPoint": null,
									"id": 36,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_104": {
									"entryPoint": 1372,
									"id": 104,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_30": {
									"entryPoint": null,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_604": {
									"entryPoint": 2003,
									"id": 604,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@computeDomainSeparator_330": {
									"entryPoint": 3639,
									"id": 330,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_24": {
									"entryPoint": null,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_553": {
									"entryPoint": 2314,
									"id": 553,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@interestCollector_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@manager_424": {
									"entryPoint": null,
									"id": 424,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_20": {
									"entryPoint": 1230,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nonces_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@permit_285": {
									"entryPoint": 2953,
									"id": 285,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@reserveAsset_428": {
									"entryPoint": null,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setInterestCollector_616": {
									"entryPoint": 2739,
									"id": 616,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setManager_628": {
									"entryPoint": 2846,
									"id": 628,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_22": {
									"entryPoint": 2199,
									"id": 22,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_198": {
									"entryPoint": 1480,
									"id": 198,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_137": {
									"entryPoint": 2212,
									"id": 137,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@underlyingAgToken_431": {
									"entryPoint": null,
									"id": 431,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_583": {
									"entryPoint": 1704,
									"id": 583,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 4149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_ReserveConfigurationMap_$1410_memory_ptr_fromMemory": {
									"entryPoint": 4452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IAgToken_$745__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ILendingPool_$1201__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_39c39cd6feb809181197540dc197746d31d41d4d89b61ddd61a8b7a3d33e9e14__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b0645250b9b20f5c579a4994fd24877f14d64fe40149b7a647104dd4cb7118cd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_bytes_storage_ptr": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4373,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11338:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:8"
																	},
																	{
																		"hexValue": "436f6e74726163742063616e206f6e6c792068616e646c652045524332302074",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:34:8",
																		"type": "",
																		"value": "Contract can only handle ERC20 t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "349:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "360:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "345:18:8"
																	},
																	{
																		"hexValue": "6f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "365:7:8",
																		"type": "",
																		"value": "okens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "338:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "338:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "338:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "382:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "394:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "390:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "390:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "382:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_39c39cd6feb809181197540dc197746d31d41d4d89b61ddd61a8b7a3d33e9e14__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:8",
														"type": ""
													}
												],
												"src": "14:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "541:476:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "551:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "561:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "555:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "579:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "590:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "572:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "572:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "572:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "602:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "622:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "616:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "606:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "649:9:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "660:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "645:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "645:18:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "638:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "638:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "681:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "690:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "685:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "750:90:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "779:9:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "790:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "775:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "775:17:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "794:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "771:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "771:26:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "813:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "821:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "809:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "809:14:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "825:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "805:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "805:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "799:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "799:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "764:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "764:66:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "764:66:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "711:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "714:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "708:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "708:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "722:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "724:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "733:1:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "736:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "729:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "729:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "724:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "704:3:8",
																"statements": []
															},
															"src": "700:140:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "874:66:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "903:9:8"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "914:6:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "899:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "899:22:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "923:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "895:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "895:31:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "928:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "888:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "888:42:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "888:42:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "855:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "858:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "852:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "852:13:8"
															},
															"nodeType": "YulIf",
															"src": "849:91:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "949:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "965:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "984:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "992:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "980:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "980:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1001:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "997:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "997:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "976:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "976:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "961:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "961:45:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1008:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "957:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "957:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "949:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "510:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "521:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "532:4:8",
														"type": ""
													}
												],
												"src": "420:597:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1071:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1081:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1103:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1090:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1090:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1081:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1173:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1182:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1185:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1175:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1175:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1175:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1132:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1143:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1158:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1163:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1154:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1154:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1167:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1150:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1150:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1139:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1139:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1129:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1129:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1122:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:50:8"
															},
															"nodeType": "YulIf",
															"src": "1119:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1050:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1061:5:8",
														"type": ""
													}
												],
												"src": "1022:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1287:167:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1333:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1342:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1345:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1335:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1335:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1335:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1308:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1317:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1304:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1304:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1329:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1300:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1300:32:8"
															},
															"nodeType": "YulIf",
															"src": "1297:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1358:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1368:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1368:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1406:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1433:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1444:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1429:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1429:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1416:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1406:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1245:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1256:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1268:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1276:6:8",
														"type": ""
													}
												],
												"src": "1200:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1576:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1587:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1572:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1572:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1564:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1606:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1631:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1624:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1624:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1617:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1617:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1599:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1599:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1599:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1523:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1534:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1545:4:8",
														"type": ""
													}
												],
												"src": "1459:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1752:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1762:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1774:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1785:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1770:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1770:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1762:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1804:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1815:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1797:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1797:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1721:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1732:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1743:4:8",
														"type": ""
													}
												],
												"src": "1651:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1937:224:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1983:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1992:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1995:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1985:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1985:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1985:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1958:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1967:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1954:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1954:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1979:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1950:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1950:32:8"
															},
															"nodeType": "YulIf",
															"src": "1947:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2008:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2037:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2018:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2018:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2008:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2056:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2089:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2100:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2085:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2085:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2066:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2066:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2056:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2113:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2140:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2151:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2136:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2136:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2123:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2123:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2113:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1887:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1898:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1910:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1918:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1926:6:8",
														"type": ""
													}
												],
												"src": "1833:328:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2236:110:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2282:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2257:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2266:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2253:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2253:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2278:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2249:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2249:32:8"
															},
															"nodeType": "YulIf",
															"src": "2246:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2307:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2330:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2317:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2317:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2307:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2202:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2213:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2225:6:8",
														"type": ""
													}
												],
												"src": "2166:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2448:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2458:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2470:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2481:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2466:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2466:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2458:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2500:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2515:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2523:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2511:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2511:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2493:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2493:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2493:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2417:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2428:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2439:4:8",
														"type": ""
													}
												],
												"src": "2351:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2641:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2651:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2663:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2674:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2659:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2659:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2651:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2693:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2704:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2686:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2686:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2686:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2610:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2621:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2632:4:8",
														"type": ""
													}
												],
												"src": "2540:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2823:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2833:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2845:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2856:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2841:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2833:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2875:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2890:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2906:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2911:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2902:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2902:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2915:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2898:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2898:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2886:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2886:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2868:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2868:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2868:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2792:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2803:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2814:4:8",
														"type": ""
													}
												],
												"src": "2722:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3000:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3046:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3058:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3048:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3048:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3048:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3021:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3030:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3017:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3017:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3042:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3013:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3013:32:8"
															},
															"nodeType": "YulIf",
															"src": "3010:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3071:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3100:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3081:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3081:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3071:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2966:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2977:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2989:6:8",
														"type": ""
													}
												],
												"src": "2930:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3243:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3253:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3265:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3276:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3261:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3261:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3253:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3295:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3310:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3326:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3331:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3322:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3322:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3335:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3318:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3318:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3306:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3306:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3288:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3288:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3288:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ILendingPool_$1201__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3212:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3223:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3234:4:8",
														"type": ""
													}
												],
												"src": "3121:224:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3520:523:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3567:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3576:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3579:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3569:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3569:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3569:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3541:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3550:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3537:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3537:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3562:3:8",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3533:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3533:33:8"
															},
															"nodeType": "YulIf",
															"src": "3530:53:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3592:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3621:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3602:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3602:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3592:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3640:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3673:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3684:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3669:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3669:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3650:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3650:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3697:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3724:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3735:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3720:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3720:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3707:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3707:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3697:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3748:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3775:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3786:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3771:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3771:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3758:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3758:32:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3748:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3799:46:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3829:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3840:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3825:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3825:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3812:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3812:33:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3803:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3893:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3902:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3905:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3895:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3895:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3895:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3867:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3878:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3885:4:8",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3874:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3874:16:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3864:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3864:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3857:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3857:35:8"
															},
															"nodeType": "YulIf",
															"src": "3854:55:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3918:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3928:5:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3918:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3942:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3969:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3980:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3965:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3965:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3952:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3952:33:8"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "3942:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3994:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4021:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4032:3:8",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4017:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4017:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4004:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4004:33:8"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3438:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3449:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3461:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3469:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3477:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3485:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3493:6:8",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3501:6:8",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "3509:6:8",
														"type": ""
													}
												],
												"src": "3350:693:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4165:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4175:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4187:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4198:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4183:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4183:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4175:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4217:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4232:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4248:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4253:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4244:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4244:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4257:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4228:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4228:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4210:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4210:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4210:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IAgToken_$745__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4134:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4145:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4156:4:8",
														"type": ""
													}
												],
												"src": "4048:219:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4359:173:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4405:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4414:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4417:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4407:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4407:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4407:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4380:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4389:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4376:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4376:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4401:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4372:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4372:32:8"
															},
															"nodeType": "YulIf",
															"src": "4369:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4430:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4459:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4440:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4440:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4430:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4478:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4511:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4522:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4507:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4507:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4488:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4488:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4478:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4317:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4328:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4340:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4348:6:8",
														"type": ""
													}
												],
												"src": "4272:260:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4592:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4602:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4616:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4619:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4612:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4612:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4602:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4633:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4663:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4669:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4659:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4659:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4637:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4710:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4712:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4726:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4734:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4722:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4722:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4712:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4690:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4683:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4683:26:8"
															},
															"nodeType": "YulIf",
															"src": "4680:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4800:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4821:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4828:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4833:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4824:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4824:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4814:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4814:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4814:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4865:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4868:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4858:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4858:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4858:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4893:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4896:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4886:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4886:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4886:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4756:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4779:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4787:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4776:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4776:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4753:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4753:38:8"
															},
															"nodeType": "YulIf",
															"src": "4750:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4572:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4581:6:8",
														"type": ""
													}
												],
												"src": "4537:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4954:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4971:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4978:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4983:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4974:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4974:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4964:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4964:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4964:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5011:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5014:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5004:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5004:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5004:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5035:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5038:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5028:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5028:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5028:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4922:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5103:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5125:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5127:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5127:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5127:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5119:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5122:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5116:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5116:8:8"
															},
															"nodeType": "YulIf",
															"src": "5113:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5156:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5168:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5171:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5164:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5164:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5156:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5085:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5088:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5094:4:8",
														"type": ""
													}
												],
												"src": "5054:125:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5313:145:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5323:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5335:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5346:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5331:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5331:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5323:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5365:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5380:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5396:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5401:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5392:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5392:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5405:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5388:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5388:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5376:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5376:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5358:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5358:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5429:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5440:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5425:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5425:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5445:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5418:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5418:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5418:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5274:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5285:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5293:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5304:4:8",
														"type": ""
													}
												],
												"src": "5184:274:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5541:199:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5587:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5596:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5599:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5589:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5589:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5589:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5562:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5571:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5558:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5558:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5583:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5554:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5554:32:8"
															},
															"nodeType": "YulIf",
															"src": "5551:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5612:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5631:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5625:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5625:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5616:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5694:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5703:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5706:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5696:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5696:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5696:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5663:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "5684:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "5677:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5677:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5670:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5670:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5660:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5660:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5653:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5653:40:8"
															},
															"nodeType": "YulIf",
															"src": "5650:60:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5719:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5729:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5719:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5507:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5518:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5530:6:8",
														"type": ""
													}
												],
												"src": "5463:277:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5867:433:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5913:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5922:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5925:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5915:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5888:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5897:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5884:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5884:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5909:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5880:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5880:32:8"
															},
															"nodeType": "YulIf",
															"src": "5877:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5938:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5958:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5952:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5952:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "5942:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5970:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5992:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6000:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5988:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5988:15:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5974:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6086:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6107:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6114:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6119:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6110:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6110:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6100:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6100:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6100:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6151:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6154:4:8",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6144:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6144:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6144:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6179:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6182:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6172:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6172:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6172:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6021:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6033:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6018:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6018:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6057:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6069:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6054:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6054:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6015:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6015:62:8"
															},
															"nodeType": "YulIf",
															"src": "6012:185:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6213:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "6217:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6206:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6206:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6206:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6244:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6258:9:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6252:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6252:16:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6237:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6237:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6237:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6278:16:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6288:6:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6278:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_ReserveConfigurationMap_$1410_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5833:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5844:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5856:6:8",
														"type": ""
													}
												],
												"src": "5745:555:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6479:180:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6496:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6507:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6489:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6489:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6489:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6530:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6541:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6526:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6526:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6546:2:8",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6519:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6519:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6519:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6569:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6580:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6565:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6565:18:8"
																	},
																	{
																		"hexValue": "556e6465726c79696e67204173736574206973206e6f7420616374697665",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6585:32:8",
																		"type": "",
																		"value": "Underlying Asset is not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6558:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6558:60:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6558:60:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6627:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6639:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6650:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6635:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6635:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6627:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b0645250b9b20f5c579a4994fd24877f14d64fe40149b7a647104dd4cb7118cd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6456:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6470:4:8",
														"type": ""
													}
												],
												"src": "6305:354:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6821:218:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6831:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6843:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6854:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6839:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6839:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6831:4:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6866:29:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6884:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6889:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6880:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6880:11:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6893:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6876:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6876:19:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6870:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6911:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6926:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6934:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6922:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6922:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6904:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6904:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6904:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6958:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6969:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6954:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6954:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6978:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6986:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6974:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6974:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6947:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6947:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6947:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7010:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7021:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7006:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7006:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7026:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6999:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6999:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6999:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6774:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6785:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6793:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6801:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6812:4:8",
														"type": ""
													}
												],
												"src": "6664:375:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7092:80:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7119:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7121:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7121:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7121:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7108:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7115:1:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7111:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7111:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7105:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7105:13:8"
															},
															"nodeType": "YulIf",
															"src": "7102:39:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7150:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7161:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7164:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7157:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7157:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7150:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7075:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7078:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7084:3:8",
														"type": ""
													}
												],
												"src": "7044:128:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7351:162:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7368:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7379:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7361:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7361:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7361:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7402:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7413:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7398:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7398:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7418:2:8",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7391:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7391:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7391:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7441:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7452:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7437:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7437:18:8"
																	},
																	{
																		"hexValue": "554e415554484f52495a4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7457:14:8",
																		"type": "",
																		"value": "UNAUTHORIZED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7430:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7430:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7430:42:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7481:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7493:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7504:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7489:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7489:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7481:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7328:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7342:4:8",
														"type": ""
													}
												],
												"src": "7177:336:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7692:173:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7709:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7720:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7702:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7702:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7702:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7743:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7754:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7739:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7739:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7759:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7732:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7732:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7732:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7782:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7793:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7778:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7778:18:8"
																	},
																	{
																		"hexValue": "5045524d49545f444541444c494e455f45585049524544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7798:25:8",
																		"type": "",
																		"value": "PERMIT_DEADLINE_EXPIRED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7771:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7771:53:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7771:53:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7833:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7845:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7856:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7841:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7841:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7833:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7669:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7683:4:8",
														"type": ""
													}
												],
												"src": "7518:347:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8111:350:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8121:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8133:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8144:3:8",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8129:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8129:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8121:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8164:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8175:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8157:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8157:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8157:25:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8191:29:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8209:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8214:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8205:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8205:11:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8218:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8201:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8201:19:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8195:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8240:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8251:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8236:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8236:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8260:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8268:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8256:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8256:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8229:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8229:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8229:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8292:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8303:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8288:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8288:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "8312:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8320:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8308:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8308:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8281:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8281:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8281:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8344:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8355:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8340:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8340:18:8"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8360:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8333:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8333:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8333:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8387:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8398:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8383:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8383:19:8"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8404:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8376:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8376:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8376:35:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8431:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8442:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8427:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8427:19:8"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "8448:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8420:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8420:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8420:35:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8040:9:8",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "8051:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8059:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8067:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8075:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8083:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8091:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8102:4:8",
														"type": ""
													}
												],
												"src": "7870:591:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8714:144:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8731:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8740:3:8",
																				"type": "",
																				"value": "240"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8745:4:8",
																				"type": "",
																				"value": "6401"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8736:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8736:14:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8724:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8724:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8724:27:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8771:3:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8776:1:8",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8767:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8767:11:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8780:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8760:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8760:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8760:27:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8807:3:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8812:2:8",
																				"type": "",
																				"value": "34"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8803:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8803:12:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8817:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8796:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8796:28:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8796:28:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8833:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8844:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8849:2:8",
																		"type": "",
																		"value": "66"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8840:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8840:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8833:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8682:3:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8687:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8695:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8706:3:8",
														"type": ""
													}
												],
												"src": "8466:392:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9044:217:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9054:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9066:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9077:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9062:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9062:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9054:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9097:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9108:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9090:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9090:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9090:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9135:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9146:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9131:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9131:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9155:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9163:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9151:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9151:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9124:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9124:45:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9124:45:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9189:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9200:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9205:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9178:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9178:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9178:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9232:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9243:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9228:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9228:18:8"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9248:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9221:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9221:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9221:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8989:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9000:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9008:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9016:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9024:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9035:4:8",
														"type": ""
													}
												],
												"src": "8863:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9440:164:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9457:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9468:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9450:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9450:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9450:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9491:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9502:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9487:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9487:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9507:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9480:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9480:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9480:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9530:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9541:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9526:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9526:18:8"
																	},
																	{
																		"hexValue": "494e56414c49445f5349474e4552",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9546:16:8",
																		"type": "",
																		"value": "INVALID_SIGNER"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9519:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9519:44:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9519:44:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9572:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9584:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9595:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9580:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9580:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9572:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9417:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9431:4:8",
														"type": ""
													}
												],
												"src": "9266:338:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9668:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9685:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "9688:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9678:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9678:14:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9678:14:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9701:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9719:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9722:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "9709:9:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9709:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9701:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_bytes_storage_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "9651:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9659:4:8",
														"type": ""
													}
												],
												"src": "9609:124:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9876:966:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9886:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9897:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nodeType": "YulTypedName",
																	"src": "9890:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9907:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9930:6:8"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "9924:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9924:13:8"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "9911:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9946:17:8",
															"value": {
																"name": "ret",
																"nodeType": "YulIdentifier",
																"src": "9960:3:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9950:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9972:11:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9982:1:8",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9976:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9992:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10006:2:8"
																	},
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "10010:9:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "10002:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10002:18:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9992:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10029:44:8",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "10059:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10070:2:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10055:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10055:18:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10033:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10112:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10114:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10128:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10136:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10124:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10124:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10114:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10092:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10085:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10085:26:8"
															},
															"nodeType": "YulIf",
															"src": "10082:61:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10152:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10162:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "10156:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10223:115:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "10244:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10253:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10258:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "10249:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10249:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10237:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10237:33:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10237:33:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10290:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10293:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10283:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10283:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10283:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "10318:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10323:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10311:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10311:17:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10311:17:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10179:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10202:6:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "10210:2:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10199:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10199:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10176:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10176:38:8"
															},
															"nodeType": "YulIf",
															"src": "10173:165:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10388:97:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "10409:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "10418:9:8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "10433:3:8",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "10429:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "10429:8:8"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "10414:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10414:24:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "10402:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10402:37:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10402:37:8"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "10452:23:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "10463:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10468:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10459:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10459:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "10452:3:8"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10381:104:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10386:1:8",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10501:316:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10515:55:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "value0",
																							"nodeType": "YulIdentifier",
																							"src": "10563:6:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_bytes_storage_ptr",
																						"nodeType": "YulIdentifier",
																						"src": "10530:32:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10530:40:8"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "10519:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10583:10:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10592:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "10587:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10660:111:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "10689:3:8"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "10694:1:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "10685:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10685:11:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "10704:7:8"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "10698:5:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10698:14:8"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "10678:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10678:35:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "10678:35:8"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "10730:27:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "10745:7:8"
																									},
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "10754:2:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10741:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10741:16:8"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "10730:7:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10617:1:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10620:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "10614:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10614:13:8"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "10628:19:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "10630:15:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "10639:1:8"
																									},
																									{
																										"name": "_2",
																										"nodeType": "YulIdentifier",
																										"src": "10642:2:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10635:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10635:10:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10630:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "10610:3:8",
																					"statements": []
																				},
																				"src": "10606:165:8"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "10784:23:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "10795:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10800:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10791:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10791:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "10784:3:8"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10494:323:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10499:1:8",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"name": "outOfPlaceEncoding",
																"nodeType": "YulIdentifier",
																"src": "10354:18:8"
															},
															"nodeType": "YulSwitch",
															"src": "10347:470:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10826:10:8",
															"value": {
																"name": "ret",
																"nodeType": "YulIdentifier",
																"src": "10833:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10826:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9852:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9857:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9868:3:8",
														"type": ""
													}
												],
												"src": "9738:1104:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11060:276:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11070:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11082:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11093:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11078:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11078:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11070:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11113:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11124:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11106:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11106:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11106:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11151:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11162:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11147:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11147:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11167:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11140:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11140:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11140:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11194:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11205:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11190:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11190:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11210:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11183:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11183:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11183:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11237:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11248:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11233:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11233:18:8"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11253:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11226:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11226:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11226:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11280:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11291:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11276:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11276:19:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "11301:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11317:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11322:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "11313:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11313:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11326:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "11309:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11309:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11297:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11297:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11269:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11269:61:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11269:61:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10997:9:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "11008:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11016:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11024:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11032:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11040:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11051:4:8",
														"type": ""
													}
												],
												"src": "10847:489:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_39c39cd6feb809181197540dc197746d31d41d4d89b61ddd61a8b7a3d33e9e14__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Contract can only handle ERC20 t\")\n        mstore(add(headStart, 96), \"okens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_contract$_ILendingPool_$1201__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value := calldataload(add(headStart, 128))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value4 := value\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_encode_tuple_t_contract$_IAgToken_$745__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_struct$_ReserveConfigurationMap_$1410_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 32)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        mstore(memPtr, mload(headStart))\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_b0645250b9b20f5c579a4994fd24877f14d64fe40149b7a647104dd4cb7118cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Underlying Asset is not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"UNAUTHORIZED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"PERMIT_DEADLINE_EXPIRED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, shl(240, 6401))\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"INVALID_SIGNER\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_bytes_storage_ptr(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := ret\n        let _1 := 1\n        length := shr(_1, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        let _2 := 32\n        if eq(outOfPlaceEncoding, lt(length, _2))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(ret, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, length)\n        }\n        case 1 {\n            let dataPos := array_dataslot_bytes_storage_ptr(value0)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"24": [
									{
										"length": 32,
										"start": 625
									}
								],
								"38": [
									{
										"length": 32,
										"start": 1916
									}
								],
								"40": [
									{
										"length": 32,
										"start": 1969
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106101395760003560e01c80637535d246116100ab578063bcaaf5761161006f578063bcaaf576146103f6578063d0ebdbe714610416578063d505accf14610436578063d859562c14610456578063dd62ed3e14610476578063f85cb5c8146104ae57600080fd5b80637535d246146103545780637ecebe001461037457806395d89b41146103a1578063a9059cbb146103b6578063b6b55f25146103d657600080fd5b8063313ce567116100fd578063313ce5671461025f5780633644e515146102a5578063481c6a75146102ba5780634e71d92d146102f25780636b6bd8d91461030757806370a082311461032757600080fd5b806306fdde03146101a0578063095ea7b3146101cb57806318160ddd146101fb57806323b872dd1461021f5780632e1a7d4d1461023f57600080fd5b3661019b5760405162461bcd60e51b815260206004820152602560248201527f436f6e74726163742063616e206f6e6c792068616e646c6520455243323020746044820152646f6b656e7360d81b60648201526084015b60405180910390fd5b005b600080fd5b3480156101ac57600080fd5b506101b56104ce565b6040516101c29190610f23565b60405180910390f35b3480156101d757600080fd5b506101eb6101e6366004610f94565b61055c565b60405190151581526020016101c2565b34801561020757600080fd5b5061021160025481565b6040519081526020016101c2565b34801561022b57600080fd5b506101eb61023a366004610fbe565b6105c8565b34801561024b57600080fd5b5061019961025a366004610ffa565b6106a8565b34801561026b57600080fd5b506102937f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016101c2565b3480156102b157600080fd5b50610211610778565b3480156102c657600080fd5b506007546102da906001600160a01b031681565b6040516001600160a01b0390911681526020016101c2565b3480156102fe57600080fd5b506101996107d3565b34801561031357600080fd5b506008546102da906001600160a01b031681565b34801561033357600080fd5b50610211610342366004611013565b60036020526000908152604090205481565b34801561036057600080fd5b50600b546102da906001600160a01b031681565b34801561038057600080fd5b5061021161038f366004611013565b60056020526000908152604090205481565b3480156103ad57600080fd5b506101b5610897565b3480156103c257600080fd5b506101eb6103d1366004610f94565b6108a4565b3480156103e257600080fd5b506101996103f1366004610ffa565b61090a565b34801561040257600080fd5b50610199610411366004611013565b610ab3565b34801561042257600080fd5b50610199610431366004611013565b610b1e565b34801561044257600080fd5b50610199610451366004611035565b610b89565b34801561046257600080fd5b50600a546102da906001600160a01b031681565b34801561048257600080fd5b506102116104913660046110a8565b600460209081526000928352604080842090915290825290205481565b3480156104ba57600080fd5b506009546102da906001600160a01b031681565b600080546104db906110db565b80601f0160208091040260200160405190810160405280929190818152602001828054610507906110db565b80156105545780601f1061052957610100808354040283529160200191610554565b820191906000526020600020905b81548152906001019060200180831161053757829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105b79086815260200190565b60405180910390a350600192915050565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610624576105ff838261112b565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b0385166000908152600360205260408120805485929061064c90849061112b565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020611268833981519152906106959087815260200190565b60405180910390a3506001949350505050565b80600660008282546106ba919061112b565b909155506106ca90503382610dcd565b600a5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561071b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073f9190611142565b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b60007f000000000000000000000000000000000000000000000000000000000000000046146107ae576107a9610e37565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b60006006546002546107e5919061112b565b600a5460085460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052929350169063a9059cbb906044016020604051808303816000875af115801561083c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108609190611142565b506040518181527f7a355715549cfe7c1cba26304350343fbddc4b4f72d3ce3e7c27117dd20b5cb89060200160405180910390a150565b600180546104db906110db565b336000908152600360205260408120805483919083906108c590849061112b565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020611268833981519152906105b79086815260200190565b600b5460095460405163c44b11f760e01b81526001600160a01b039182166004820152600092919091169063c44b11f790602401602060405180830381865afa15801561095b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097f9190611164565b8051909150670100000000000000166000036109dd5760405162461bcd60e51b815260206004820152601e60248201527f556e6465726c79696e67204173736574206973206e6f742061637469766500006044820152606401610190565b600a546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610a34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a589190611142565b50610a633383610ed1565b8160066000828254610a7591906111b4565b909155505060405182815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a25050565b6007546001600160a01b03163314610afc5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610190565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b03163314610b675760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610190565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b42841015610bd95760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606401610190565b60006001610be5610778565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610cf1573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610d275750876001600160a01b0316816001600160a01b0316145b610d645760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610190565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b6001600160a01b03821660009081526003602052604081208054839290610df590849061112b565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020611268833981519152906020015b60405180910390a35050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610e6991906111cc565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8060026000828254610ee391906111b4565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481526000805160206112688339815191529101610e2b565b600060208083528351808285015260005b81811015610f5057858101830151858201604001528201610f34565b81811115610f62576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610f8f57600080fd5b919050565b60008060408385031215610fa757600080fd5b610fb083610f78565b946020939093013593505050565b600080600060608486031215610fd357600080fd5b610fdc84610f78565b9250610fea60208501610f78565b9150604084013590509250925092565b60006020828403121561100c57600080fd5b5035919050565b60006020828403121561102557600080fd5b61102e82610f78565b9392505050565b600080600080600080600060e0888a03121561105057600080fd5b61105988610f78565b965061106760208901610f78565b95506040880135945060608801359350608088013560ff8116811461108b57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156110bb57600080fd5b6110c483610f78565b91506110d260208401610f78565b90509250929050565b600181811c908216806110ef57607f821691505b60208210810361110f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561113d5761113d611115565b500390565b60006020828403121561115457600080fd5b8151801515811461102e57600080fd5b60006020828403121561117657600080fd5b6040516020810181811067ffffffffffffffff821117156111a757634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b600082198211156111c7576111c7611115565b500190565b600080835481600182811c9150808316806111e857607f831692505b6020808410820361120757634e487b7160e01b86526022600452602486fd5b81801561121b576001811461122c57611259565b60ff19861689528489019650611259565b60008a81526020902060005b868110156112515781548b820152908501908301611238565b505084890196505b50949897505050505050505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220416eb4fc8458d97e53acc0c611c6f099e186734d0a93d6d033daf58e948f43ae64736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x139 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7535D246 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xBCAAF576 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xBCAAF576 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xD0EBDBE7 EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0xD859562C EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xF85CB5C8 EQ PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7535D246 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x6B6BD8D9 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x19B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74726163742063616E206F6E6C792068616E646C652045524332302074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6F6B656E73 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x1E6 CALLDATASIZE PUSH1 0x4 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0xFBE JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0xFFA JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x778 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x2DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x7D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x2DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x2DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH2 0x897 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x8A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x3F1 CALLDATASIZE PUSH1 0x4 PUSH2 0xFFA JUMP JUMPDEST PUSH2 0x90A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x411 CALLDATASIZE PUSH1 0x4 PUSH2 0x1013 JUMP JUMPDEST PUSH2 0xAB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0x1013 JUMP JUMPDEST PUSH2 0xB1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0xB89 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x2DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x4DB SWAP1 PUSH2 0x10DB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x507 SWAP1 PUSH2 0x10DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x554 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x529 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x554 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x537 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x5B7 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x624 JUMPI PUSH2 0x5FF DUP4 DUP3 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x64C SWAP1 DUP5 SWAP1 PUSH2 0x112B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE MLOAD SWAP1 SWAP2 DUP8 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1268 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x695 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6BA SWAP2 SWAP1 PUSH2 0x112B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x6CA SWAP1 POP CALLER DUP3 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x71B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x73F SWAP2 SWAP1 PUSH2 0x1142 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ PUSH2 0x7AE JUMPI PUSH2 0x7A9 PUSH2 0xE37 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x2 SLOAD PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0x112B JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x83C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x860 SWAP2 SWAP1 PUSH2 0x1142 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x7A355715549CFE7C1CBA26304350343FBDDC4B4F72D3CE3E7C27117DD20B5CB8 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x4DB SWAP1 PUSH2 0x10DB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 PUSH2 0x8C5 SWAP1 DUP5 SWAP1 PUSH2 0x112B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1268 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x5B7 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC44B11F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xC44B11F7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x95B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97F SWAP2 SWAP1 PUSH2 0x1164 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH8 0x100000000000000 AND PUSH1 0x0 SUB PUSH2 0x9DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6465726C79696E67204173736574206973206E6F74206163746976650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA34 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0x1142 JUMP JUMPDEST POP PUSH2 0xA63 CALLER DUP4 PUSH2 0xED1 JUMP JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA75 SWAP2 SWAP1 PUSH2 0x11B4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x15539055551213D492569151 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x15539055551213D492569151 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xBD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5045524D49545F444541444C494E455F45585049524544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0xBE5 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP5 ADD MSTORE DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 DUP14 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP1 DUP4 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x102 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x122 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x142 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP5 MSTORE SWAP1 DUP4 ADD DUP1 DUP4 MSTORE MSTORE PUSH1 0xFF DUP8 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD27 JUMPI POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xD64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x24A72B20A624A22FA9A4A3A722A9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP11 DUP6 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP10 SWAP1 SSTORE MLOAD DUP9 DUP2 MSTORE SWAP2 SWAP3 DUP11 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xDF5 SWAP1 DUP5 SWAP1 PUSH2 0x112B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1268 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xE69 SWAP2 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEE3 SWAP2 SWAP1 PUSH2 0x11B4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1268 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF50 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xF34 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xF62 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB0 DUP4 PUSH2 0xF78 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFDC DUP5 PUSH2 0xF78 JUMP JUMPDEST SWAP3 POP PUSH2 0xFEA PUSH1 0x20 DUP6 ADD PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x100C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1025 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102E DUP3 PUSH2 0xF78 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1050 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1059 DUP9 PUSH2 0xF78 JUMP JUMPDEST SWAP7 POP PUSH2 0x1067 PUSH1 0x20 DUP10 ADD PUSH2 0xF78 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x108B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C4 DUP4 PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP PUSH2 0x10D2 PUSH1 0x20 DUP5 ADD PUSH2 0xF78 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x10EF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x110F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x113D JUMPI PUSH2 0x113D PUSH2 0x1115 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x102E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x11A7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x11C7 JUMPI PUSH2 0x11C7 PUSH2 0x1115 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x11E8 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 SUB PUSH2 0x1207 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x121B JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x122C JUMPI PUSH2 0x1259 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x1259 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1251 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x1238 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE PUSH15 0xB4FC8458D97E53ACC0C611C6F099E1 DUP7 PUSH20 0x4D0A93D6D033DAF58E948F43AE64736F6C634300 ADDMOD 0xE STOP CALLER ",
							"sourceMap": "552:2854:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3334:63;;-1:-1:-1;;;3334:63:1;;216:2:8;3334:63:1;;;198:21:8;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:8;;;338:35;390:19;;3334:63:1;;;;;;;;;552:2854;;;;;1028:18:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2458:211;;;;;;;;;;-1:-1:-1;2458:211:0;;;;;:::i;:::-;;:::i;:::-;;;1624:14:8;;1617:22;1599:41;;1587:2;1572:18;2458:211:0;1459:187:8;1301:26:0;;;;;;;;;;;;;;;;;;;1797:25:8;;;1785:2;1770:18;1301:26:0;1651:177:8;3054:592:0;;;;;;;;;;-1:-1:-1;3054:592:0;;;;;:::i;:::-;;:::i;2455:228:1:-;;;;;;;;;;-1:-1:-1;2455:228:1;;;;;:::i;:::-;;:::i;1080:31:0:-;;;;;;;;;;;;;;;;;;2523:4:8;2511:17;;;2493:36;;2481:2;2466:18;1080:31:0;2351:184:8;5324:177:0;;;;;;;;;;;;;:::i;879:22:1:-;;;;;;;;;;-1:-1:-1;879:22:1;;;;-1:-1:-1;;;;;879:22:1;;;;;;-1:-1:-1;;;;;2886:32:8;;;2868:51;;2856:2;2841:18;879:22:1;2722:203:8;2870:188:1;;;;;;;;;;;;;:::i;907:32::-;;;;;;;;;;-1:-1:-1;907:32:1;;;;-1:-1:-1;;;;;907:32:1;;;1334:44:0;;;;;;;;;;-1:-1:-1;1334:44:0;;;;;:::i;:::-;;;;;;;;;;;;;;1017:24:1;;;;;;;;;;-1:-1:-1;1017:24:1;;;;-1:-1:-1;;;;;1017:24:1;;;1748:41:0;;;;;;;;;;-1:-1:-1;1748:41:0;;;;;:::i;:::-;;;;;;;;;;;;;;1053:20;;;;;;;;;;;;;:::i;2675:373::-;;;;;;;;;;-1:-1:-1;2675:373:0;;;;;:::i;:::-;;:::i;2203:246:1:-;;;;;;;;;;-1:-1:-1;2203:246:1;;;;;:::i;:::-;;:::i;3065:122::-;;;;;;;;;;-1:-1:-1;3065:122:1;;;;;:::i;:::-;;:::i;3193:98::-;;;;;;;;;;-1:-1:-1;3193:98:1;;;;;:::i;:::-;;:::i;3835:1483:0:-;;;;;;;;;;-1:-1:-1;3835:1483:0;;;;;:::i;:::-;;:::i;978:33:1:-;;;;;;;;;;-1:-1:-1;978:33:1;;;;-1:-1:-1;;;;;978:33:1;;;1385:64:0;;;;;;;;;;-1:-1:-1;1385:64:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;945:27:1;;;;;;;;;;-1:-1:-1;945:27:1;;;;-1:-1:-1;;;;;945:27:1;;;1028:18:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2458:211::-;2558:10;2532:4;2548:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;2548:30:0;;;;;;;;;;:39;;;2603:37;2532:4;;2548:30;;2603:37;;;;2581:6;1797:25:8;;1785:2;1770:18;;1651:177;2603:37:0;;;;;;;;-1:-1:-1;2658:4:0;2458:211;;;;:::o;3054:592::-;-1:-1:-1;;;;;3206:15:0;;3172:4;3206:15;;;:9;:15;;;;;;;;3222:10;3206:27;;;;;;;;-1:-1:-1;;3284:28:0;;3280:80;;3344:16;3354:6;3344:7;:16;:::i;:::-;-1:-1:-1;;;;;3314:15:0;;;;;;:9;:15;;;;;;;;3330:10;3314:27;;;;;;;:46;3280:80;-1:-1:-1;;;;;3371:15:0;;;;;;:9;:15;;;;;:25;;3390:6;;3371:15;:25;;3390:6;;3371:25;:::i;:::-;;;;-1:-1:-1;;;;;;;3542:13:0;;;;;;;:9;:13;;;;;;;:23;;;;;;3591:26;3542:13;;3591:26;;;-1:-1:-1;;;;;;;;;;;3591:26:0;;;3559:6;1797:25:8;;1785:2;1770:18;;1651:177;3591:26:0;;;;;;;;-1:-1:-1;3635:4:0;;3054:592;-1:-1:-1;;;;3054:592:0:o;2455:228:1:-;2522:6;2506:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;2547:25:1;;-1:-1:-1;2553:10:1;2565:6;2547:5;:25::i;:::-;2584:17;;:46;;-1:-1:-1;;;2584:46:1;;2611:10;2584:46;;;5358:51:8;5425:18;;;5418:34;;;-1:-1:-1;;;;;2584:17:1;;;;:26;;5331:18:8;;2584:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2646:30:1;;1797:25:8;;;2657:10:1;;2646:30;;1785:2:8;1770:18;2646:30:1;;;;;;;2455:228;:::o;5324:177:0:-;5381:7;5424:16;5407:13;:33;:87;;5470:24;:22;:24::i;:::-;5400:94;;5324:177;:::o;5407:87::-;-1:-1:-1;5443:24:0;;5324:177::o;2870:188:1:-;2904:17;2938:12;;2924:11;;:26;;;;:::i;:::-;2961:17;;2988;;2961:56;;-1:-1:-1;;;2961:56:1;;-1:-1:-1;;;;;2988:17:1;;;2961:56;;;5358:51:8;5425:18;;;5418:34;;;2904:46:1;;-1:-1:-1;2961:17:1;;:26;;5331:18:8;;2961:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3033:18:1;;1797:25:8;;;3033:18:1;;1785:2:8;1770:18;3033::1;;;;;;;2894:164;2870:188::o;1053:20:0:-;;;;;;;:::i;2675:373::-;2771:10;2745:4;2761:21;;;:9;:21;;;;;:31;;2786:6;;2761:21;2745:4;;2761:31;;2786:6;;2761:31;:::i;:::-;;;;-1:-1:-1;;;;;;;2938:13:0;;;;;;:9;:13;;;;;;;:23;;;;;;2987:32;2996:10;;-1:-1:-1;;;;;;;;;;;2987:32:0;;;2955:6;1797:25:8;;1785:2;1770:18;;1651:177;2203:246:1;1867:4;;1889:12;;1867:35;;-1:-1:-1;;;1867:35:1;;-1:-1:-1;;;;;1889:12:1;;;1867:35;;;2868:51:8;1817:47:1;;1867:4;;;;;:21;;2841:18:8;;1867:35:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1930:11;;1817:85;;-1:-1:-1;1944:12:1;1930:26;:11;1929:33;1921:76;;;;-1:-1:-1;;;1921:76:1;;6507:2:8;1921:76:1;;;6489:21:8;6546:2;6526:18;;;6519:30;6585:32;6565:18;;;6558:60;6635:18;;1921:76:1;6305:354:8;1921:76:1;2265:17:::1;::::0;:65:::1;::::0;-1:-1:-1;;;2265:65:1;;2296:10:::1;2265:65;::::0;::::1;6904:34:8::0;2316:4:1::1;6954:18:8::0;;;6947:43;7006:18;;;6999:34;;;-1:-1:-1;;;;;2265:17:1;;::::1;::::0;:30:::1;::::0;6839:18:8;;2265:65:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2341:25;2347:10;2359:6;2341:5;:25::i;:::-;2393:6;2377:12;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2415:27:1::1;::::0;1797:25:8;;;2423:10:1::1;::::0;2415:27:::1;::::0;1785:2:8;1770:18;2415:27:1::1;;;;;;;1807:208:::0;2203:246;:::o;3065:122::-;1740:7;;-1:-1:-1;;;;;1740:7:1;1726:10;:21;1718:46;;;;-1:-1:-1;;;1718:46:1;;7379:2:8;1718:46:1;;;7361:21:8;7418:2;7398:18;;;7391:30;-1:-1:-1;;;7437:18:8;;;7430:42;7489:18;;1718:46:1;7177:336:8;1718:46:1;3148:17:::1;:32:::0;;-1:-1:-1;;;;;;3148:32:1::1;-1:-1:-1::0;;;;;3148:32:1;;;::::1;::::0;;;::::1;::::0;;3065:122::o;3193:98::-;1740:7;;-1:-1:-1;;;;;1740:7:1;1726:10;:21;1718:46;;;;-1:-1:-1;;;1718:46:1;;7379:2:8;1718:46:1;;;7361:21:8;7418:2;7398:18;;;7391:30;-1:-1:-1;;;7437:18:8;;;7430:42;7489:18;;1718:46:1;7177:336:8;1718:46:1;3264:7:::1;:20:::0;;-1:-1:-1;;;;;;3264:20:1::1;-1:-1:-1::0;;;;;3264:20:1;;;::::1;::::0;;;::::1;::::0;;3193:98::o;3835:1483:0:-;4054:15;4042:8;:27;;4034:63;;;;-1:-1:-1;;;4034:63:0;;7720:2:8;4034:63:0;;;7702:21:8;7759:2;7739:18;;;7732:30;7798:25;7778:18;;;7771:53;7841:18;;4034:63:0;7518:347:8;4034:63:0;4262:24;4289:805;4425:18;:16;:18::i;:::-;-1:-1:-1;;;;;4870:13:0;;;;;;;:6;:13;;;;;;;;;:15;;;;;;;;4508:449;;4552:165;4508:449;;;8157:25:8;8236:18;;;8229:43;;;;8308:15;;;8288:18;;;8281:43;8340:18;;;8333:34;;;8383:19;;;8376:35;;;;8427:19;;;;8420:35;;;4508:449:0;;;;;;;;;;8129:19:8;;;4508:449:0;;;4469:514;;;;;;;;-1:-1:-1;;;4347:658:0;;;8724:27:8;8767:11;;;8760:27;;;;8803:12;;;8796:28;;;;8840:12;;4347:658:0;;;-1:-1:-1;;4347:658:0;;;;;;;;;4316:707;;4347:658;4316:707;;;;4289:805;;;;;;;;;9090:25:8;9163:4;9151:17;;9131:18;;;9124:45;9185:18;;;9178:34;;;9228:18;;;9221:34;;;9062:19;;4289:805:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4289:805:0;;-1:-1:-1;;4289:805:0;;;-1:-1:-1;;;;;;;5117:30:0;;;;;;:59;;;5171:5;-1:-1:-1;;;;;5151:25:0;:16;-1:-1:-1;;;;;5151:25:0;;5117:59;5109:86;;;;-1:-1:-1;;;5109:86:0;;9468:2:8;5109:86:0;;;9450:21:8;9507:2;9487:18;;;9480:30;-1:-1:-1;;;9526:18:8;;;9519:44;9580:18;;5109:86:0;9266:338:8;5109:86:0;-1:-1:-1;;;;;5210:27:0;;;;;;;:9;:27;;;;;;;;:36;;;;;;;;;;;;;:44;;;5280:31;1797:25:8;;;5210:36:0;;5280:31;;;;;1770:18:8;5280:31:0;;;;;;;3835:1483;;;;;;;:::o;6478:328::-;-1:-1:-1;;;;;6550:15:0;;;;;;:9;:15;;;;;:25;;6569:6;;6550:15;:25;;6569:6;;6550:25;:::i;:::-;;;;-1:-1:-1;;6718:11:0;:21;;;;;;;6765:34;;1797:25:8;;;-1:-1:-1;;;;;;;6765:34:0;;;-1:-1:-1;;;;;;;;;;;6765:34:0;1785:2:8;1770:18;6765:34:0;;;;;;;;6478:328;;:::o;5507:446::-;5572:7;5669:95;5802:4;5786:22;;;;;;:::i;:::-;;;;;;;;;;5637:295;;;11106:25:8;;;;11147:18;;11140:34;;;;5830:14:0;11190:18:8;;;11183:34;5866:13:0;11233:18:8;;;11226:34;5909:4:0;11276:19:8;;;11269:61;11078:19;;5637:295:0;;;;;;;;;;;;5610:336;;;;;;5591:355;;5507:446;:::o;6147:325::-;6232:6;6217:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6384:13:0;;;;;;:9;:13;;;;;;;;:23;;;;;;6433:32;1797:25:8;;;-1:-1:-1;;;;;;;;;;;6433:32:0;1770:18:8;6433:32:0;1651:177:8;420:597;532:4;561:2;590;579:9;572:21;622:6;616:13;665:6;660:2;649:9;645:18;638:34;690:1;700:140;714:6;711:1;708:13;700:140;;;809:14;;;805:23;;799:30;775:17;;;794:2;771:26;764:66;729:10;;700:140;;;858:6;855:1;852:13;849:91;;;928:1;923:2;914:6;903:9;899:22;895:31;888:42;849:91;-1:-1:-1;1001:2:8;980:15;-1:-1:-1;;976:29:8;961:45;;;;1008:2;957:54;;420:597;-1:-1:-1;;;420:597:8:o;1022:173::-;1090:20;;-1:-1:-1;;;;;1139:31:8;;1129:42;;1119:70;;1185:1;1182;1175:12;1119:70;1022:173;;;:::o;1200:254::-;1268:6;1276;1329:2;1317:9;1308:7;1304:23;1300:32;1297:52;;;1345:1;1342;1335:12;1297:52;1368:29;1387:9;1368:29;:::i;:::-;1358:39;1444:2;1429:18;;;;1416:32;;-1:-1:-1;;;1200:254:8:o;1833:328::-;1910:6;1918;1926;1979:2;1967:9;1958:7;1954:23;1950:32;1947:52;;;1995:1;1992;1985:12;1947:52;2018:29;2037:9;2018:29;:::i;:::-;2008:39;;2066:38;2100:2;2089:9;2085:18;2066:38;:::i;:::-;2056:48;;2151:2;2140:9;2136:18;2123:32;2113:42;;1833:328;;;;;:::o;2166:180::-;2225:6;2278:2;2266:9;2257:7;2253:23;2249:32;2246:52;;;2294:1;2291;2284:12;2246:52;-1:-1:-1;2317:23:8;;2166:180;-1:-1:-1;2166:180:8:o;2930:186::-;2989:6;3042:2;3030:9;3021:7;3017:23;3013:32;3010:52;;;3058:1;3055;3048:12;3010:52;3081:29;3100:9;3081:29;:::i;:::-;3071:39;2930:186;-1:-1:-1;;;2930:186:8:o;3350:693::-;3461:6;3469;3477;3485;3493;3501;3509;3562:3;3550:9;3541:7;3537:23;3533:33;3530:53;;;3579:1;3576;3569:12;3530:53;3602:29;3621:9;3602:29;:::i;:::-;3592:39;;3650:38;3684:2;3673:9;3669:18;3650:38;:::i;:::-;3640:48;;3735:2;3724:9;3720:18;3707:32;3697:42;;3786:2;3775:9;3771:18;3758:32;3748:42;;3840:3;3829:9;3825:19;3812:33;3885:4;3878:5;3874:16;3867:5;3864:27;3854:55;;3905:1;3902;3895:12;3854:55;3350:693;;;;-1:-1:-1;3350:693:8;;;;3928:5;3980:3;3965:19;;3952:33;;-1:-1:-1;4032:3:8;4017:19;;;4004:33;;3350:693;-1:-1:-1;;3350:693:8:o;4272:260::-;4340:6;4348;4401:2;4389:9;4380:7;4376:23;4372:32;4369:52;;;4417:1;4414;4407:12;4369:52;4440:29;4459:9;4440:29;:::i;:::-;4430:39;;4488:38;4522:2;4511:9;4507:18;4488:38;:::i;:::-;4478:48;;4272:260;;;;;:::o;4537:380::-;4616:1;4612:12;;;;4659;;;4680:61;;4734:4;4726:6;4722:17;4712:27;;4680:61;4787:2;4779:6;4776:14;4756:18;4753:38;4750:161;;4833:10;4828:3;4824:20;4821:1;4814:31;4868:4;4865:1;4858:15;4896:4;4893:1;4886:15;4750:161;;4537:380;;;:::o;4922:127::-;4983:10;4978:3;4974:20;4971:1;4964:31;5014:4;5011:1;5004:15;5038:4;5035:1;5028:15;5054:125;5094:4;5122:1;5119;5116:8;5113:34;;;5127:18;;:::i;:::-;-1:-1:-1;5164:9:8;;5054:125::o;5463:277::-;5530:6;5583:2;5571:9;5562:7;5558:23;5554:32;5551:52;;;5599:1;5596;5589:12;5551:52;5631:9;5625:16;5684:5;5677:13;5670:21;5663:5;5660:32;5650:60;;5706:1;5703;5696:12;5745:555;5856:6;5909:2;5897:9;5888:7;5884:23;5880:32;5877:52;;;5925:1;5922;5915:12;5877:52;5958:2;5952:9;6000:2;5992:6;5988:15;6069:6;6057:10;6054:22;6033:18;6021:10;6018:34;6015:62;6012:185;;;6119:10;6114:3;6110:20;6107:1;6100:31;6154:4;6151:1;6144:15;6182:4;6179:1;6172:15;6012:185;6213:2;6206:22;6252:16;;6237:32;;-1:-1:-1;6244:6:8;5745:555;-1:-1:-1;5745:555:8:o;7044:128::-;7084:3;7115:1;7111:6;7108:1;7105:13;7102:39;;;7121:18;;:::i;:::-;-1:-1:-1;7157:9:8;;7044:128::o;9738:1104::-;9868:3;9897:1;9930:6;9924:13;9960:3;9982:1;10010:9;10006:2;10002:18;9992:28;;10070:2;10059:9;10055:18;10092;10082:61;;10136:4;10128:6;10124:17;10114:27;;10082:61;10162:2;10210;10202:6;10199:14;10179:18;10176:38;10173:165;;-1:-1:-1;;;10237:33:8;;10293:4;10290:1;10283:15;10323:4;10244:3;10311:17;10173:165;10354:18;10381:104;;;;10499:1;10494:323;;;;10347:470;;10381:104;-1:-1:-1;;10414:24:8;;10402:37;;10459:16;;;;-1:-1:-1;10381:104:8;;10494:323;9685:1;9678:14;;;9722:4;9709:18;;10592:1;10606:165;10620:6;10617:1;10614:13;10606:165;;;10698:14;;10685:11;;;10678:35;10741:16;;;;10635:10;;10606:165;;;10610:3;;10800:6;10795:3;10791:16;10784:23;;10347:470;-1:-1:-1;10833:3:8;;9738:1104;-1:-1:-1;;;;;;;;9738:1104:8:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "959400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"POOL()": "2360",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24545",
								"balanceOf(address)": "2652",
								"claim()": "infinite",
								"decimals()": "infinite",
								"deposit(uint256)": "infinite",
								"interestCollector()": "2448",
								"manager()": "2404",
								"name()": "infinite",
								"nonces(address)": "2564",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"reserveAsset()": "2469",
								"setInterestCollector(address)": "26733",
								"setManager(address)": "26755",
								"symbol()": "infinite",
								"totalSupply()": "2363",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"underlyingAgToken()": "2425",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 872,
									"end": 873,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 849,
									"end": 873,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 849,
									"end": 873,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1049,
									"end": 1509,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1049,
									"end": 1509,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1260,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1273,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1275,
									"end": 1288,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2098,
									"end": 2103,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2091,
									"end": 2095,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2091,
									"end": 2103,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2091,
									"end": 2103,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2091,
									"end": 2103,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2091,
									"end": 2103,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2091,
									"end": 2103,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2091,
									"end": 2103,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2091,
									"end": 2103,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2091,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2091,
									"end": 2103,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2091,
									"end": 2103,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2091,
									"end": 2103,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2091,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2091,
									"end": 2103,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2091,
									"end": 2103,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2091,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2113,
									"end": 2129,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2113,
									"end": 2129,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2113,
									"end": 2129,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2113,
									"end": 2129,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2113,
									"end": 2119,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2113,
									"end": 2119,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2113,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2113,
									"end": 2129,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2113,
									"end": 2129,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2113,
									"end": 2129,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2113,
									"end": 2129,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2113,
									"end": 2129,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2113,
									"end": 2129,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2113,
									"end": 2129,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2139,
									"end": 2159,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2139,
									"end": 2159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2139,
									"end": 2159,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2139,
									"end": 2159,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2139,
									"end": 2159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2189,
									"end": 2202,
									"name": "CHAINID",
									"source": 0
								},
								{
									"begin": 2170,
									"end": 2202,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 2170,
									"end": 2202,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2239,
									"end": 2263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2239,
									"end": 2261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2239,
									"end": 2263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2239,
									"end": 2263,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2239,
									"end": 2263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2212,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 2212,
									"end": 2263,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1296,
									"end": 1313,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1296,
									"end": 1334,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1334,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1296,
									"end": 1334,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1334,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1334,
									"modifierDepth": 1,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1296,
									"end": 1334,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1334,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1334,
									"modifierDepth": 1,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1334,
									"modifierDepth": 1,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1334,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1334,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1334,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1340,
									"end": 1357,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 1340,
									"end": 1388,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1340,
									"end": 1388,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1340,
									"end": 1388,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1340,
									"end": 1388,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1340,
									"end": 1388,
									"modifierDepth": 1,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1340,
									"end": 1388,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1340,
									"end": 1388,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1340,
									"end": 1388,
									"modifierDepth": 1,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1340,
									"end": 1388,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1340,
									"end": 1388,
									"modifierDepth": 1,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1340,
									"end": 1388,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1340,
									"end": 1388,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1398,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 1394,
									"end": 1432,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1432,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1432,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1432,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1432,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1432,
									"modifierDepth": 1,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1432,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1432,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1432,
									"modifierDepth": 1,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1432,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1432,
									"modifierDepth": 1,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1432,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1432,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1394,
									"end": 1432,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1438,
									"end": 1450,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1438,
									"end": 1471,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1438,
									"end": 1471,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1438,
									"end": 1471,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1438,
									"end": 1471,
									"modifierDepth": 1,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1438,
									"end": 1471,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1438,
									"end": 1471,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1438,
									"end": 1471,
									"modifierDepth": 1,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1438,
									"end": 1471,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1438,
									"end": 1471,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1438,
									"end": 1471,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1484,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1477,
									"end": 1504,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1504,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1504,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1504,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1504,
									"modifierDepth": 1,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1504,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1504,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1504,
									"modifierDepth": 1,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1504,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1504,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5507,
									"end": 5953,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 5507,
									"end": 5953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5572,
									"end": 5579,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5669,
									"end": 5764,
									"name": "PUSH",
									"source": 0,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 5802,
									"end": 5806,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5786,
									"end": 5808,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5786,
									"end": 5808,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5786,
									"end": 5808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 5786,
									"end": 5808,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5786,
									"end": 5808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5786,
									"end": 5808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5786,
									"end": 5808,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5786,
									"end": 5808,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 5786,
									"end": 5808,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5786,
									"end": 5808,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5786,
									"end": 5808,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5786,
									"end": 5808,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5786,
									"end": 5808,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5786,
									"end": 5808,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5786,
									"end": 5808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5786,
									"end": 5808,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5786,
									"end": 5808,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5786,
									"end": 5808,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 5637,
									"end": 5932,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5637,
									"end": 5932,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5637,
									"end": 5932,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4075,
									"end": 4100,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4075,
									"end": 4100,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4075,
									"end": 4100,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4075,
									"end": 4100,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4116,
									"end": 4134,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4116,
									"end": 4134,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4109,
									"end": 4143,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4109,
									"end": 4143,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4109,
									"end": 4143,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4109,
									"end": 4143,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5830,
									"end": 5844,
									"name": "PUSH",
									"source": 0,
									"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
								},
								{
									"begin": 4159,
									"end": 4177,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4159,
									"end": 4177,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4159,
									"end": 4177,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4152,
									"end": 4186,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5866,
									"end": 5879,
									"name": "CHAINID",
									"source": 0
								},
								{
									"begin": 4202,
									"end": 4220,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 4202,
									"end": 4220,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4202,
									"end": 4220,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4195,
									"end": 4229,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5909,
									"end": 5913,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 4245,
									"end": 4264,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 4245,
									"end": 4264,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4245,
									"end": 4264,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4238,
									"end": 4299,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4047,
									"end": 4066,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 4047,
									"end": 4066,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5637,
									"end": 5932,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5637,
									"end": 5932,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5637,
									"end": 5932,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5637,
									"end": 5932,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5637,
									"end": 5932,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5637,
									"end": 5932,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5637,
									"end": 5932,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5637,
									"end": 5932,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5637,
									"end": 5932,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5637,
									"end": 5932,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5637,
									"end": 5932,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5637,
									"end": 5932,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5610,
									"end": 5946,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5610,
									"end": 5946,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5610,
									"end": 5946,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5610,
									"end": 5946,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5610,
									"end": 5946,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5610,
									"end": 5946,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 5591,
									"end": 5946,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5591,
									"end": 5946,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5507,
									"end": 5953,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5507,
									"end": 5953,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 552,
									"end": 3406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 552,
									"end": 3406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1213,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 1036,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1128,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1128,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1157,
									"end": 1188,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1157,
									"end": 1188,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1189,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1189,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1137,
									"end": 1207,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1137,
									"end": 1207,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 1204,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1200,
									"end": 1201,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1193,
									"end": 1205,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1137,
									"end": 1207,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1137,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1213,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1213,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1213,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1213,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1218,
									"end": 2188,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1218,
									"end": 2188,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1351,
									"end": 1357,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1359,
									"end": 1365,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1367,
									"end": 1373,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1375,
									"end": 1381,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1383,
									"end": 1389,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1391,
									"end": 1397,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1444,
									"end": 1447,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 1432,
									"end": 1441,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1423,
									"end": 1430,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 1419,
									"end": 1442,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1415,
									"end": 1448,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1412,
									"end": 1465,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1412,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1412,
									"end": 1465,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1412,
									"end": 1465,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1412,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1488,
									"end": 1504,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1488,
									"end": 1504,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1553,
									"end": 1567,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1553,
									"end": 1567,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1553,
									"end": 1567,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1584,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1584,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1550,
									"end": 1584,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1580,
									"end": 1581,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1577,
									"end": 1578,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1570,
									"end": 1582,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1584,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1550,
									"end": 1584,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1664,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1656,
									"end": 1663,
									"name": "DUP11",
									"source": 8
								},
								{
									"begin": 1647,
									"end": 1653,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1636,
									"end": 1645,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 1632,
									"end": 1654,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1664,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1603,
									"end": 1664,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1664,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1603,
									"end": 1664,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1593,
									"end": 1664,
									"name": "SWAP8",
									"source": 8
								},
								{
									"begin": 1593,
									"end": 1664,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1710,
									"end": 1712,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1699,
									"end": 1708,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 1695,
									"end": 1713,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1689,
									"end": 1714,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1673,
									"end": 1714,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1673,
									"end": 1714,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1739,
									"end": 1741,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1729,
									"end": 1737,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1723,
									"end": 1759,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1723,
									"end": 1759,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1723,
									"end": 1759,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1752,
									"end": 1753,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1745,
									"end": 1757,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1723,
									"end": 1759,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1723,
									"end": 1759,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1723,
									"end": 1759,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1778,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1833,
									"end": 1840,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 1822,
									"end": 1830,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1811,
									"end": 1820,
									"name": "DUP11",
									"source": 8
								},
								{
									"begin": 1807,
									"end": 1831,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1778,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1778,
									"end": 1841,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1778,
									"end": 1841,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1778,
									"end": 1841,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1768,
									"end": 1841,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 1768,
									"end": 1841,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1768,
									"end": 1841,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1884,
									"end": 1886,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1873,
									"end": 1882,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1869,
									"end": 1887,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1863,
									"end": 1888,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1928,
									"end": 1932,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1921,
									"end": 1926,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1917,
									"end": 1933,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1910,
									"end": 1915,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1907,
									"end": 1934,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1897,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1897,
									"end": 1952,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1948,
									"end": 1949,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1938,
									"end": 1950,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1897,
									"end": 1952,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1897,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1971,
									"end": 1976,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1995,
									"end": 2044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 2040,
									"end": 2042,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2025,
									"end": 2043,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 2025,
									"end": 2043,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1995,
									"end": 2044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 1995,
									"end": 2044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1995,
									"end": 2044,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1995,
									"end": 2044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1985,
									"end": 2044,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1985,
									"end": 2044,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2063,
									"end": 2113,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 2108,
									"end": 2111,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2097,
									"end": 2106,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 2093,
									"end": 2112,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2063,
									"end": 2113,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 2063,
									"end": 2113,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2063,
									"end": 2113,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 2063,
									"end": 2113,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2053,
									"end": 2113,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2053,
									"end": 2113,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2132,
									"end": 2182,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 2177,
									"end": 2180,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 2166,
									"end": 2175,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 2162,
									"end": 2181,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2132,
									"end": 2182,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 2132,
									"end": 2182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2132,
									"end": 2182,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 2132,
									"end": 2182,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2122,
									"end": 2182,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2122,
									"end": 2182,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1218,
									"end": 2188,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1218,
									"end": 2188,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 1218,
									"end": 2188,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1218,
									"end": 2188,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1218,
									"end": 2188,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 1218,
									"end": 2188,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1218,
									"end": 2188,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1218,
									"end": 2188,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 1218,
									"end": 2188,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2193,
									"end": 2573,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2193,
									"end": 2573,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2272,
									"end": 2273,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2268,
									"end": 2280,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2280,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2280,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2280,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2315,
									"end": 2327,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2315,
									"end": 2327,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2315,
									"end": 2327,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2336,
									"end": 2397,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2336,
									"end": 2397,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2390,
									"end": 2394,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2382,
									"end": 2388,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2368,
									"end": 2395,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2368,
									"end": 2395,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2336,
									"end": 2397,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2336,
									"end": 2397,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2445,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2435,
									"end": 2441,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2432,
									"end": 2446,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2412,
									"end": 2430,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2409,
									"end": 2447,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2406,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2406,
									"end": 2567,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2489,
									"end": 2499,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 2484,
									"end": 2487,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 2480,
									"end": 2500,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2477,
									"end": 2478,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2470,
									"end": 2501,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2524,
									"end": 2528,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2521,
									"end": 2522,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2514,
									"end": 2529,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2552,
									"end": 2556,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2549,
									"end": 2550,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2542,
									"end": 2557,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2406,
									"end": 2567,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2406,
									"end": 2567,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2406,
									"end": 2567,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2193,
									"end": 2573,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2193,
									"end": 2573,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2193,
									"end": 2573,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2193,
									"end": 2573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2707,
									"end": 3811,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 2707,
									"end": 3811,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2837,
									"end": 2840,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2866,
									"end": 2867,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2899,
									"end": 2905,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2893,
									"end": 2906,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2929,
									"end": 2932,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2951,
									"end": 2952,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2979,
									"end": 2988,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2975,
									"end": 2977,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2971,
									"end": 2989,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2961,
									"end": 2989,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2961,
									"end": 2989,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3039,
									"end": 3041,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3028,
									"end": 3037,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3042,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3051,
									"end": 3112,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3051,
									"end": 3112,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3105,
									"end": 3109,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 3097,
									"end": 3103,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3093,
									"end": 3110,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3083,
									"end": 3110,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3083,
									"end": 3110,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3051,
									"end": 3112,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3051,
									"end": 3112,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3131,
									"end": 3133,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3179,
									"end": 3181,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3171,
									"end": 3177,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3168,
									"end": 3182,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3148,
									"end": 3166,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3145,
									"end": 3183,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3142,
									"end": 3307,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 3142,
									"end": 3307,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3206,
									"end": 3239,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3206,
									"end": 3239,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3262,
									"end": 3266,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 3259,
									"end": 3260,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3252,
									"end": 3267,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3292,
									"end": 3296,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3213,
									"end": 3216,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3280,
									"end": 3297,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3142,
									"end": 3307,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 3142,
									"end": 3307,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3323,
									"end": 3341,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3350,
									"end": 3454,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3350,
									"end": 3454,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3350,
									"end": 3454,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3350,
									"end": 3454,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3468,
									"end": 3469,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3463,
									"end": 3786,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3463,
									"end": 3786,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 3463,
									"end": 3786,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 3463,
									"end": 3786,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3316,
									"end": 3786,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 3316,
									"end": 3786,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3350,
									"end": 3454,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3350,
									"end": 3454,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3383,
									"end": 3407,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3383,
									"end": 3407,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3371,
									"end": 3408,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 3371,
									"end": 3408,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3428,
									"end": 3444,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3428,
									"end": 3444,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 3428,
									"end": 3444,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3428,
									"end": 3444,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3350,
									"end": 3454,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 3350,
									"end": 3454,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3463,
									"end": 3786,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 3463,
									"end": 3786,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2654,
									"end": 2655,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2647,
									"end": 2661,
									"name": "DUP11",
									"source": 8
								},
								{
									"begin": 2647,
									"end": 2661,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2647,
									"end": 2661,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2691,
									"end": 2695,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2678,
									"end": 2696,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2678,
									"end": 2696,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 3561,
									"end": 3562,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3575,
									"end": 3740,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 3575,
									"end": 3740,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3589,
									"end": 3595,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3586,
									"end": 3587,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3583,
									"end": 3596,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3575,
									"end": 3740,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3575,
									"end": 3740,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 3575,
									"end": 3740,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3667,
									"end": 3681,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3667,
									"end": 3681,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3665,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3665,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3654,
									"end": 3665,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3647,
									"end": 3682,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3710,
									"end": 3726,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3710,
									"end": 3726,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3710,
									"end": 3726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3710,
									"end": 3726,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3604,
									"end": 3614,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3604,
									"end": 3614,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3575,
									"end": 3740,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 3575,
									"end": 3740,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3575,
									"end": 3740,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 3575,
									"end": 3740,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3579,
									"end": 3582,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3579,
									"end": 3582,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3769,
									"end": 3775,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3764,
									"end": 3767,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 3760,
									"end": 3776,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3753,
									"end": 3776,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 3753,
									"end": 3776,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3316,
									"end": 3786,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 3316,
									"end": 3786,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3802,
									"end": 3805,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3802,
									"end": 3805,
									"name": "SWAP9",
									"source": 8
								},
								{
									"begin": 2707,
									"end": 3811,
									"name": "SWAP8",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2707,
									"end": 3811,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3816,
									"end": 4305,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 3816,
									"end": 4305,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 552,
									"end": 3406,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220416eb4fc8458d97e53acc0c611c6f099e186734d0a93d6d033daf58e948f43ae64736f6c634300080e0033",
									".code": [
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "7535D246"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "BCAAF576"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "BCAAF576"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "D0EBDBE7"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "D505ACCF"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "D859562C"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "F85CB5C8"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "7535D246"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "7ECEBE00"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "B6B55F25"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "3644E515"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "481C6A75"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "4E71D92D"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "6B6BD8D9"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "2E1A7D4D"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 218,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 198,
											"end": 219,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 255,
											"end": 257,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 235,
											"end": 253,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 228,
											"end": 258,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 294,
											"end": 328,
											"name": "PUSH",
											"source": 8,
											"value": "436F6E74726163742063616E206F6E6C792068616E646C652045524332302074"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 274,
											"end": 292,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 267,
											"end": 329,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 345,
											"end": 363,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 345,
											"end": 363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 345,
											"end": 363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 338,
											"end": 373,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 390,
											"end": 409,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 390,
											"end": 409,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 3406,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1028,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1028,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2458,
											"end": 2669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2458,
											"end": 2669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1638,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1617,
											"end": 1639,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1640,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1640,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1587,
											"end": 1589,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1572,
											"end": 1590,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1459,
											"end": 1646,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1651,
											"end": 1828,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3054,
											"end": 3646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3054,
											"end": 3646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2455,
											"end": 2683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2527,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2511,
											"end": 2528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2528,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2493,
											"end": 2529,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2493,
											"end": 2529,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2481,
											"end": 2483,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2466,
											"end": 2484,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1080,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2351,
											"end": 2535,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5324,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5324,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5501,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5501,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5324,
											"end": 5501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5324,
											"end": 5501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5501,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5324,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5324,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5324,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 879,
											"end": 901,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 879,
											"end": 901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 879,
											"end": 901,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 879,
											"end": 901,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 879,
											"end": 901,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 879,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 879,
											"end": 901,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 879,
											"end": 901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 901,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 879,
											"end": 901,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 879,
											"end": 901,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 879,
											"end": 901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 879,
											"end": 901,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 879,
											"end": 901,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 879,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 879,
											"end": 901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 879,
											"end": 901,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 879,
											"end": 901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 879,
											"end": 901,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 879,
											"end": 901,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 879,
											"end": 901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 879,
											"end": 901,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 879,
											"end": 901,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2886,
											"end": 2918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2886,
											"end": 2918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2886,
											"end": 2918,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2868,
											"end": 2919,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2868,
											"end": 2919,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2856,
											"end": 2858,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 879,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2722,
											"end": 2925,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 3058,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2870,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 3058,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 3058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 3058,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2870,
											"end": 3058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 3058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 3058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 3058,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 3058,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2870,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 3058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2870,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2870,
											"end": 3058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 907,
											"end": 939,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 907,
											"end": 939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 907,
											"end": 939,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 907,
											"end": 939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 907,
											"end": 939,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 907,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 907,
											"end": 939,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 907,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 907,
											"end": 939,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 907,
											"end": 939,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 907,
											"end": 939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 907,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 907,
											"end": 939,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 907,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 907,
											"end": 939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 907,
											"end": 939,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 907,
											"end": 939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 907,
											"end": 939,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1334,
											"end": 1378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1378,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1748,
											"end": 1789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1789,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1053,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2675,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2675,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2203,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2203,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3065,
											"end": 3187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3065,
											"end": 3187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3193,
											"end": 3291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3193,
											"end": 3291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3835,
											"end": 5318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3835,
											"end": 5318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1011,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 978,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1011,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 978,
											"end": 1011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1011,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1011,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 978,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 978,
											"end": 1011,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 978,
											"end": 1011,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 978,
											"end": 1011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 978,
											"end": 1011,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1011,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1385,
											"end": 1449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 945,
											"end": 972,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 945,
											"end": 972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 945,
											"end": 972,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 945,
											"end": 972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 945,
											"end": 972,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 945,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 945,
											"end": 972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 945,
											"end": 972,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 945,
											"end": 972,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 945,
											"end": 972,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 945,
											"end": 972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 945,
											"end": 972,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 945,
											"end": 972,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 945,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 945,
											"end": 972,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 945,
											"end": 972,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 945,
											"end": 972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 945,
											"end": 972,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1028,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1028,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2568,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2548,
											"end": 2569,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2548,
											"end": 2569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2569,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2569,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2548,
											"end": 2578,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2578,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2578,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2578,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2587,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2587,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2536,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2536,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2603,
											"end": 2640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2603,
											"end": 2640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2587,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 1828,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2603,
											"end": 2640,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2603,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2603,
											"end": 2640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2640,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2640,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2658,
											"end": 2662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2458,
											"end": 2669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3215,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3232,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3233,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3233,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3233,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3233,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3233,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3284,
											"end": 3312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3312,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3280,
											"end": 3360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3354,
											"end": 3360,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3344,
											"end": 3360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3344,
											"end": 3360,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3344,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3323,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3330,
											"end": 3340,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3341,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3341,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3360,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3360,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3280,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3371,
											"end": 3386,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 3386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3380,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3371,
											"end": 3386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3371,
											"end": 3386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3386,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3396,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3396,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3396,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3371,
											"end": 3396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3396,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3371,
											"end": 3396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3396,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3371,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3396,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3542,
											"end": 3555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3555,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3542,
											"end": 3555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3542,
											"end": 3555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3542,
											"end": 3555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3555,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3565,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3565,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3591,
											"end": 3617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3591,
											"end": 3617,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3591,
											"end": 3617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3591,
											"end": 3617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3591,
											"end": 3617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3591,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3591,
											"end": 3617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3565,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 1828,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3617,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3591,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3591,
											"end": 3617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3591,
											"end": 3617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3591,
											"end": 3617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3591,
											"end": 3617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3591,
											"end": 3617,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3591,
											"end": 3617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3591,
											"end": 3617,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3635,
											"end": 3639,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3635,
											"end": 3639,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3646,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3054,
											"end": 3646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2518,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2506,
											"end": 2518,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2506,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2547,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2547,
											"end": 2572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2553,
											"end": 2563,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2547,
											"end": 2572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2572,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2547,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2601,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2584,
											"end": 2601,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2621,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5409,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2584,
											"end": 2601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2601,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2610,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 2584,
											"end": 2610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2584,
											"end": 2630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2584,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2646,
											"end": 2676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2676,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2667,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2657,
											"end": 2667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2646,
											"end": 2676,
											"name": "PUSH",
											"source": 1,
											"value": "7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65"
										},
										{
											"begin": 2646,
											"end": 2676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2676,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2646,
											"end": 2676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2646,
											"end": 2676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2646,
											"end": 2676,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2646,
											"end": 2676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2646,
											"end": 2676,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5324,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5324,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5381,
											"end": 5388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5424,
											"end": 5440,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5407,
											"end": 5420,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5440,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5407,
											"end": 5494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5470,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5470,
											"end": 5494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5494,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5470,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5400,
											"end": 5494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5400,
											"end": 5494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5494,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5407,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5443,
											"end": 5467,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5443,
											"end": 5467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2870,
											"end": 3058,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2870,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2935,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2924,
											"end": 2935,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2924,
											"end": 2950,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2924,
											"end": 2950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2950,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2924,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2978,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2961,
											"end": 2978,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 3005,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2988,
											"end": 3005,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2988,
											"end": 3005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 3005,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 3005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5409,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2904,
											"end": 2950,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2950,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2961,
											"end": 2978,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2987,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 2961,
											"end": 2987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2961,
											"end": 3017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2961,
											"end": 3017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "PUSH",
											"source": 1,
											"value": "7A355715549CFE7C1CBA26304350343FBDDC4B4F72D3CE3E7C27117DD20B5CB8"
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 3058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 3058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1053,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2675,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2771,
											"end": 2781,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2770,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2761,
											"end": 2782,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2782,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2792,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2761,
											"end": 2792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2761,
											"end": 2792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2792,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2761,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2792,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2938,
											"end": 2951,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 2951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 2951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2938,
											"end": 2951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 2951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 2951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 2947,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2938,
											"end": 2951,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2938,
											"end": 2951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 2951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2938,
											"end": 2951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 2951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 2951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 2951,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 2961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 2961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 2961,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 2961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 2961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 2961,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3006,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2996,
											"end": 3006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2987,
											"end": 3019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2987,
											"end": 3019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2961,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 1828,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1867,
											"end": 1871,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 1901,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1889,
											"end": 1901,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C44B11F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1889,
											"end": 1901,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 1901,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 1901,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2868,
											"end": 2919,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1817,
											"end": 1864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1864,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1871,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "PUSH",
											"source": 1,
											"value": "C44B11F7"
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1867,
											"end": 1902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1867,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1930,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1930,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000"
										},
										{
											"begin": 1930,
											"end": 1956,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1930,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 1962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1921,
											"end": 1997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1997,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 1997,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1921,
											"end": 1997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1997,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6507,
											"end": 6509,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1997,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1921,
											"end": 1997,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6510,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6546,
											"end": 6548,
											"name": "PUSH",
											"source": 8,
											"value": "1E"
										},
										{
											"begin": 6526,
											"end": 6544,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6526,
											"end": 6544,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6526,
											"end": 6544,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6549,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6585,
											"end": 6617,
											"name": "PUSH",
											"source": 8,
											"value": "556E6465726C79696E67204173736574206973206E6F74206163746976650000"
										},
										{
											"begin": 6565,
											"end": 6583,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6565,
											"end": 6583,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6565,
											"end": 6583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6558,
											"end": 6618,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6653,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6635,
											"end": 6653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 6305,
											"end": 6659,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 1997,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1921,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2265,
											"end": 2282,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2265,
											"end": 2330,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2265,
											"end": 2330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2306,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2265,
											"end": 2330,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6904,
											"end": 6938,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2320,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 6954,
											"end": 6972,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6954,
											"end": 6972,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6954,
											"end": 6972,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 6990,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6999,
											"end": 7033,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6999,
											"end": 7033,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6999,
											"end": 7033,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2265,
											"end": 2282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2282,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2282,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 2265,
											"end": 2295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2330,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2265,
											"end": 2330,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2347,
											"end": 2357,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2365,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2341,
											"end": 2366,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2366,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2341,
											"end": 2366,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2399,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2377,
											"end": 2389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2399,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2399,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2399,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2377,
											"end": 2399,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2399,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2377,
											"end": 2399,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2399,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2377,
											"end": 2399,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2399,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2399,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2415,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2442,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2423,
											"end": 2433,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
										},
										{
											"begin": 2415,
											"end": 2442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2415,
											"end": 2442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2442,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2442,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2442,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2442,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2442,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2442,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 2015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1740,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1740,
											"end": 1747,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1740,
											"end": 1747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1736,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7381,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7382,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7418,
											"end": 7420,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 7398,
											"end": 7416,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7398,
											"end": 7416,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7398,
											"end": 7416,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7391,
											"end": 7421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15539055551213D492569151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7437,
											"end": 7455,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7437,
											"end": 7455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7437,
											"end": 7455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7430,
											"end": 7472,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7489,
											"end": 7507,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7489,
											"end": 7507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 7177,
											"end": 7513,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3148,
											"end": 3180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3148,
											"end": 3180,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3148,
											"end": 3180,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3180,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3180,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3180,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3180,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3193,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1740,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1740,
											"end": 1747,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1740,
											"end": 1747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1736,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7381,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7382,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7418,
											"end": 7420,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 7398,
											"end": 7416,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7398,
											"end": 7416,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7398,
											"end": 7416,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7391,
											"end": 7421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15539055551213D492569151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7437,
											"end": 7455,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7437,
											"end": 7455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7437,
											"end": 7455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7430,
											"end": 7472,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7489,
											"end": 7507,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7489,
											"end": 7507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 7177,
											"end": 7513,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1718,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3264,
											"end": 3284,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3284,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3264,
											"end": 3284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3264,
											"end": 3284,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3284,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3284,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3284,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3284,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3284,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4069,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4050,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4069,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4069,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4034,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 4034,
											"end": 4097,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4034,
											"end": 4097,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4034,
											"end": 4097,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4034,
											"end": 4097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4034,
											"end": 4097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7720,
											"end": 7722,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4034,
											"end": 4097,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4034,
											"end": 4097,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4034,
											"end": 4097,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7702,
											"end": 7723,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7759,
											"end": 7761,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 7739,
											"end": 7757,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7739,
											"end": 7757,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7739,
											"end": 7757,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7732,
											"end": 7762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7823,
											"name": "PUSH",
											"source": 8,
											"value": "5045524D49545F444541444C494E455F45585049524544000000000000000000"
										},
										{
											"begin": 7778,
											"end": 7796,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7778,
											"end": 7796,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7778,
											"end": 7796,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7771,
											"end": 7824,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7841,
											"end": 7859,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7841,
											"end": 7859,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7518,
											"end": 7865,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4097,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 4034,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4425,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4425,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4425,
											"end": 4443,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 4425,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4876,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4885,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4885,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4870,
											"end": 4885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4885,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4885,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4552,
											"end": 4717,
											"name": "PUSH",
											"source": 0,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 4508,
											"end": 4957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4957,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8157,
											"end": 8182,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8236,
											"end": 8254,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8236,
											"end": 8254,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8236,
											"end": 8254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8229,
											"end": 8272,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8229,
											"end": 8272,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8229,
											"end": 8272,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8229,
											"end": 8272,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8308,
											"end": 8323,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8308,
											"end": 8323,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 8308,
											"end": 8323,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8306,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8288,
											"end": 8306,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8288,
											"end": 8306,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8281,
											"end": 8324,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8340,
											"end": 8358,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 8340,
											"end": 8358,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8340,
											"end": 8358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8333,
											"end": 8367,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 8333,
											"end": 8367,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8333,
											"end": 8367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8376,
											"end": 8411,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8376,
											"end": 8411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8376,
											"end": 8411,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8376,
											"end": 8411,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8427,
											"end": 8446,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 8427,
											"end": 8446,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8427,
											"end": 8446,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8427,
											"end": 8446,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8420,
											"end": 8455,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 8420,
											"end": 8455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8420,
											"end": 8455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4957,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4957,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8129,
											"end": 8148,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 8129,
											"end": 8148,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8129,
											"end": 8148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4983,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4347,
											"end": 5005,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4347,
											"end": 5005,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 5005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8724,
											"end": 8751,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8767,
											"end": 8778,
											"name": "PUSH",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 8767,
											"end": 8778,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8767,
											"end": 8778,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8760,
											"end": 8787,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8760,
											"end": 8787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8760,
											"end": 8787,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8760,
											"end": 8787,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8803,
											"end": 8815,
											"name": "PUSH",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 8803,
											"end": 8815,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8803,
											"end": 8815,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8796,
											"end": 8824,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8796,
											"end": 8824,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8796,
											"end": 8824,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8796,
											"end": 8824,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8840,
											"end": 8852,
											"name": "PUSH",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 8840,
											"end": 8852,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 5005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 5005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 5005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4347,
											"end": 5005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 5005,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 5005,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 5005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 5005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 5005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 5005,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 5005,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 5005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 5023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 5023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 5005,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4316,
											"end": 5023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 5023,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 5023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 5023,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9115,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9163,
											"end": 9167,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 9151,
											"end": 9168,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9151,
											"end": 9168,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9131,
											"end": 9149,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9131,
											"end": 9149,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9131,
											"end": 9149,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9124,
											"end": 9169,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9185,
											"end": 9203,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9185,
											"end": 9203,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9185,
											"end": 9203,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9178,
											"end": 9212,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9178,
											"end": 9212,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9178,
											"end": 9212,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9228,
											"end": 9246,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 9228,
											"end": 9246,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9228,
											"end": 9246,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9221,
											"end": 9255,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9221,
											"end": 9255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9221,
											"end": 9255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9062,
											"end": 9081,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 9062,
											"end": 9081,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 5094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5117,
											"end": 5147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5147,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5147,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5147,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 5117,
											"end": 5176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5176,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5151,
											"end": 5167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5176,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 5117,
											"end": 5176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5109,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 5109,
											"end": 5195,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5109,
											"end": 5195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5109,
											"end": 5195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5109,
											"end": 5195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5109,
											"end": 5195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9468,
											"end": 9470,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5109,
											"end": 5195,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5109,
											"end": 5195,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5109,
											"end": 5195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9450,
											"end": 9471,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9507,
											"end": 9509,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9480,
											"end": 9510,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24A72B20A624A22FA9A4A3A722A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9526,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9526,
											"end": 9544,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9526,
											"end": 9544,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9519,
											"end": 9563,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9580,
											"end": 9598,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9580,
											"end": 9598,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5109,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9266,
											"end": 9604,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5109,
											"end": 5195,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 5109,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5210,
											"end": 5237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5210,
											"end": 5237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5210,
											"end": 5237,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5210,
											"end": 5237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5237,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5237,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5246,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5246,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5246,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5246,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5246,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5210,
											"end": 5246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5210,
											"end": 5246,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5311,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5311,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5280,
											"end": 5311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5280,
											"end": 5311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5280,
											"end": 5311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5311,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5311,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 5318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 5318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6478,
											"end": 6806,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6478,
											"end": 6806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6550,
											"end": 6565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6550,
											"end": 6565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6550,
											"end": 6565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6550,
											"end": 6565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6550,
											"end": 6565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6569,
											"end": 6575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6569,
											"end": 6575,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 6550,
											"end": 6575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6569,
											"end": 6575,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6569,
											"end": 6575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 6550,
											"end": 6575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6575,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 6550,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6575,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6718,
											"end": 6729,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6718,
											"end": 6739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6739,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6739,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6739,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6765,
											"end": 6799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6765,
											"end": 6799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6765,
											"end": 6799,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6765,
											"end": 6799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6765,
											"end": 6799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6765,
											"end": 6799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6765,
											"end": 6799,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 6765,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6765,
											"end": 6799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6765,
											"end": 6799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6765,
											"end": 6799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6765,
											"end": 6799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6765,
											"end": 6799,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6765,
											"end": 6799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6765,
											"end": 6799,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6478,
											"end": 6806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6478,
											"end": 6806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6478,
											"end": 6806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5953,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5507,
											"end": 5953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5572,
											"end": 5579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5764,
											"name": "PUSH",
											"source": 0,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 5802,
											"end": 5806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 5786,
											"end": 5808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5786,
											"end": 5808,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5637,
											"end": 5932,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5637,
											"end": 5932,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5637,
											"end": 5932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11131,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11106,
											"end": 11131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11106,
											"end": 11131,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11106,
											"end": 11131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11147,
											"end": 11165,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11147,
											"end": 11165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11140,
											"end": 11174,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11140,
											"end": 11174,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11140,
											"end": 11174,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11140,
											"end": 11174,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5830,
											"end": 5844,
											"name": "PUSH",
											"source": 0,
											"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
										},
										{
											"begin": 11190,
											"end": 11208,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11190,
											"end": 11208,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11190,
											"end": 11208,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11183,
											"end": 11217,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5866,
											"end": 5879,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 11233,
											"end": 11251,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 11233,
											"end": 11251,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11233,
											"end": 11251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11226,
											"end": 11260,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5909,
											"end": 5913,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 11276,
											"end": 11295,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 11276,
											"end": 11295,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11276,
											"end": 11295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11269,
											"end": 11330,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11078,
											"end": 11097,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 11078,
											"end": 11097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5637,
											"end": 5932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5637,
											"end": 5932,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5637,
											"end": 5932,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5637,
											"end": 5932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5637,
											"end": 5932,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5637,
											"end": 5932,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5637,
											"end": 5932,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5637,
											"end": 5932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5637,
											"end": 5932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5637,
											"end": 5932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5637,
											"end": 5932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5637,
											"end": 5932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5946,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5946,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5610,
											"end": 5946,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5946,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5591,
											"end": 5946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5591,
											"end": 5946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6147,
											"end": 6472,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6147,
											"end": 6472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6217,
											"end": 6228,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6217,
											"end": 6228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6217,
											"end": 6238,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6217,
											"end": 6238,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6217,
											"end": 6238,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6217,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 6217,
											"end": 6238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6217,
											"end": 6238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6217,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6217,
											"end": 6238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6217,
											"end": 6238,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 6217,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6217,
											"end": 6238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6217,
											"end": 6238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6217,
											"end": 6238,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6384,
											"end": 6397,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6384,
											"end": 6397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6393,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6384,
											"end": 6397,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6384,
											"end": 6397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6384,
											"end": 6397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6397,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6397,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6407,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6407,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6433,
											"end": 6465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6433,
											"end": 6465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6433,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1651,
											"end": 1828,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 420,
											"end": 1017,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 420,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 532,
											"end": 536,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 563,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 590,
											"end": 592,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 579,
											"end": 588,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 572,
											"end": 593,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 622,
											"end": 628,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 616,
											"end": 629,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 660,
											"end": 662,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 649,
											"end": 658,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 645,
											"end": 663,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 638,
											"end": 672,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 690,
											"end": 691,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 840,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 700,
											"end": 840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 714,
											"end": 720,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 711,
											"end": 712,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 708,
											"end": 721,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 700,
											"end": 840,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 700,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 700,
											"end": 840,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 809,
											"end": 823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 809,
											"end": 823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 809,
											"end": 823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 805,
											"end": 828,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 805,
											"end": 828,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 799,
											"end": 829,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 775,
											"end": 792,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 775,
											"end": 792,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 775,
											"end": 792,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 797,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 764,
											"end": 830,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 729,
											"end": 739,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 729,
											"end": 739,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 700,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 700,
											"end": 840,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 700,
											"end": 840,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 700,
											"end": 840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 858,
											"end": 864,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 855,
											"end": 856,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 852,
											"end": 865,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 849,
											"end": 940,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 849,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 849,
											"end": 940,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 928,
											"end": 929,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 914,
											"end": 920,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 903,
											"end": 912,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 899,
											"end": 921,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 895,
											"end": 926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 888,
											"end": 930,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 849,
											"end": 940,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 849,
											"end": 940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1001,
											"end": 1003,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 980,
											"end": 995,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 976,
											"end": 1005,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 961,
											"end": 1006,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 961,
											"end": 1006,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 961,
											"end": 1006,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 961,
											"end": 1006,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1010,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 420,
											"end": 1017,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 420,
											"end": 1017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1022,
											"end": 1195,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 1022,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1110,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1110,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1139,
											"end": 1170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1170,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1171,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1171,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1119,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 1119,
											"end": 1189,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1185,
											"end": 1186,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1182,
											"end": 1183,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1175,
											"end": 1187,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1119,
											"end": 1189,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 1119,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1022,
											"end": 1195,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1022,
											"end": 1195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1022,
											"end": 1195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1022,
											"end": 1195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1200,
											"end": 1454,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1200,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1274,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1282,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1331,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1326,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1315,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1304,
											"end": 1327,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1300,
											"end": 1332,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1349,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 1297,
											"end": 1349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1346,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1343,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1335,
											"end": 1347,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1349,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 1297,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 1387,
											"end": 1396,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 1368,
											"end": 1397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1397,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 1368,
											"end": 1397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1358,
											"end": 1397,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1429,
											"end": 1447,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1447,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1447,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1447,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1416,
											"end": 1448,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1416,
											"end": 1448,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1200,
											"end": 1454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 2161,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1833,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1981,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1967,
											"end": 1976,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1965,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 1977,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1982,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1999,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 1947,
											"end": 1999,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1995,
											"end": 1996,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1999,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 1947,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2018,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 2037,
											"end": 2046,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2018,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 2018,
											"end": 2047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2018,
											"end": 2047,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 2018,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2047,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 2100,
											"end": 2102,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2089,
											"end": 2098,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 2066,
											"end": 2104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2104,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 2066,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2104,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2151,
											"end": 2153,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2154,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2123,
											"end": 2155,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 2161,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 2161,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 2161,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 2161,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 2161,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 2161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2346,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 2166,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2231,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2280,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2266,
											"end": 2275,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2264,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2276,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2249,
											"end": 2281,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2246,
											"end": 2298,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2246,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 2246,
											"end": 2298,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2246,
											"end": 2298,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 2246,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2340,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2317,
											"end": 2340,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2346,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2166,
											"end": 2346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2930,
											"end": 3116,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2930,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2989,
											"end": 2995,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3030,
											"end": 3039,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3021,
											"end": 3028,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3040,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3045,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3010,
											"end": 3062,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3010,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 3010,
											"end": 3062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3010,
											"end": 3062,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 3010,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 3100,
											"end": 3109,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 3081,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 3081,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3110,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2930,
											"end": 3116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2930,
											"end": 3116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 4043,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 3350,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3467,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3475,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3477,
											"end": 3483,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3491,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3501,
											"end": 3507,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3509,
											"end": 3515,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3562,
											"end": 3565,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3550,
											"end": 3559,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3548,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 3537,
											"end": 3560,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3566,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3530,
											"end": 3583,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3530,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 3530,
											"end": 3583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3580,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3576,
											"end": 3577,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3569,
											"end": 3581,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3530,
											"end": 3583,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 3530,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3602,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 3621,
											"end": 3630,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3602,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 3602,
											"end": 3631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3602,
											"end": 3631,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 3602,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3631,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3650,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 3684,
											"end": 3686,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3673,
											"end": 3682,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3650,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 3650,
											"end": 3688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3650,
											"end": 3688,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 3650,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 3688,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 3688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3735,
											"end": 3737,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3724,
											"end": 3733,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3738,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3707,
											"end": 3739,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3697,
											"end": 3739,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3697,
											"end": 3739,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3786,
											"end": 3788,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3775,
											"end": 3784,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3758,
											"end": 3790,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3748,
											"end": 3790,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3748,
											"end": 3790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3840,
											"end": 3843,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3829,
											"end": 3838,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3825,
											"end": 3844,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3885,
											"end": 3889,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3878,
											"end": 3883,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3874,
											"end": 3890,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 3872,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3864,
											"end": 3891,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 3854,
											"end": 3909,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3905,
											"end": 3906,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 3903,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3895,
											"end": 3907,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3909,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 3854,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 4043,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 4043,
											"name": "SWAP10",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 4043,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 4043,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3350,
											"end": 4043,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 4043,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 4043,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 4043,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3928,
											"end": 3933,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3980,
											"end": 3983,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 3965,
											"end": 3984,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3965,
											"end": 3984,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3952,
											"end": 3985,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3952,
											"end": 3985,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4032,
											"end": 4035,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 4017,
											"end": 4036,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4017,
											"end": 4036,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4017,
											"end": 4036,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4004,
											"end": 4037,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4004,
											"end": 4037,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 4043,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3350,
											"end": 4043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4532,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 4272,
											"end": 4532,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4340,
											"end": 4346,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4354,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4403,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4389,
											"end": 4398,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4380,
											"end": 4387,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4376,
											"end": 4399,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4372,
											"end": 4404,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4421,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 4369,
											"end": 4421,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4417,
											"end": 4418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4415,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4407,
											"end": 4419,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4421,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 4369,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 4459,
											"end": 4468,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 4440,
											"end": 4469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4469,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 4440,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4430,
											"end": 4469,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4430,
											"end": 4469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4488,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 4522,
											"end": 4524,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4511,
											"end": 4520,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4525,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4488,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 4488,
											"end": 4526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4488,
											"end": 4526,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 4488,
											"end": 4526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4478,
											"end": 4526,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4478,
											"end": 4526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4532,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4532,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4532,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4532,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4532,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4537,
											"end": 4917,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 4537,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4616,
											"end": 4617,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4612,
											"end": 4624,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4612,
											"end": 4624,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4612,
											"end": 4624,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 4612,
											"end": 4624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4659,
											"end": 4671,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4659,
											"end": 4671,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4659,
											"end": 4671,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4680,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 4680,
											"end": 4741,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4734,
											"end": 4738,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 4726,
											"end": 4732,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4722,
											"end": 4739,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4712,
											"end": 4739,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4712,
											"end": 4739,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4680,
											"end": 4741,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 4680,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4787,
											"end": 4789,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4779,
											"end": 4785,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4776,
											"end": 4790,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4756,
											"end": 4774,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4753,
											"end": 4791,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4750,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 4750,
											"end": 4911,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4833,
											"end": 4843,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 4828,
											"end": 4831,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4824,
											"end": 4844,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4814,
											"end": 4845,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4868,
											"end": 4872,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 4865,
											"end": 4866,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4858,
											"end": 4873,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4896,
											"end": 4900,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4893,
											"end": 4894,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4886,
											"end": 4901,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4750,
											"end": 4911,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 4750,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4750,
											"end": 4911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4537,
											"end": 4917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4537,
											"end": 4917,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4537,
											"end": 4917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4537,
											"end": 4917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4922,
											"end": 5049,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 4922,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 4993,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 4978,
											"end": 4981,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4974,
											"end": 4994,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4971,
											"end": 4972,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4964,
											"end": 4995,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5014,
											"end": 5018,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5004,
											"end": 5019,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5038,
											"end": 5042,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5035,
											"end": 5036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5028,
											"end": 5043,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5054,
											"end": 5179,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 5054,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5094,
											"end": 5098,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5119,
											"end": 5120,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5116,
											"end": 5124,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5113,
											"end": 5147,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5113,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 5113,
											"end": 5147,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 5127,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5164,
											"end": 5173,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5164,
											"end": 5173,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5054,
											"end": 5179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5463,
											"end": 5740,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 5463,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5530,
											"end": 5536,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5585,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5571,
											"end": 5580,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5569,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5558,
											"end": 5581,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5554,
											"end": 5586,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5599,
											"end": 5600,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 5597,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5589,
											"end": 5601,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 5551,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5631,
											"end": 5640,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5641,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5689,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5677,
											"end": 5690,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5670,
											"end": 5691,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5663,
											"end": 5668,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5660,
											"end": 5692,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5650,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 5650,
											"end": 5710,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5706,
											"end": 5707,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5703,
											"end": 5704,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5696,
											"end": 5708,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5745,
											"end": 6300,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 5745,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5909,
											"end": 5911,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5897,
											"end": 5906,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5888,
											"end": 5895,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5884,
											"end": 5907,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5880,
											"end": 5912,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5877,
											"end": 5929,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5877,
											"end": 5929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 5877,
											"end": 5929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5925,
											"end": 5926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5915,
											"end": 5927,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5877,
											"end": 5929,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 5877,
											"end": 5929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5958,
											"end": 5960,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5952,
											"end": 5961,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6000,
											"end": 6002,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5992,
											"end": 5998,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6003,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6075,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6057,
											"end": 6067,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6076,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6021,
											"end": 6031,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6018,
											"end": 6052,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6077,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 6012,
											"end": 6197,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6012,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 6012,
											"end": 6197,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6119,
											"end": 6129,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 6114,
											"end": 6117,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 6110,
											"end": 6130,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 6107,
											"end": 6108,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6100,
											"end": 6131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6154,
											"end": 6158,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 6151,
											"end": 6152,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6144,
											"end": 6159,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6182,
											"end": 6186,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6179,
											"end": 6180,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6187,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6012,
											"end": 6197,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 6012,
											"end": 6197,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6213,
											"end": 6215,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6252,
											"end": 6268,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6252,
											"end": 6268,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6237,
											"end": 6269,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6237,
											"end": 6269,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6244,
											"end": 6250,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5745,
											"end": 6300,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5745,
											"end": 6300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7044,
											"end": 7172,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 7044,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7084,
											"end": 7087,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7115,
											"end": 7116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7111,
											"end": 7117,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 7108,
											"end": 7109,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7102,
											"end": 7141,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7102,
											"end": 7141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 7102,
											"end": 7141,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7121,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 7121,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 7121,
											"end": 7139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7121,
											"end": 7139,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 7121,
											"end": 7139,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7157,
											"end": 7166,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7157,
											"end": 7166,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7044,
											"end": 7172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 10842,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 9738,
											"end": 10842,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9868,
											"end": 9871,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9897,
											"end": 9898,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9930,
											"end": 9936,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9924,
											"end": 9937,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 9963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9982,
											"end": 9983,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10010,
											"end": 10019,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10006,
											"end": 10008,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10002,
											"end": 10020,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 9992,
											"end": 10020,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9992,
											"end": 10020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10070,
											"end": 10072,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10059,
											"end": 10068,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10055,
											"end": 10073,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10092,
											"end": 10110,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10082,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 10082,
											"end": 10143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10136,
											"end": 10140,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 10128,
											"end": 10134,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10124,
											"end": 10141,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10114,
											"end": 10141,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10114,
											"end": 10141,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10082,
											"end": 10143,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 10082,
											"end": 10143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10162,
											"end": 10164,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10210,
											"end": 10212,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10199,
											"end": 10213,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10179,
											"end": 10197,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10176,
											"end": 10214,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10173,
											"end": 10338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 10173,
											"end": 10338,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10237,
											"end": 10270,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10237,
											"end": 10270,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10293,
											"end": 10297,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 10290,
											"end": 10291,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10283,
											"end": 10298,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10323,
											"end": 10327,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10244,
											"end": 10247,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10311,
											"end": 10328,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10173,
											"end": 10338,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 10173,
											"end": 10338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10381,
											"end": 10485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10381,
											"end": 10485,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10381,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 10381,
											"end": 10485,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10499,
											"end": 10500,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10494,
											"end": 10817,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10494,
											"end": 10817,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10494,
											"end": 10817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 10494,
											"end": 10817,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10347,
											"end": 10817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 10347,
											"end": 10817,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10381,
											"end": 10485,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 10381,
											"end": 10485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10414,
											"end": 10438,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10414,
											"end": 10438,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10402,
											"end": 10439,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 10402,
											"end": 10439,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10459,
											"end": 10475,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10459,
											"end": 10475,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 10459,
											"end": 10475,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10459,
											"end": 10475,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10381,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 10381,
											"end": 10485,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10494,
											"end": 10817,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 10494,
											"end": 10817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9685,
											"end": 9686,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9678,
											"end": 9692,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 9678,
											"end": 9692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9678,
											"end": 9692,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9722,
											"end": 9726,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9709,
											"end": 9727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9709,
											"end": 9727,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 10592,
											"end": 10593,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10606,
											"end": 10771,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 10606,
											"end": 10771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10620,
											"end": 10626,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10617,
											"end": 10618,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10614,
											"end": 10627,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10606,
											"end": 10771,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10606,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 10606,
											"end": 10771,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10698,
											"end": 10712,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10698,
											"end": 10712,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10678,
											"end": 10713,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10741,
											"end": 10757,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10741,
											"end": 10757,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10741,
											"end": 10757,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10741,
											"end": 10757,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10606,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 10606,
											"end": 10771,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10606,
											"end": 10771,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 10606,
											"end": 10771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10610,
											"end": 10613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10610,
											"end": 10613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10800,
											"end": 10806,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10795,
											"end": 10798,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 10791,
											"end": 10807,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10784,
											"end": 10807,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 10784,
											"end": 10807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10347,
											"end": 10817,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 10347,
											"end": 10817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10833,
											"end": 10836,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 10833,
											"end": 10836,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 10842,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9738,
											"end": 10842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									],
									".data": {
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									}
								}
							},
							"sourceList": [
								"lib/solmate/src/tokens/ERC20.sol",
								"src/contracts/WrappedAgToken.sol",
								"src/contracts/interfaces/IAgToken.sol",
								"src/contracts/interfaces/IERC20.sol",
								"src/contracts/interfaces/ILendingPool.sol",
								"src/contracts/interfaces/ILendingPoolAddressesProvider.sol",
								"src/contracts/interfaces/IScaledBalanceToken.sol",
								"src/contracts/types/DataTypes.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"POOL()": "7535d246",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"claim()": "4e71d92d",
							"decimals()": "313ce567",
							"deposit(uint256)": "b6b55f25",
							"interestCollector()": "6b6bd8d9",
							"manager()": "481c6a75",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"reserveAsset()": "f85cb5c8",
							"setInterestCollector(address)": "bcaaf576",
							"setManager(address)": "d0ebdbe7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"underlyingAgToken()": "d859562c",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_underlyingAgToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_interestCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governanceAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL\",\"outputs\":[{\"internalType\":\"contract ILendingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interestCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCollector\",\"type\":\"address\"}],\"name\":\"setInterestCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingAgToken\",\"outputs\":[{\"internalType\":\"contract IAgToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Luigy-Lemon (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/WETH.sol)Inspired by Solmate WETH (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/WETH.sol)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Wrapped AgToken (ERC-20) implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/WrappedAgToken.sol\":\"WrappedAgToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x0240f7703cff32a61ee3e9fbb339e09a944260432a9ef37debf3692b1a6c8049\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2d8b0c0158b1952a87c327d506a645040924a94c8f9f937184659f8a8e3b0759\",\"dweb:/ipfs/QmZ9rGdkjRCk8zfr4xeH7Jh88tkWJNt9LvG1o2GcCm7Uqa\"]},\"src/contracts/WrappedAgToken.sol\":{\"keccak256\":\"0x7af9da7c300e9eecf86f1e4191734b6628671a61890f2d63f8a957e5b18ab590\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://65eb6b650fd60d238ab0e7a5f26f77f0d7b326f4251d2eb410e0b0aba58b17f5\",\"dweb:/ipfs/QmUgcWCuAfK8augFNjMEAJ8gY24AAGdKEB83cuNPsei6TX\"]},\"src/contracts/interfaces/IAgToken.sol\":{\"keccak256\":\"0x2c64ea2ccfac98dae66df640520312af55dc1093b9ea83f10212f2eb2efad64a\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://67f993d4b16b4aa9c0f5b99adaec2f6e0375f7c613479be7350d2c4cd50cad7e\",\"dweb:/ipfs/QmZCgiq1K2eVAUwwtd6DcRkxbadPFwT2wMJ8trLQCnjdPF\"]},\"src/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x60bd705c014fde097f648071600f1094f1316bb94a6eadda7f2e5065e02377c6\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://5e43358a9badd8b0fdbe243c5b8936d76bf06b8d98b8b0a93f49fad1db96aa30\",\"dweb:/ipfs/Qma51NxbPTPAEVSHDBEhLmCUsZfdt3o4DwSpY5nYoRV9dH\"]},\"src/contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0x87deb49d72c05ff864bb4b666609dfe6d35a7ede37bdcb9cc19aba88103a6900\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://0de8c1d2afbedd2f9509f7feb6f7daa032ed54115c1a61cee540a6327188b9bc\",\"dweb:/ipfs/QmQCLDEiVMJpqtN3PL2Jk3F82gy2qc6Q5vaQEHNLGvXZMh\"]},\"src/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x522d6f0a7184c79c5adf3a2432e3e956879dfc982389fc616475ed32c95f6f6c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://d7c88f1cacddcf308a84ef83b6d3e4b6b42c73b76c8737120e2e4044b56087ea\",\"dweb:/ipfs/QmZsSBTK5HTDTzPcp5RPoR1LRCUSEh6L7Cjh7VNDcG54QF\"]},\"src/contracts/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x35b5c20f614c624ff4fdaf6f2702b25f106c6bd656d51179a4bd5be39a533bca\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://327594d146f56f3acad9539567e7bf7f97a9fb6491dc8bcf577ca3abe33be292\",\"dweb:/ipfs/QmS5SM5BY9eB68TEfEURZiutMWPwZ1M21P6BTbFC7XqfAs\"]},\"src/contracts/types/DataTypes.sol\":{\"keccak256\":\"0x7befb345e4a3b97ed864c428a4252dbc352709788c623cf1c9923e0a5168f832\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a698b03d3bcbe396fe1e332943e08437c8ffbee6386bb837d4335d724f2a4c89\",\"dweb:/ipfs/QmXZ2waAnzE4Y1eLLStKMsT4qzoPUsSBLp2pw18wcrWyMU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 20,
								"contract": "src/contracts/WrappedAgToken.sol:WrappedAgToken",
								"label": "name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 22,
								"contract": "src/contracts/WrappedAgToken.sol:WrappedAgToken",
								"label": "symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "src/contracts/WrappedAgToken.sol:WrappedAgToken",
								"label": "totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 30,
								"contract": "src/contracts/WrappedAgToken.sol:WrappedAgToken",
								"label": "balanceOf",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 36,
								"contract": "src/contracts/WrappedAgToken.sol:WrappedAgToken",
								"label": "allowance",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 44,
								"contract": "src/contracts/WrappedAgToken.sol:WrappedAgToken",
								"label": "nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 422,
								"contract": "src/contracts/WrappedAgToken.sol:WrappedAgToken",
								"label": "userDeposits",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 424,
								"contract": "src/contracts/WrappedAgToken.sol:WrappedAgToken",
								"label": "manager",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 426,
								"contract": "src/contracts/WrappedAgToken.sol:WrappedAgToken",
								"label": "interestCollector",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 428,
								"contract": "src/contracts/WrappedAgToken.sol:WrappedAgToken",
								"label": "reserveAsset",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 431,
								"contract": "src/contracts/WrappedAgToken.sol:WrappedAgToken",
								"label": "underlyingAgToken",
								"offset": 0,
								"slot": "10",
								"type": "t_contract(IAgToken)745"
							},
							{
								"astId": 434,
								"contract": "src/contracts/WrappedAgToken.sol:WrappedAgToken",
								"label": "POOL",
								"offset": 0,
								"slot": "11",
								"type": "t_contract(ILendingPool)1201"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IAgToken)745": {
								"encoding": "inplace",
								"label": "contract IAgToken",
								"numberOfBytes": "20"
							},
							"t_contract(ILendingPool)1201": {
								"encoding": "inplace",
								"label": "contract ILendingPool",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Wrapped AgToken (ERC-20) implementation.",
						"version": 1
					}
				}
			},
			"src/contracts/interfaces/IAgToken.sol": {
				"IAgToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "BalanceTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "POOL",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UNDERLYING_ASSET_ADDRESS",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiverOfUnderlying",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getScaledUserBalanceAndSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "mintToTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "scaledBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "scaledTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferOnLiquidation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferUnderlyingTo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"BalanceTransfer(address,address,uint256,uint256)": {
								"details": "Emitted during the transfer action",
								"params": {
									"from": "The user whose tokens are being transferred",
									"index": "The new liquidity index of the reserve",
									"to": "The recipient",
									"value": "The amount being transferred"
								}
							},
							"Burn(address,address,uint256,uint256)": {
								"details": "Emitted after agTokens are burned",
								"params": {
									"from": "The owner of the agTokens, getting them burned",
									"index": "The new liquidity index of the reserve",
									"target": "The address that will receive the underlying",
									"value": "The amount being burned"
								}
							},
							"Mint(address,uint256,uint256)": {
								"details": "Emitted after the mint action",
								"params": {
									"from": "The address performing the mint",
									"index": "The new liquidity index of the reserve",
									"value": "The amount being"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"burn(address,address,uint256,uint256)": {
								"details": "Burns agTokens from `user` and sends the equivalent amount of underlying to `receiverOfUnderlying`",
								"params": {
									"amount": "The amount being burned",
									"index": "The new liquidity index of the reserve",
									"receiverOfUnderlying": "The address that will receive the underlying",
									"user": "The owner of the agTokens, getting them burned"
								}
							},
							"getScaledUserBalanceAndSupply(address)": {
								"details": "Returns the scaled balance of the user and the scaled total supply.",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The scaled balance of the user",
									"_1": "The scaled balance and the scaled total supply*"
								}
							},
							"mint(address,uint256,uint256)": {
								"details": "Mints `amount` agTokens to `user`",
								"params": {
									"amount": "The amount of tokens getting minted",
									"index": "The new liquidity index of the reserve",
									"user": "The address receiving the minted tokens"
								},
								"returns": {
									"_0": "`true` if the the previous balance of the user was 0"
								}
							},
							"mintToTreasury(uint256,uint256)": {
								"details": "Mints agTokens to the reserve treasury",
								"params": {
									"amount": "The amount of tokens getting minted",
									"index": "The new liquidity index of the reserve"
								}
							},
							"scaledBalanceOf(address)": {
								"details": "Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update",
								"params": {
									"user": "The user whose balance is calculated"
								},
								"returns": {
									"_0": "The scaled balance of the user*"
								}
							},
							"scaledTotalSupply()": {
								"details": "Returns the scaled total supply of the variable debt token. Represents sum(debt/index)",
								"returns": {
									"_0": "The scaled total supply*"
								}
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferOnLiquidation(address,address,uint256)": {
								"details": "Transfers agTokens in the event of a borrow being liquidated, in case the liquidators reclaims the agToken",
								"params": {
									"from": "The address getting liquidated, current owner of the agTokens",
									"to": "The recipient",
									"value": "The amount of tokens getting transferred"
								}
							},
							"transferUnderlyingTo(address,uint256)": {
								"details": "Transfers the underlying asset to `target`. Used by the LendingPool to transfer assets in borrow(), withdraw() and flashLoan()",
								"params": {
									"amount": "The amount getting transferred",
									"user": "The recipient of the agTokens"
								},
								"returns": {
									"_0": "The amount transferred"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"POOL()": "7535d246",
							"UNDERLYING_ASSET_ADDRESS()": "b16a19de",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,address,uint256,uint256)": "d7020d0a",
							"getScaledUserBalanceAndSupply(address)": "0afbcdc9",
							"mint(address,uint256,uint256)": "156e29f6",
							"mintToTreasury(uint256,uint256)": "7df5bd3b",
							"scaledBalanceOf(address)": "1da24f3e",
							"scaledTotalSupply()": "b1bf962d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOnLiquidation(address,address,uint256)": "f866c319",
							"transferUnderlyingTo(address,uint256)": "4efecaa5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"BalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"POOL\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNDERLYING_ASSET_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverOfUnderlying\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getScaledUserBalanceAndSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"mintToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"scaledBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scaledTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferOnLiquidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferUnderlyingTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BalanceTransfer(address,address,uint256,uint256)\":{\"details\":\"Emitted during the transfer action\",\"params\":{\"from\":\"The user whose tokens are being transferred\",\"index\":\"The new liquidity index of the reserve\",\"to\":\"The recipient\",\"value\":\"The amount being transferred\"}},\"Burn(address,address,uint256,uint256)\":{\"details\":\"Emitted after agTokens are burned\",\"params\":{\"from\":\"The owner of the agTokens, getting them burned\",\"index\":\"The new liquidity index of the reserve\",\"target\":\"The address that will receive the underlying\",\"value\":\"The amount being burned\"}},\"Mint(address,uint256,uint256)\":{\"details\":\"Emitted after the mint action\",\"params\":{\"from\":\"The address performing the mint\",\"index\":\"The new liquidity index of the reserve\",\"value\":\"The amount being\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"burn(address,address,uint256,uint256)\":{\"details\":\"Burns agTokens from `user` and sends the equivalent amount of underlying to `receiverOfUnderlying`\",\"params\":{\"amount\":\"The amount being burned\",\"index\":\"The new liquidity index of the reserve\",\"receiverOfUnderlying\":\"The address that will receive the underlying\",\"user\":\"The owner of the agTokens, getting them burned\"}},\"getScaledUserBalanceAndSupply(address)\":{\"details\":\"Returns the scaled balance of the user and the scaled total supply.\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The scaled balance of the user\",\"_1\":\"The scaled balance and the scaled total supply*\"}},\"mint(address,uint256,uint256)\":{\"details\":\"Mints `amount` agTokens to `user`\",\"params\":{\"amount\":\"The amount of tokens getting minted\",\"index\":\"The new liquidity index of the reserve\",\"user\":\"The address receiving the minted tokens\"},\"returns\":{\"_0\":\"`true` if the the previous balance of the user was 0\"}},\"mintToTreasury(uint256,uint256)\":{\"details\":\"Mints agTokens to the reserve treasury\",\"params\":{\"amount\":\"The amount of tokens getting minted\",\"index\":\"The new liquidity index of the reserve\"}},\"scaledBalanceOf(address)\":{\"details\":\"Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update\",\"params\":{\"user\":\"The user whose balance is calculated\"},\"returns\":{\"_0\":\"The scaled balance of the user*\"}},\"scaledTotalSupply()\":{\"details\":\"Returns the scaled total supply of the variable debt token. Represents sum(debt/index)\",\"returns\":{\"_0\":\"The scaled total supply*\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferOnLiquidation(address,address,uint256)\":{\"details\":\"Transfers agTokens in the event of a borrow being liquidated, in case the liquidators reclaims the agToken\",\"params\":{\"from\":\"The address getting liquidated, current owner of the agTokens\",\"to\":\"The recipient\",\"value\":\"The amount of tokens getting transferred\"}},\"transferUnderlyingTo(address,uint256)\":{\"details\":\"Transfers the underlying asset to `target`. Used by the LendingPool to transfer assets in borrow(), withdraw() and flashLoan()\",\"params\":{\"amount\":\"The amount getting transferred\",\"user\":\"The recipient of the agTokens\"},\"returns\":{\"_0\":\"The amount transferred\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/interfaces/IAgToken.sol\":\"IAgToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/contracts/interfaces/IAgToken.sol\":{\"keccak256\":\"0x2c64ea2ccfac98dae66df640520312af55dc1093b9ea83f10212f2eb2efad64a\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://67f993d4b16b4aa9c0f5b99adaec2f6e0375f7c613479be7350d2c4cd50cad7e\",\"dweb:/ipfs/QmZCgiq1K2eVAUwwtd6DcRkxbadPFwT2wMJ8trLQCnjdPF\"]},\"src/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x60bd705c014fde097f648071600f1094f1316bb94a6eadda7f2e5065e02377c6\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://5e43358a9badd8b0fdbe243c5b8936d76bf06b8d98b8b0a93f49fad1db96aa30\",\"dweb:/ipfs/Qma51NxbPTPAEVSHDBEhLmCUsZfdt3o4DwSpY5nYoRV9dH\"]},\"src/contracts/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x35b5c20f614c624ff4fdaf6f2702b25f106c6bd656d51179a4bd5be39a533bca\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://327594d146f56f3acad9539567e7bf7f97a9fb6491dc8bcf577ca3abe33be292\",\"dweb:/ipfs/QmS5SM5BY9eB68TEfEURZiutMWPwZ1M21P6BTbFC7XqfAs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x60bd705c014fde097f648071600f1094f1316bb94a6eadda7f2e5065e02377c6\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://5e43358a9badd8b0fdbe243c5b8936d76bf06b8d98b8b0a93f49fad1db96aa30\",\"dweb:/ipfs/Qma51NxbPTPAEVSHDBEhLmCUsZfdt3o4DwSpY5nYoRV9dH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/contracts/interfaces/ILendingPool.sol": {
				"ILendingPool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowRateMode",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowRate",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referral",
									"type": "uint16"
								}
							],
							"name": "Borrow",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referral",
									"type": "uint16"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "premium",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "FlashLoan",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidatedCollateralAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "liquidator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "LiquidationCall",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "RebalanceStableBorrowRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "repayer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Repay",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowIndex",
									"type": "uint256"
								}
							],
							"name": "ReserveDataUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralDisabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "borrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceFromAfter",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceToBefore",
									"type": "uint256"
								}
							],
							"name": "finalizeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiverAddress",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "modes",
									"type": "uint256[]"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "params",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "flashLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAddressesProvider",
							"outputs": [
								{
									"internalType": "contract ILendingPoolAddressesProvider",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.ReserveConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveData",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "data",
													"type": "uint256"
												}
											],
											"internalType": "struct DataTypes.ReserveConfigurationMap",
											"name": "configuration",
											"type": "tuple"
										},
										{
											"internalType": "uint128",
											"name": "liquidityIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "variableBorrowIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentLiquidityRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentVariableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentStableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint40",
											"name": "lastUpdateTimestamp",
											"type": "uint40"
										},
										{
											"internalType": "address",
											"name": "aTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "stableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "variableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "interestRateStrategyAddress",
											"type": "address"
										},
										{
											"internalType": "uint8",
											"name": "id",
											"type": "uint8"
										}
									],
									"internalType": "struct DataTypes.ReserveData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedVariableDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReservesList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserAccountData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalCollateralETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDebtETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "availableBorrowsETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "currentLiquidationThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ltv",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "healthFactor",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.UserConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "aTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "stableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "variableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "interestRateStrategyAddress",
									"type": "address"
								}
							],
							"name": "initReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "liquidationCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "rebalanceStableBorrowRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "repay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "configuration",
									"type": "uint256"
								}
							],
							"name": "setConfiguration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "val",
									"type": "bool"
								}
							],
							"name": "setPause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rateStrategyAddress",
									"type": "address"
								}
							],
							"name": "setReserveInterestRateStrategyAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "useAsCollateral",
									"type": "bool"
								}
							],
							"name": "setUserUseReserveAsCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rateMode",
									"type": "uint256"
								}
							],
							"name": "swapBorrowRateMode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Borrow(address,address,address,uint256,uint256,uint256,uint16)": {
								"details": "Emitted on borrow() and flashLoan() when debt needs to be opened",
								"params": {
									"amount": "The amount borrowed out",
									"borrowRate": "The numeric rate at which the user has borrowed",
									"borrowRateMode": "The rate mode: 1 for Stable, 2 for Variable",
									"onBehalfOf": "The address that will be getting the debt",
									"referral": "The referral code used*",
									"reserve": "The address of the underlying asset being borrowed",
									"user": "The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()"
								}
							},
							"Deposit(address,address,address,uint256,uint16)": {
								"details": "Emitted on deposit()",
								"params": {
									"amount": "The amount deposited",
									"onBehalfOf": "The beneficiary of the deposit, receiving the aTokens",
									"referral": "The referral code used*",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address initiating the deposit"
								}
							},
							"FlashLoan(address,address,address,uint256,uint256,uint16)": {
								"details": "Emitted on flashLoan()",
								"params": {
									"amount": "The amount flash borrowed",
									"asset": "The address of the asset being flash borrowed",
									"initiator": "The address initiating the flash loan",
									"premium": "The fee flash borrowed",
									"referralCode": "The referral code used*",
									"target": "The address of the flash loan receiver contract"
								}
							},
							"LiquidationCall(address,address,address,uint256,uint256,address,bool)": {
								"details": "Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.",
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"liquidatedCollateralAmount": "The amount of collateral received by the liiquidator",
									"liquidator": "The address of the liquidator",
									"receiveAToken": "`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"Paused()": {
								"details": "Emitted when the pause is triggered."
							},
							"RebalanceStableBorrowRate(address,address)": {
								"details": "Emitted on rebalanceStableBorrowRate()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user for which the rebalance has been executed*"
								}
							},
							"Repay(address,address,address,uint256)": {
								"details": "Emitted on repay()",
								"params": {
									"amount": "The amount repaid*",
									"repayer": "The address of the user initiating the repay(), providing the funds",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The beneficiary of the repayment, getting his debt reduced"
								}
							},
							"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)": {
								"details": "Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI",
								"params": {
									"liquidityIndex": "The new liquidity index",
									"liquidityRate": "The new liquidity rate",
									"reserve": "The address of the underlying asset of the reserve",
									"stableBorrowRate": "The new stable borrow rate",
									"variableBorrowIndex": "The new variable borrow index*",
									"variableBorrowRate": "The new variable borrow rate"
								}
							},
							"ReserveUsedAsCollateralDisabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral*"
								}
							},
							"ReserveUsedAsCollateralEnabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral*"
								}
							},
							"Swap(address,address,uint256)": {
								"details": "Emitted on swapBorrowRateMode()",
								"params": {
									"rateMode": "The rate mode that the user wants to swap to*",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user swapping his rate mode"
								}
							},
							"Unpaused()": {
								"details": "Emitted when the pause is lifted."
							},
							"Withdraw(address,address,address,uint256)": {
								"details": "Emitted on withdraw()",
								"params": {
									"amount": "The amount to be withdrawn*",
									"reserve": "The address of the underlyng asset being withdrawn",
									"to": "Address that will receive the underlying",
									"user": "The address initiating the withdrawal, owner of aTokens"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"borrow(address,uint256,uint256,uint16,address)": {
								"details": "Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`",
								"params": {
									"amount": "The amount to be borrowed",
									"asset": "The address of the underlying asset to borrow",
									"interestRateMode": "The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable",
									"onBehalfOf": "Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"deposit(address,uint256,address,uint16)": {
								"details": "Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC",
								"params": {
									"amount": "The amount to be deposited",
									"asset": "The address of the underlying asset to deposit",
									"onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"
								}
							},
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
								"details": "Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com",
								"params": {
									"amounts": "The amounts amounts being flash-borrowed",
									"assets": "The addresses of the assets being flash-borrowed",
									"modes": "Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address",
									"onBehalfOf": "The address  that will receive the debt in the case of using on `modes` 1 or 2",
									"params": "Variadic packed params to pass to the receiver as extra information",
									"receiverAddress": "The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"
								}
							},
							"getConfiguration(address)": {
								"details": "Returns the configuration of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The configuration of the reserve*"
								}
							},
							"getReserveData(address)": {
								"details": "Returns the state and configuration of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The state of the reserve*"
								}
							},
							"getReserveNormalizedIncome(address)": {
								"details": "Returns the normalized income normalized income of the reserve",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve's normalized income"
								}
							},
							"getReserveNormalizedVariableDebt(address)": {
								"details": "Returns the normalized variable debt per unit of asset",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve normalized variable debt"
								}
							},
							"getUserAccountData(address)": {
								"details": "Returns the user account data across all the reserves",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"availableBorrowsETH": "the borrowing power left of the user",
									"currentLiquidationThreshold": "the liquidation threshold of the user",
									"healthFactor": "the current health factor of the user*",
									"ltv": "the loan to value of the user",
									"totalCollateralETH": "the total collateral in ETH of the user",
									"totalDebtETH": "the total debt in ETH of the user"
								}
							},
							"getUserConfiguration(address)": {
								"details": "Returns the configuration of the user across all the reserves",
								"params": {
									"user": "The user address"
								},
								"returns": {
									"_0": "The configuration of the user*"
								}
							},
							"liquidationCall(address,address,address,uint256,bool)": {
								"details": "Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk",
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"receiveAToken": "`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"rebalanceStableBorrowRate(address,address)": {
								"details": "Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough",
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"user": "The address of the user to be rebalanced*"
								}
							},
							"repay(address,uint256,uint256,address)": {
								"params": {
									"amount": "The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",
									"asset": "The address of the borrowed underlying asset previously borrowed",
									"onBehalfOf": "Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed",
									"rateMode": "The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable"
								},
								"returns": {
									"_0": "The final amount repaid*"
								}
							},
							"setUserUseReserveAsCollateral(address,bool)": {
								"details": "Allows depositors to enable/disable a specific deposited asset as collateral",
								"params": {
									"asset": "The address of the underlying asset deposited",
									"useAsCollateral": "`true` if the user wants to use the deposit as collateral, `false` otherwise*"
								}
							},
							"swapBorrowRateMode(address,uint256)": {
								"details": "Allows a borrower to swap his debt between stable and variable mode, or viceversa",
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"rateMode": "The rate mode that the user wants to swap to*"
								}
							},
							"withdraw(address,uint256,address)": {
								"details": "Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC",
								"params": {
									"amount": "The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance",
									"asset": "The address of the underlying asset to withdraw",
									"to": "Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet"
								},
								"returns": {
									"_0": "The final amount withdrawn*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"borrow(address,uint256,uint256,uint16,address)": "a415bcad",
							"deposit(address,uint256,address,uint16)": "e8eda9df",
							"finalizeTransfer(address,address,address,uint256,uint256,uint256)": "d5ed3933",
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": "ab9c4b5d",
							"getAddressesProvider()": "fe65acfe",
							"getConfiguration(address)": "c44b11f7",
							"getReserveData(address)": "35ea6a75",
							"getReserveNormalizedIncome(address)": "d15e0053",
							"getReserveNormalizedVariableDebt(address)": "386497fd",
							"getReservesList()": "d1946dbc",
							"getUserAccountData(address)": "bf92857c",
							"getUserConfiguration(address)": "4417a583",
							"initReserve(address,address,address,address,address)": "7a708e92",
							"liquidationCall(address,address,address,uint256,bool)": "00a718a9",
							"paused()": "5c975abb",
							"rebalanceStableBorrowRate(address,address)": "cd112382",
							"repay(address,uint256,uint256,address)": "573ade81",
							"setConfiguration(address,uint256)": "b8d29276",
							"setPause(bool)": "bedb86fb",
							"setReserveInterestRateStrategyAddress(address,address)": "1d2118f9",
							"setUserUseReserveAsCollateral(address,bool)": "5a3b74b9",
							"swapBorrowRateMode(address,uint256)": "94ba89a2",
							"withdraw(address,uint256,address)": "69328dec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRateMode\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referral\",\"type\":\"uint16\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referral\",\"type\":\"uint16\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"LiquidationCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RebalanceStableBorrowRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"ReserveDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceFromAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceToBefore\",\"type\":\"uint256\"}],\"name\":\"finalizeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"modes\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressesProvider\",\"outputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentLiquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentVariableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentStableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedVariableDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.UserConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"}],\"name\":\"initReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rebalanceStableBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"configuration\",\"type\":\"uint256\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"val\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rateStrategyAddress\",\"type\":\"address\"}],\"name\":\"setReserveInterestRateStrategyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Borrow(address,address,address,uint256,uint256,uint256,uint16)\":{\"details\":\"Emitted on borrow() and flashLoan() when debt needs to be opened\",\"params\":{\"amount\":\"The amount borrowed out\",\"borrowRate\":\"The numeric rate at which the user has borrowed\",\"borrowRateMode\":\"The rate mode: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address that will be getting the debt\",\"referral\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset being borrowed\",\"user\":\"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()\"}},\"Deposit(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on deposit()\",\"params\":{\"amount\":\"The amount deposited\",\"onBehalfOf\":\"The beneficiary of the deposit, receiving the aTokens\",\"referral\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the deposit\"}},\"FlashLoan(address,address,address,uint256,uint256,uint16)\":{\"details\":\"Emitted on flashLoan()\",\"params\":{\"amount\":\"The amount flash borrowed\",\"asset\":\"The address of the asset being flash borrowed\",\"initiator\":\"The address initiating the flash loan\",\"premium\":\"The fee flash borrowed\",\"referralCode\":\"The referral code used*\",\"target\":\"The address of the flash loan receiver contract\"}},\"LiquidationCall(address,address,address,uint256,uint256,address,bool)\":{\"details\":\"Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"liquidatedCollateralAmount\":\"The amount of collateral received by the liiquidator\",\"liquidator\":\"The address of the liquidator\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"Paused()\":{\"details\":\"Emitted when the pause is triggered.\"},\"RebalanceStableBorrowRate(address,address)\":{\"details\":\"Emitted on rebalanceStableBorrowRate()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user for which the rebalance has been executed*\"}},\"Repay(address,address,address,uint256)\":{\"details\":\"Emitted on repay()\",\"params\":{\"amount\":\"The amount repaid*\",\"repayer\":\"The address of the user initiating the repay(), providing the funds\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The beneficiary of the repayment, getting his debt reduced\"}},\"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI\",\"params\":{\"liquidityIndex\":\"The new liquidity index\",\"liquidityRate\":\"The new liquidity rate\",\"reserve\":\"The address of the underlying asset of the reserve\",\"stableBorrowRate\":\"The new stable borrow rate\",\"variableBorrowIndex\":\"The new variable borrow index*\",\"variableBorrowRate\":\"The new variable borrow rate\"}},\"ReserveUsedAsCollateralDisabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"ReserveUsedAsCollateralEnabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"Swap(address,address,uint256)\":{\"details\":\"Emitted on swapBorrowRateMode()\",\"params\":{\"rateMode\":\"The rate mode that the user wants to swap to*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user swapping his rate mode\"}},\"Unpaused()\":{\"details\":\"Emitted when the pause is lifted.\"},\"Withdraw(address,address,address,uint256)\":{\"details\":\"Emitted on withdraw()\",\"params\":{\"amount\":\"The amount to be withdrawn*\",\"reserve\":\"The address of the underlyng asset being withdrawn\",\"to\":\"Address that will receive the underlying\",\"user\":\"The address initiating the withdrawal, owner of aTokens\"}}},\"kind\":\"dev\",\"methods\":{\"borrow(address,uint256,uint256,uint16,address)\":{\"details\":\"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`\",\"params\":{\"amount\":\"The amount to be borrowed\",\"asset\":\"The address of the underlying asset to borrow\",\"interestRateMode\":\"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"deposit(address,uint256,address,uint16)\":{\"details\":\"Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC\",\"params\":{\"amount\":\"The amount to be deposited\",\"asset\":\"The address of the underlying asset to deposit\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"details\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com\",\"params\":{\"amounts\":\"The amounts amounts being flash-borrowed\",\"assets\":\"The addresses of the assets being flash-borrowed\",\"modes\":\"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\",\"onBehalfOf\":\"The address  that will receive the debt in the case of using on `modes` 1 or 2\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"getConfiguration(address)\":{\"details\":\"Returns the configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The configuration of the reserve*\"}},\"getReserveData(address)\":{\"details\":\"Returns the state and configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state of the reserve*\"}},\"getReserveNormalizedIncome(address)\":{\"details\":\"Returns the normalized income normalized income of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve's normalized income\"}},\"getReserveNormalizedVariableDebt(address)\":{\"details\":\"Returns the normalized variable debt per unit of asset\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve normalized variable debt\"}},\"getUserAccountData(address)\":{\"details\":\"Returns the user account data across all the reserves\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"availableBorrowsETH\":\"the borrowing power left of the user\",\"currentLiquidationThreshold\":\"the liquidation threshold of the user\",\"healthFactor\":\"the current health factor of the user*\",\"ltv\":\"the loan to value of the user\",\"totalCollateralETH\":\"the total collateral in ETH of the user\",\"totalDebtETH\":\"the total debt in ETH of the user\"}},\"getUserConfiguration(address)\":{\"details\":\"Returns the configuration of the user across all the reserves\",\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The configuration of the user*\"}},\"liquidationCall(address,address,address,uint256,bool)\":{\"details\":\"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"rebalanceStableBorrowRate(address,address)\":{\"details\":\"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"user\":\"The address of the user to be rebalanced*\"}},\"repay(address,uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"onBehalfOf\":\"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\",\"rateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\"},\"returns\":{\"_0\":\"The final amount repaid*\"}},\"setUserUseReserveAsCollateral(address,bool)\":{\"details\":\"Allows depositors to enable/disable a specific deposited asset as collateral\",\"params\":{\"asset\":\"The address of the underlying asset deposited\",\"useAsCollateral\":\"`true` if the user wants to use the deposit as collateral, `false` otherwise*\"}},\"swapBorrowRateMode(address,uint256)\":{\"details\":\"Allows a borrower to swap his debt between stable and variable mode, or viceversa\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"rateMode\":\"The rate mode that the user wants to swap to*\"}},\"withdraw(address,uint256,address)\":{\"details\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\",\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"repay(address,uint256,uint256,address)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/interfaces/ILendingPool.sol\":\"ILendingPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0x87deb49d72c05ff864bb4b666609dfe6d35a7ede37bdcb9cc19aba88103a6900\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://0de8c1d2afbedd2f9509f7feb6f7daa032ed54115c1a61cee540a6327188b9bc\",\"dweb:/ipfs/QmQCLDEiVMJpqtN3PL2Jk3F82gy2qc6Q5vaQEHNLGvXZMh\"]},\"src/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x522d6f0a7184c79c5adf3a2432e3e956879dfc982389fc616475ed32c95f6f6c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://d7c88f1cacddcf308a84ef83b6d3e4b6b42c73b76c8737120e2e4044b56087ea\",\"dweb:/ipfs/QmZsSBTK5HTDTzPcp5RPoR1LRCUSEh6L7Cjh7VNDcG54QF\"]},\"src/contracts/types/DataTypes.sol\":{\"keccak256\":\"0x7befb345e4a3b97ed864c428a4252dbc352709788c623cf1c9923e0a5168f832\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a698b03d3bcbe396fe1e332943e08437c8ffbee6386bb837d4335d724f2a4c89\",\"dweb:/ipfs/QmXZ2waAnzE4Y1eLLStKMsT4qzoPUsSBLp2pw18wcrWyMU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"repay(address,uint256,uint256,address)": {
								"notice": "Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address"
							}
						},
						"version": 1
					}
				}
			},
			"src/contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"ILendingPoolAddressesProvider": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "hasProxy",
									"type": "bool"
								}
							],
							"name": "AddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ConfigurationAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "EmergencyAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolCollateralManagerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolConfiguratorUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingPoolUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LendingRateOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "newMarketId",
									"type": "string"
								}
							],
							"name": "MarketIdSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PriceOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ProxyCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEmergencyAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolCollateralManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolConfigurator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingRateOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMarketId",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "setAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "impl",
									"type": "address"
								}
							],
							"name": "setAddressAsProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "setEmergencyAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "manager",
									"type": "address"
								}
							],
							"name": "setLendingPoolCollateralManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "configurator",
									"type": "address"
								}
							],
							"name": "setLendingPoolConfiguratorImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "setLendingPoolImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lendingRateOracle",
									"type": "address"
								}
							],
							"name": "setLendingRateOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "marketId",
									"type": "string"
								}
							],
							"name": "setMarketId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "setPoolAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "priceOracle",
									"type": "address"
								}
							],
							"name": "setPriceOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave*",
						"details": "Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance",
						"kind": "dev",
						"methods": {},
						"title": "LendingPoolAddressesProvider contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAddress(bytes32)": "21f8a721",
							"getEmergencyAdmin()": "ddcaa9ea",
							"getLendingPool()": "0261bf8b",
							"getLendingPoolCollateralManager()": "712d9171",
							"getLendingPoolConfigurator()": "85c858b1",
							"getLendingRateOracle()": "3618abba",
							"getMarketId()": "568ef470",
							"getPoolAdmin()": "aecda378",
							"getPriceOracle()": "fca513a8",
							"setAddress(bytes32,address)": "ca446dd9",
							"setAddressAsProxy(bytes32,address)": "5dcc528c",
							"setEmergencyAdmin(address)": "35da3394",
							"setLendingPoolCollateralManager(address)": "398e5553",
							"setLendingPoolConfiguratorImpl(address)": "c12542df",
							"setLendingPoolImpl(address)": "5aef021f",
							"setLendingRateOracle(address)": "820d1274",
							"setMarketId(string)": "f67b1847",
							"setPoolAdmin(address)": "283d62ad",
							"setPriceOracle(address)": "530e784f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasProxy\",\"type\":\"bool\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ConfigurationAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"EmergencyAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolCollateralManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingRateOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEmergencyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolCollateralManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingRateOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setEmergencyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"setLendingPoolCollateralManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"configurator\",\"type\":\"address\"}],\"name\":\"setLendingPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"setLendingPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lendingRateOracle\",\"type\":\"address\"}],\"name\":\"setLendingRateOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"marketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setPoolAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"details\":\"Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LendingPoolAddressesProvider contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/interfaces/ILendingPoolAddressesProvider.sol\":\"ILendingPoolAddressesProvider\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x522d6f0a7184c79c5adf3a2432e3e956879dfc982389fc616475ed32c95f6f6c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://d7c88f1cacddcf308a84ef83b6d3e4b6b42c73b76c8737120e2e4044b56087ea\",\"dweb:/ipfs/QmZsSBTK5HTDTzPcp5RPoR1LRCUSEh6L7Cjh7VNDcG54QF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/contracts/interfaces/IScaledBalanceToken.sol": {
				"IScaledBalanceToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getScaledUserBalanceAndSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "scaledBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "scaledTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getScaledUserBalanceAndSupply(address)": {
								"details": "Returns the scaled balance of the user and the scaled total supply.",
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The scaled balance of the user",
									"_1": "The scaled balance and the scaled total supply*"
								}
							},
							"scaledBalanceOf(address)": {
								"details": "Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update",
								"params": {
									"user": "The user whose balance is calculated"
								},
								"returns": {
									"_0": "The scaled balance of the user*"
								}
							},
							"scaledTotalSupply()": {
								"details": "Returns the scaled total supply of the variable debt token. Represents sum(debt/index)",
								"returns": {
									"_0": "The scaled total supply*"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getScaledUserBalanceAndSupply(address)": "0afbcdc9",
							"scaledBalanceOf(address)": "1da24f3e",
							"scaledTotalSupply()": "b1bf962d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getScaledUserBalanceAndSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"scaledBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scaledTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getScaledUserBalanceAndSupply(address)\":{\"details\":\"Returns the scaled balance of the user and the scaled total supply.\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The scaled balance of the user\",\"_1\":\"The scaled balance and the scaled total supply*\"}},\"scaledBalanceOf(address)\":{\"details\":\"Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update\",\"params\":{\"user\":\"The user whose balance is calculated\"},\"returns\":{\"_0\":\"The scaled balance of the user*\"}},\"scaledTotalSupply()\":{\"details\":\"Returns the scaled total supply of the variable debt token. Represents sum(debt/index)\",\"returns\":{\"_0\":\"The scaled total supply*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/interfaces/IScaledBalanceToken.sol\":\"IScaledBalanceToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/contracts/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x35b5c20f614c624ff4fdaf6f2702b25f106c6bd656d51179a4bd5be39a533bca\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://327594d146f56f3acad9539567e7bf7f97a9fb6491dc8bcf577ca3abe33be292\",\"dweb:/ipfs/QmS5SM5BY9eB68TEfEURZiutMWPwZ1M21P6BTbFC7XqfAs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/contracts/types/DataTypes.sol": {
				"DataTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/contracts/types/DataTypes.sol\":63:1664  library DataTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/contracts/types/DataTypes.sol\":63:1664  library DataTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ee2e38a157b19a42693328e539c34e6425307f3783e523ee8425c547e1c51dab64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ee2e38a157b19a42693328e539c34e6425307f3783e523ee8425c547e1c51dab64736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0x2E CODESIZE LOG1 JUMPI 0xB1 SWAP11 TIMESTAMP PUSH10 0x3328E539C34E6425307F CALLDATACOPY DUP4 0xE5 0x23 0xEE DUP5 0x25 0xC5 SELFBALANCE 0xE1 0xC5 SAR 0xAB PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "63:1601:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;63:1601:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ee2e38a157b19a42693328e539c34e6425307f3783e523ee8425c547e1c51dab64736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0x2E CODESIZE LOG1 JUMPI 0xB1 SWAP11 TIMESTAMP PUSH10 0x3328E539C34E6425307F CALLDATACOPY DUP4 0xE5 0x23 0xEE DUP5 0x25 0xC5 SELFBALANCE 0xE1 0xC5 SAR 0xAB PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "63:1601:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 1664,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 63,
									"end": 1664,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ee2e38a157b19a42693328e539c34e6425307f3783e523ee8425c547e1c51dab64736f6c634300080e0033",
									".code": [
										{
											"begin": 63,
											"end": 1664,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 63,
											"end": 1664,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 63,
											"end": 1664,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 63,
											"end": 1664,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 1664,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 1664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 63,
											"end": 1664,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 1664,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 63,
											"end": 1664,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"lib/solmate/src/tokens/ERC20.sol",
								"src/contracts/WrappedAgToken.sol",
								"src/contracts/interfaces/IAgToken.sol",
								"src/contracts/interfaces/IERC20.sol",
								"src/contracts/interfaces/ILendingPool.sol",
								"src/contracts/interfaces/ILendingPoolAddressesProvider.sol",
								"src/contracts/interfaces/IScaledBalanceToken.sol",
								"src/contracts/types/DataTypes.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/types/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/contracts/types/DataTypes.sol\":{\"keccak256\":\"0x7befb345e4a3b97ed864c428a4252dbc352709788c623cf1c9923e0a5168f832\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a698b03d3bcbe396fe1e332943e08437c8ffbee6386bb837d4335d724f2a4c89\",\"dweb:/ipfs/QmXZ2waAnzE4Y1eLLStKMsT4qzoPUsSBLp2pw18wcrWyMU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lib/solmate/src/tokens/ERC20.sol": {
				"ast": {
					"absolutePath": "lib/solmate/src/tokens/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							387
						]
					},
					"id": 388,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "68:403:0",
								"text": "@notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)\n @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it."
							},
							"fullyImplemented": true,
							"id": 387,
							"linearizedBaseContracts": [
								387
							],
							"name": "ERC20",
							"nameLocation": "489:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 10,
									"name": "Transfer",
									"nameLocation": "686:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "711:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "695:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "717:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "745:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "737:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:58:0"
									},
									"src": "680:73:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 18,
									"name": "Approval",
									"nameLocation": "765:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "790:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "774:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "797:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "830:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "822:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:64:0"
									},
									"src": "759:79:0"
								},
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 20,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "1042:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 387,
									"src": "1028:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 19,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1028:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 22,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "1067:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 387,
									"src": "1053:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 21,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1053:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "313ce567",
									"id": 24,
									"mutability": "immutable",
									"name": "decimals",
									"nameLocation": "1103:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 387,
									"src": "1080:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 23,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1080:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 26,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "1316:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 387,
									"src": "1301:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1301:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 30,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "1369:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 387,
									"src": "1334:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 29,
										"keyType": {
											"id": 27,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1342:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1334:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 28,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1353:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dd62ed3e",
									"id": 36,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "1440:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 387,
									"src": "1385:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 35,
										"keyType": {
											"id": 31,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1393:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1385:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 34,
											"keyType": {
												"id": 32,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1412:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1404:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 33,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1423:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 38,
									"mutability": "immutable",
									"name": "INITIAL_CHAIN_ID",
									"nameLocation": "1667:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 387,
									"src": "1640:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 37,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1640:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 40,
									"mutability": "immutable",
									"name": "INITIAL_DOMAIN_SEPARATOR",
									"nameLocation": "1717:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 387,
									"src": "1690:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 39,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1690:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "7ecebe00",
									"id": 44,
									"mutability": "mutable",
									"name": "nonces",
									"nameLocation": "1783:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 387,
									"src": "1748:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 43,
										"keyType": {
											"id": 41,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1756:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1748:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 42,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1767:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "2081:189:0",
										"statements": [
											{
												"expression": {
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 53,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "2091:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 54,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "2098:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2091:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "2091:12:0"
											},
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 57,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "2113:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 58,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "2122:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2113:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "2113:16:0"
											},
											{
												"expression": {
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 61,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "2139:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 62,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "2150:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2139:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "2139:20:0"
											},
											{
												"expression": {
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 65,
														"name": "INITIAL_CHAIN_ID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "2170:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 66,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2189:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "2189:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2170:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "2170:32:0"
											},
											{
												"expression": {
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 70,
														"name": "INITIAL_DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "2212:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "computeDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "2239:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2239:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2212:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "2212:51:0"
											}
										]
									},
									"id": 76,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "2013:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1999:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 45,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1999:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "2042:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2028:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 47,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "_decimals",
												"nameLocation": "2065:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2059:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 49,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2059:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:91:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:0:0"
									},
									"scope": 387,
									"src": "1978:292:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "2538:131:0",
										"statements": [
											{
												"expression": {
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 85,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "2548:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 89,
															"indexExpression": {
																"expression": {
																	"id": 86,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2558:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2558:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2548:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 90,
														"indexExpression": {
															"id": 88,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "2570:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2548:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 91,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "2581:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2548:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "2548:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 95,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2612:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2612:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 97,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "2624:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 98,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "2633:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 94,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "2603:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2603:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "2598:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2658:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 84,
												"id": 102,
												"nodeType": "Return",
												"src": "2651:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2467:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2483:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2475:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2500:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2492:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2474:33:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2532:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 82,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2532:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2531:6:0"
									},
									"scope": 387,
									"src": "2458:211:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "2751:297:0",
										"statements": [
											{
												"expression": {
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 113,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2761:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 116,
														"indexExpression": {
															"expression": {
																"id": 114,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2771:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2771:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2761:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 117,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2786:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2761:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "2761:31:0"
											},
											{
												"id": 126,
												"nodeType": "UncheckedBlock",
												"src": "2914:58:0",
												"statements": [
													{
														"expression": {
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 120,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2938:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 122,
																"indexExpression": {
																	"id": 121,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "2948:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "2938:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 123,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "2955:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2938:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 125,
														"nodeType": "ExpressionStatement",
														"src": "2938:23:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 128,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2996:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2996:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 130,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "3008:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 131,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "3012:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 127,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2987:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2987:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "EmitStatement",
												"src": "2982:37:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3037:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 112,
												"id": 135,
												"nodeType": "Return",
												"src": "3030:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2684:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2701:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "2693:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2713:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "2705:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2692:28:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "2745:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2745:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2744:6:0"
									},
									"scope": 387,
									"src": "2675:373:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "3178:468:0",
										"statements": [
											{
												"assignments": [
													149
												],
												"declarations": [
													{
														"constant": false,
														"id": 149,
														"mutability": "mutable",
														"name": "allowed",
														"nameLocation": "3196:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 197,
														"src": "3188:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 148,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3188:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 150,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "3206:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 152,
														"indexExpression": {
															"id": 151,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3216:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3206:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 155,
													"indexExpression": {
														"expression": {
															"id": 153,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3222:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3222:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3206:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3188:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 157,
														"name": "allowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "3284:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3300:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 159,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3300:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 158,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3295:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3295:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3295:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3284:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"nodeType": "IfStatement",
												"src": "3280:80:0",
												"trueBody": {
													"expression": {
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"baseExpression": {
																"baseExpression": {
																	"id": 164,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "3314:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 168,
																"indexExpression": {
																	"id": 165,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 139,
																	"src": "3324:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3314:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 169,
															"indexExpression": {
																"expression": {
																	"id": 166,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3330:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3330:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "IndexAccess",
															"src": "3314:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 170,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "3344:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 171,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "3354:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3344:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3314:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 174,
													"nodeType": "ExpressionStatement",
													"src": "3314:46:0"
												}
											},
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 176,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "3371:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 178,
														"indexExpression": {
															"id": 177,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3381:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3371:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 179,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "3390:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3371:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "3371:25:0"
											},
											{
												"id": 188,
												"nodeType": "UncheckedBlock",
												"src": "3518:58:0",
												"statements": [
													{
														"expression": {
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 182,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "3542:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 184,
																"indexExpression": {
																	"id": 183,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3552:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "3542:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 185,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "3559:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3542:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 187,
														"nodeType": "ExpressionStatement",
														"src": "3542:23:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 190,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3600:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 191,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "3606:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "3610:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 189,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3591:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3591:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "EmitStatement",
												"src": "3586:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3635:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 147,
												"id": 196,
												"nodeType": "Return",
												"src": "3628:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3063:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3093:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3085:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3085:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3115:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3107:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3135:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3127:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:72:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3172:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3172:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:6:0"
									},
									"scope": 387,
									"src": "3054:592:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "4024:1294:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 216,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "4042:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 217,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4054:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4054:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4042:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5045524d49545f444541444c494e455f45585049524544",
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4071:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e",
																"typeString": "literal_string \"PERMIT_DEADLINE_EXPIRED\""
															},
															"value": "PERMIT_DEADLINE_EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e",
																"typeString": "literal_string \"PERMIT_DEADLINE_EXPIRED\""
															}
														],
														"id": 215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4034:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4034:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "4034:63:0"
											},
											{
												"id": 277,
												"nodeType": "UncheckedBlock",
												"src": "4238:1027:0",
												"statements": [
													{
														"assignments": [
															224
														],
														"declarations": [
															{
																"constant": false,
																"id": 224,
																"mutability": "mutable",
																"name": "recoveredAddress",
																"nameLocation": "4270:16:0",
																"nodeType": "VariableDeclaration",
																"scope": 277,
																"src": "4262:24:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 223,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4262:7:0",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 254,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "1901",
																					"id": 229,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4389:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																						"typeString": "literal_string hex\"1901\""
																					},
																					"value": "\u0019\u0001"
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 230,
																						"name": "DOMAIN_SEPARATOR",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 300,
																						"src": "4425:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																							"typeString": "function () view returns (bytes32)"
																						}
																					},
																					"id": 231,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4425:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
																											"id": 236,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "string",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "4599:84:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
																												"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
																											},
																											"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
																												"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
																											}
																										],
																										"id": 235,
																										"name": "keccak256",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967288,
																										"src": "4552:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																											"typeString": "function (bytes memory) pure returns (bytes32)"
																										}
																									},
																									"id": 237,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "4552:165:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								},
																								{
																									"id": 238,
																									"name": "owner",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 200,
																									"src": "4751:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"id": 239,
																									"name": "spender",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 202,
																									"src": "4790:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"id": 240,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 204,
																									"src": "4831:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"id": 244,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "++",
																									"prefix": false,
																									"src": "4870:15:0",
																									"subExpression": {
																										"baseExpression": {
																											"id": 241,
																											"name": "nonces",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 44,
																											"src": "4870:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																												"typeString": "mapping(address => uint256)"
																											}
																										},
																										"id": 243,
																										"indexExpression": {
																											"id": 242,
																											"name": "owner",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 200,
																											"src": "4877:5:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "4870:13:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"id": 245,
																									"name": "deadline",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 206,
																									"src": "4919:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 233,
																									"name": "abi",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967295,
																									"src": "4508:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_abi",
																										"typeString": "abi"
																									}
																								},
																								"id": 234,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"memberName": "encode",
																								"nodeType": "MemberAccess",
																								"src": "4508:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																									"typeString": "function () pure returns (bytes memory)"
																								}
																							},
																							"id": 246,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4508:449:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						],
																						"id": 232,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967288,
																						"src": "4469:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 247,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4469:514:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																						"typeString": "literal_string hex\"1901\""
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"expression": {
																					"id": 227,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "4347:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "4347:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4347:658:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 226,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "4316:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4316:707:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 250,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "5041:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 251,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "5060:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 252,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "5079:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 225,
																"name": "ecrecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967290,
																"src": "4289:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																}
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4289:805:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4262:832:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 256,
																			"name": "recoveredAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "5117:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 259,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5145:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5137:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 257,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5137:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5137:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "5117:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 262,
																			"name": "recoveredAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "5151:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 263,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 200,
																			"src": "5171:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "5151:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5117:59:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "494e56414c49445f5349474e4552",
																	"id": 266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5178:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c",
																		"typeString": "literal_string \"INVALID_SIGNER\""
																	},
																	"value": "INVALID_SIGNER"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c",
																		"typeString": "literal_string \"INVALID_SIGNER\""
																	}
																],
																"id": 255,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5109:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5109:86:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 268,
														"nodeType": "ExpressionStatement",
														"src": "5109:86:0"
													},
													{
														"expression": {
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 269,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "5210:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 272,
																	"indexExpression": {
																		"id": 270,
																		"name": "recoveredAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5220:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5210:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 273,
																"indexExpression": {
																	"id": 271,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "5238:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5210:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 274,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "5249:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5210:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 276,
														"nodeType": "ExpressionStatement",
														"src": "5210:44:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 279,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "5289:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 280,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "5296:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 281,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "5305:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 278,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "5280:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5280:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 283,
												"nodeType": "EmitStatement",
												"src": "5275:36:0"
											}
										]
									},
									"functionSelector": "d505accf",
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3844:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3868:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3860:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3891:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3883:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3916:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3908:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3939:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3931:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3931:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3963:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3957:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 207,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3957:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3982:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3974:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 209,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3974:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4001:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3993:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:158:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4024:0:0"
									},
									"scope": 387,
									"src": "3835:1483:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "5390:111:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 290,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5407:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5407:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 292,
															"name": "INITIAL_CHAIN_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "5424:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5407:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 295,
															"name": "computeDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5470:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5470:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5407:87:0",
													"trueExpression": {
														"id": 294,
														"name": "INITIAL_DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "5443:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 289,
												"id": 298,
												"nodeType": "Return",
												"src": "5400:94:0"
											}
										]
									},
									"functionSelector": "3644e515",
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "5333:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5349:2:0"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "5381:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 287,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5380:9:0"
									},
									"scope": 387,
									"src": "5324:177:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "5581:372:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																			"id": 309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5679:84:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																				"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																			},
																			"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																				"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																			}
																		],
																		"id": 308,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "5669:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5669:95:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 314,
																					"name": "name",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 20,
																					"src": "5802:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				],
																				"id": 313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5796:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 312,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "5796:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5796:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes storage pointer"
																			}
																		],
																		"id": 311,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "5786:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5786:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "31",
																			"id": 318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5840:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																				"typeString": "literal_string \"1\""
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																				"typeString": "literal_string \"1\""
																			}
																		],
																		"id": 317,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "5830:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5830:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 320,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5866:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "5866:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 324,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5909:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC20_$387",
																				"typeString": "contract ERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ERC20_$387",
																				"typeString": "contract ERC20"
																			}
																		],
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5901:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 322,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5901:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5901:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 306,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5637:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "5637:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5637:295:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 305,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "5610:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5610:336:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 304,
												"id": 328,
												"nodeType": "Return",
												"src": "5591:355:0"
											}
										]
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeDomainSeparator",
									"nameLocation": "5516:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5538:2:0"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "5572:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5571:9:0"
									},
									"scope": 387,
									"src": "5507:446:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "6207:265:0",
										"statements": [
											{
												"expression": {
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 337,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "6217:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 338,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "6232:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6217:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "6217:21:0"
											},
											{
												"id": 347,
												"nodeType": "UncheckedBlock",
												"src": "6360:58:0",
												"statements": [
													{
														"expression": {
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 341,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "6384:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 343,
																"indexExpression": {
																	"id": 342,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "6394:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "6384:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 344,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "6401:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6384:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 346,
														"nodeType": "ExpressionStatement",
														"src": "6384:23:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6450:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6442:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 349,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6442:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6442:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "6454:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 354,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "6458:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 348,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "6433:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6433:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "EmitStatement",
												"src": "6428:37:0"
											}
										]
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "6156:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6170:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "6162:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6162:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6182:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "6174:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6161:28:0"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6207:0:0"
									},
									"scope": 387,
									"src": "6147:325:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "6540:266:0",
										"statements": [
											{
												"expression": {
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 365,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "6550:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 367,
														"indexExpression": {
															"id": 366,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "6560:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6550:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 368,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "6569:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6550:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "6550:25:0"
											},
											{
												"id": 375,
												"nodeType": "UncheckedBlock",
												"src": "6694:56:0",
												"statements": [
													{
														"expression": {
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 371,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "6718:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 372,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "6733:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6718:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 374,
														"nodeType": "ExpressionStatement",
														"src": "6718:21:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 377,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "6774:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6788:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6780:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 378,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6780:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 382,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "6792:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 376,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "6765:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6765:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "EmitStatement",
												"src": "6760:39:0"
											}
										]
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "6487:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6501:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "6493:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6493:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6515:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "6507:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6492:30:0"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6540:0:0"
									},
									"scope": 387,
									"src": "6478:328:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 388,
							"src": "471:6337:0",
							"usedErrors": []
						}
					],
					"src": "42:6767:0"
				},
				"id": 0
			},
			"src/contracts/WrappedAgToken.sol": {
				"ast": {
					"absolutePath": "src/contracts/WrappedAgToken.sol",
					"exportedSymbols": {
						"DataTypes": [
							1418
						],
						"ERC20": [
							387
						],
						"IAgToken": [
							745
						],
						"ILendingPool": [
							1201
						],
						"WrappedAgToken": [
							641
						]
					},
					"id": 642,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 389,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:1"
						},
						{
							"absolutePath": "lib/solmate/src/tokens/ERC20.sol",
							"file": "../../lib/solmate/src/tokens/ERC20.sol",
							"id": 391,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 388,
							"src": "68:61:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 390,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 387,
										"src": "76:5:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/contracts/interfaces/IAgToken.sol",
							"file": "./interfaces/IAgToken.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 746,
							"src": "131:51:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 392,
										"name": "IAgToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 745,
										"src": "139:8:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/contracts/interfaces/ILendingPool.sol",
							"file": "./interfaces/ILendingPool.sol",
							"id": 395,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 1202,
							"src": "183:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 394,
										"name": "ILendingPool",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1201,
										"src": "191:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/contracts/types/DataTypes.sol",
							"file": "./types/DataTypes.sol",
							"id": 397,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 1419,
							"src": "243:49:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 396,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1418,
										"src": "251:9:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 399,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 387,
										"src": "579:5:1"
									},
									"id": 400,
									"nodeType": "InheritanceSpecifier",
									"src": "579:5:1"
								}
							],
							"canonicalName": "WrappedAgToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 398,
								"nodeType": "StructuredDocumentation",
								"src": "294:258:1",
								"text": "@notice Wrapped AgToken (ERC-20) implementation.\n @author Luigy-Lemon (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/WETH.sol)\n @author Inspired by Solmate WETH (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/WETH.sol)"
							},
							"fullyImplemented": true,
							"id": 641,
							"linearizedBaseContracts": [
								641,
								387
							],
							"name": "WrappedAgToken",
							"nameLocation": "561:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c",
									"id": 406,
									"name": "Deposit",
									"nameLocation": "598:7:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "622:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "606:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "636:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "628:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:38:1"
									},
									"src": "592:52:1"
								},
								{
									"anonymous": false,
									"eventSelector": "7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65",
									"id": 412,
									"name": "Withdrawal",
									"nameLocation": "656:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "683:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "667:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:36:1"
									},
									"src": "650:53:1"
								},
								{
									"anonymous": false,
									"eventSelector": "7a355715549cfe7c1cba26304350343fbddc4b4f72d3ce3e7c27117dd20b5cb8",
									"id": 416,
									"name": "Claimed",
									"nameLocation": "715:7:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "731:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "723:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:16:1"
									},
									"src": "709:30:1"
								},
								{
									"constant": true,
									"id": 419,
									"mutability": "constant",
									"name": "ACTIVE_MASK",
									"nameLocation": "762:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 641,
									"src": "745:97:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 417,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "745:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646454646464646464646464646464646",
										"id": 418,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "776:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457511950319091711999_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...1999"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 422,
									"mutability": "mutable",
									"name": "userDeposits",
									"nameLocation": "857:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 641,
									"src": "849:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 420,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "849:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 421,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "872:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "481c6a75",
									"id": 424,
									"mutability": "mutable",
									"name": "manager",
									"nameLocation": "894:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 641,
									"src": "879:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 423,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "879:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6b6bd8d9",
									"id": 426,
									"mutability": "mutable",
									"name": "interestCollector",
									"nameLocation": "922:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 641,
									"src": "907:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 425,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "907:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f85cb5c8",
									"id": 428,
									"mutability": "mutable",
									"name": "reserveAsset",
									"nameLocation": "960:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 641,
									"src": "945:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 427,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "945:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d859562c",
									"id": 431,
									"mutability": "mutable",
									"name": "underlyingAgToken",
									"nameLocation": "994:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 641,
									"src": "978:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAgToken_$745",
										"typeString": "contract IAgToken"
									},
									"typeName": {
										"id": 430,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 429,
											"name": "IAgToken",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 745,
											"src": "978:8:1"
										},
										"referencedDeclaration": 745,
										"src": "978:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAgToken_$745",
											"typeString": "contract IAgToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7535d246",
									"id": 434,
									"mutability": "mutable",
									"name": "POOL",
									"nameLocation": "1037:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 641,
									"src": "1017:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILendingPool_$1201",
										"typeString": "contract ILendingPool"
									},
									"typeName": {
										"id": 433,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 432,
											"name": "ILendingPool",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1201,
											"src": "1017:12:1"
										},
										"referencedDeclaration": 1201,
										"src": "1017:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILendingPool_$1201",
											"typeString": "contract ILendingPool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "1290:219:1",
										"statements": [
											{
												"expression": {
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 454,
														"name": "interestCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "1296:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 455,
														"name": "_interestCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1316:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1296:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "1296:38:1"
											},
											{
												"expression": {
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 458,
														"name": "underlyingAgToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "1340:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAgToken_$745",
															"typeString": "contract IAgToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 460,
																"name": "_underlyingAgToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "1369:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 459,
															"name": "IAgToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "1360:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IAgToken_$745_$",
																"typeString": "type(contract IAgToken)"
															}
														},
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1360:28:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAgToken_$745",
															"typeString": "contract IAgToken"
														}
													},
													"src": "1340:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAgToken_$745",
														"typeString": "contract IAgToken"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "1340:48:1"
											},
											{
												"expression": {
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 464,
														"name": "POOL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "1394:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPool_$1201",
															"typeString": "contract ILendingPool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 466,
																"name": "governanceAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "1414:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 465,
															"name": "ILendingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "1401:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ILendingPool_$1201_$",
																"typeString": "type(contract ILendingPool)"
															}
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1401:31:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPool_$1201",
															"typeString": "contract ILendingPool"
														}
													},
													"src": "1394:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPool_$1201",
														"typeString": "contract ILendingPool"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "1394:38:1"
											},
											{
												"expression": {
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 470,
														"name": "reserveAsset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "1438:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 471,
														"name": "_underlyingAgToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "1453:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1438:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "1438:33:1"
											},
											{
												"expression": {
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 474,
														"name": "manager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1477:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 475,
														"name": "governanceAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "1487:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1477:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "1477:27:1"
											}
										]
									},
									"id": 479,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 449,
													"name": "tokenName",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 436,
													"src": "1251:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 450,
													"name": "tokenSymbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 438,
													"src": "1262:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 451,
													"name": "tokenDecimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 440,
													"src": "1275:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												}
											],
											"id": 452,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 448,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 387,
												"src": "1245:5:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1245:44:1"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenName",
												"nameLocation": "1080:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1066:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 435,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1066:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "tokenSymbol",
												"nameLocation": "1109:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1095:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 437,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1095:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "tokenDecimals",
												"nameLocation": "1132:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1126:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 439,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1126:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "_underlyingAgToken",
												"nameLocation": "1159:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1151:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "_interestCollector",
												"nameLocation": "1191:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1183:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "governanceAddress",
												"nameLocation": "1223:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1215:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1215:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:184:1"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1290:0:1"
									},
									"scope": 641,
									"src": "1049:460:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "1708:75:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 482,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1726:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1726:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 484,
																"name": "manager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1740:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1726:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "554e415554484f52495a4544",
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1749:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
																"typeString": "literal_string \"UNAUTHORIZED\""
															},
															"value": "UNAUTHORIZED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
																"typeString": "literal_string \"UNAUTHORIZED\""
															}
														],
														"id": 481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1718:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "1718:46:1"
											},
											{
												"id": 489,
												"nodeType": "PlaceholderStatement",
												"src": "1775:1:1"
											}
										]
									},
									"id": 491,
									"name": "isManager",
									"nameLocation": "1698:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:1"
									},
									"src": "1689:94:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "1807:208:1",
										"statements": [
											{
												"assignments": [
													497
												],
												"declarations": [
													{
														"constant": false,
														"id": 497,
														"mutability": "mutable",
														"name": "config",
														"nameLocation": "1858:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "1817:47:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1410_memory_ptr",
															"typeString": "struct DataTypes.ReserveConfigurationMap"
														},
														"typeName": {
															"id": 496,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 495,
																"name": "DataTypes.ReserveConfigurationMap",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1410,
																"src": "1817:33:1"
															},
															"referencedDeclaration": 1410,
															"src": "1817:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1410_storage_ptr",
																"typeString": "struct DataTypes.ReserveConfigurationMap"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"arguments": [
														{
															"id": 500,
															"name": "reserveAsset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "1889:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 498,
															"name": "POOL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "1867:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPool_$1201",
																"typeString": "contract ILendingPool"
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getConfiguration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1129,
														"src": "1867:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_ReserveConfigurationMap_$1410_memory_ptr_$",
															"typeString": "function (address) view external returns (struct DataTypes.ReserveConfigurationMap memory)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1867:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1410_memory_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1817:85:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 504,
																				"name": "config",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 497,
																				"src": "1930:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1410_memory_ptr",
																					"typeString": "struct DataTypes.ReserveConfigurationMap memory"
																				}
																			},
																			"id": 505,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1409,
																			"src": "1930:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "1944:12:1",
																			"subExpression": {
																				"id": 506,
																				"name": "ACTIVE_MASK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 419,
																				"src": "1945:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1930:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 509,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1929:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1961:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1929:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e6465726c79696e67204173736574206973206e6f7420616374697665",
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1964:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0645250b9b20f5c579a4994fd24877f14d64fe40149b7a647104dd4cb7118cd",
																"typeString": "literal_string \"Underlying Asset is not active\""
															},
															"value": "Underlying Asset is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0645250b9b20f5c579a4994fd24877f14d64fe40149b7a647104dd4cb7118cd",
																"typeString": "literal_string \"Underlying Asset is not active\""
															}
														],
														"id": 503,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1921:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1921:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "1921:76:1"
											},
											{
												"id": 515,
												"nodeType": "PlaceholderStatement",
												"src": "2007:1:1"
											}
										]
									},
									"id": 517,
									"name": "isActive",
									"nameLocation": "1798:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1807:0:1"
									},
									"src": "1789:226:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "2254:195:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 527,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2296:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2296:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 531,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2316:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_WrappedAgToken_$641",
																		"typeString": "contract WrappedAgToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_WrappedAgToken_$641",
																		"typeString": "contract WrappedAgToken"
																	}
																],
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2308:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 529,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2308:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2308:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "2323:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 524,
															"name": "underlyingAgToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "2265:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAgToken_$745",
																"typeString": "contract IAgToken"
															}
														},
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 804,
														"src": "2265:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2265:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "2265:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 537,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2347:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2347:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 539,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "2359:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 536,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "2341:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2341:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "2341:25:1"
											},
											{
												"expression": {
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 542,
														"name": "userDeposits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "2377:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 543,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "2393:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2377:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "2377:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 547,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2423:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2423:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 549,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "2435:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 546,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "2415:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2415:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "EmitStatement",
												"src": "2410:32:1"
											}
										]
									},
									"functionSelector": "b6b55f25",
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 522,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 521,
												"name": "isActive",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 517,
												"src": "2243:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2243:10:1"
										}
									],
									"name": "deposit",
									"nameLocation": "2212:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2228:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2220:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2220:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:16:1"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2254:0:1"
									},
									"scope": 641,
									"src": "2203:246:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "2496:187:1",
										"statements": [
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 558,
														"name": "userDeposits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "2506:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 559,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "2522:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2506:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "2506:22:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 563,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2553:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2553:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "2565:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 562,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "2547:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2547:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "2547:25:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 571,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2611:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2611:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "2623:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 568,
															"name": "underlyingAgToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "2584:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAgToken_$745",
																"typeString": "contract IAgToken"
															}
														},
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 772,
														"src": "2584:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2584:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "2584:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 577,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2657:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2657:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 579,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "2669:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 576,
														"name": "Withdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "2646:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2646:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "EmitStatement",
												"src": "2641:35:1"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "2464:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2481:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "2473:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2473:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2472:16:1"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:1"
									},
									"scope": 641,
									"src": "2455:228:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "2894:164:1",
										"statements": [
											{
												"assignments": [
													587
												],
												"declarations": [
													{
														"constant": false,
														"id": 587,
														"mutability": "mutable",
														"name": "claimable",
														"nameLocation": "2912:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 603,
														"src": "2904:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 586,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2904:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 591,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 588,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "2924:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 589,
														"name": "userDeposits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "2938:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2924:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2904:46:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 595,
															"name": "interestCollector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "2988:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 596,
															"name": "claimable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "3007:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 592,
															"name": "underlyingAgToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "2961:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAgToken_$745",
																"typeString": "contract IAgToken"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 772,
														"src": "2961:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2961:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "2961:56:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "claimable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "3041:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "3033:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3033:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "EmitStatement",
												"src": "3028:23:1"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "2879:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2884:2:1"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2894:0:1"
									},
									"scope": 641,
									"src": "2870:188:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "3138:49:1",
										"statements": [
											{
												"expression": {
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 611,
														"name": "interestCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "3148:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 612,
														"name": "newCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "3168:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3148:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "3148:32:1"
											}
										]
									},
									"functionSelector": "bcaaf576",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 609,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 608,
												"name": "isManager",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 491,
												"src": "3126:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3126:11:1"
										}
									],
									"name": "setInterestCollector",
									"nameLocation": "3074:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "newCollector",
												"nameLocation": "3103:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3095:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3095:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3094:22:1"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3138:0:1"
									},
									"scope": 641,
									"src": "3065:122:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "3254:37:1",
										"statements": [
											{
												"expression": {
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 623,
														"name": "manager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "3264:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 624,
														"name": "newManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "3274:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3264:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "3264:20:1"
											}
										]
									},
									"functionSelector": "d0ebdbe7",
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 621,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 620,
												"name": "isManager",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 491,
												"src": "3242:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3242:11:1"
										}
									],
									"name": "setManager",
									"nameLocation": "3202:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "newManager",
												"nameLocation": "3221:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "3213:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:20:1"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3254:0:1"
									},
									"scope": 641,
									"src": "3193:98:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "3324:80:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 632,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3342:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3342:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "30",
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3354:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3342:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e74726163742063616e206f6e6c792068616e646c6520455243323020746f6b656e73",
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3357:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_39c39cd6feb809181197540dc197746d31d41d4d89b61ddd61a8b7a3d33e9e14",
																"typeString": "literal_string \"Contract can only handle ERC20 tokens\""
															},
															"value": "Contract can only handle ERC20 tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_39c39cd6feb809181197540dc197746d31d41d4d89b61ddd61a8b7a3d33e9e14",
																"typeString": "literal_string \"Contract can only handle ERC20 tokens\""
															}
														],
														"id": 631,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3334:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3334:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "3334:63:1"
											}
										]
									},
									"id": 640,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:1"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3324:0:1"
									},
									"scope": 641,
									"src": "3297:107:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 642,
							"src": "552:2854:1",
							"usedErrors": []
						}
					],
					"src": "42:3364:1"
				},
				"id": 1
			},
			"src/contracts/interfaces/IAgToken.sol": {
				"ast": {
					"absolutePath": "src/contracts/interfaces/IAgToken.sol",
					"exportedSymbols": {
						"IAgToken": [
							745
						],
						"IERC20": [
							823
						],
						"IScaledBalanceToken": [
							1379
						]
					},
					"id": 746,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 643,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:2"
						},
						{
							"absolutePath": "src/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 645,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 746,
							"sourceUnit": 824,
							"src": "63:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 644,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 823,
										"src": "71:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/contracts/interfaces/IScaledBalanceToken.sol",
							"file": "./IScaledBalanceToken.sol",
							"id": 647,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 746,
							"sourceUnit": 1380,
							"src": "100:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 646,
										"name": "IScaledBalanceToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1379,
										"src": "108:19:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 648,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 823,
										"src": "186:6:2"
									},
									"id": 649,
									"nodeType": "InheritanceSpecifier",
									"src": "186:6:2"
								},
								{
									"baseName": {
										"id": 650,
										"name": "IScaledBalanceToken",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1379,
										"src": "194:19:2"
									},
									"id": 651,
									"nodeType": "InheritanceSpecifier",
									"src": "194:19:2"
								}
							],
							"canonicalName": "IAgToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 745,
							"linearizedBaseContracts": [
								745,
								1379,
								823
							],
							"name": "IAgToken",
							"nameLocation": "174:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "220:207:2",
										"text": " @dev Emitted after the mint action\n @param from The address performing the mint\n @param value The amount being\n @param index The new liquidity index of the reserve"
									},
									"eventSelector": "4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f",
									"id": 660,
									"name": "Mint",
									"nameLocation": "438:4:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "459:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "443:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "488:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "480:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "480:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:52:2"
									},
									"src": "432:63:2"
								},
								{
									"functionSelector": "7535d246",
									"id": 665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "POOL",
									"nameLocation": "511:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "515:2:2"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "536:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "536:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "535:9:2"
									},
									"scope": 745,
									"src": "502:43:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b16a19de",
									"id": 670,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "UNDERLYING_ASSET_ADDRESS",
									"nameLocation": "560:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:2:2"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "605:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "604:9:2"
									},
									"scope": 745,
									"src": "551:63:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "620:300:2",
										"text": " @dev Mints `amount` agTokens to `user`\n @param user The address receiving the minted tokens\n @param amount The amount of tokens getting minted\n @param index The new liquidity index of the reserve\n @return `true` if the the previous balance of the user was 0"
									},
									"functionSelector": "156e29f6",
									"id": 682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "934:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "947:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "939:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "961:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "953:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "977:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "969:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:45:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1018:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1018:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:6:2"
									},
									"scope": 745,
									"src": "925:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "1030:299:2",
										"text": " @dev Emitted after agTokens are burned\n @param from The owner of the agTokens, getting them burned\n @param target The address that will receive the underlying\n @param value The amount being burned\n @param index The new liquidity index of the reserve"
									},
									"eventSelector": "5d624aa9c148153ab3446c1b154f660ee7701e549fe9b62dab7171b1c80e6fa2",
									"id": 693,
									"name": "Burn",
									"nameLocation": "1340:4:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1370:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "1354:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1354:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1400:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "1384:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1384:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1424:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "1416:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1416:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1447:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "1439:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1439:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1344:114:2"
									},
									"src": "1334:125:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "1465:267:2",
										"text": " @dev Emitted during the transfer action\n @param from The user whose tokens are being transferred\n @param to The recipient\n @param value The amount being transferred\n @param index The new liquidity index of the reserve"
									},
									"eventSelector": "4beccb90f994c31aced7a23b5611020728a23d8ec5cddd1a3e9d97b96fda8666",
									"id": 704,
									"name": "BalanceTransfer",
									"nameLocation": "1743:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1784:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "1768:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1814:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "1798:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1834:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "1826:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1826:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1857:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "1849:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1758:110:2"
									},
									"src": "1737:132:2"
								},
								{
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "1875:379:2",
										"text": " @dev Burns agTokens from `user` and sends the equivalent amount of underlying to `receiverOfUnderlying`\n @param user The owner of the agTokens, getting them burned\n @param receiverOfUnderlying The address that will receive the underlying\n @param amount The amount being burned\n @param index The new liquidity index of the reserve"
									},
									"functionSelector": "d7020d0a",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2268:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2290:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2282:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2282:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "receiverOfUnderlying",
												"nameLocation": "2312:20:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2304:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2304:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2350:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2374:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2366:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2272:113:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2402:0:2"
									},
									"scope": 745,
									"src": "2259:144:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2409:178:2",
										"text": " @dev Mints agTokens to the reserve treasury\n @param amount The amount of tokens getting minted\n @param index The new liquidity index of the reserve"
									},
									"functionSelector": "7df5bd3b",
									"id": 724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintToTreasury",
									"nameLocation": "2601:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2624:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "2616:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2640:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "2632:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2632:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2615:31:2"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2655:0:2"
									},
									"scope": 745,
									"src": "2592:64:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "2662:310:2",
										"text": " @dev Transfers agTokens in the event of a borrow being liquidated, in case the liquidators reclaims the agToken\n @param from The address getting liquidated, current owner of the agTokens\n @param to The recipient\n @param value The amount of tokens getting transferred"
									},
									"functionSelector": "f866c319",
									"id": 734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOnLiquidation",
									"nameLocation": "2986:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3016:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "3008:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3030:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "3022:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3042:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "3034:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3034:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3007:41:2"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3065:0:2"
									},
									"scope": 745,
									"src": "2977:89:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "3072:303:2",
										"text": " @dev Transfers the underlying asset to `target`. Used by the LendingPool to transfer\n assets in borrow(), withdraw() and flashLoan()\n @param user The recipient of the agTokens\n @param amount The amount getting transferred\n @return The amount transferred"
									},
									"functionSelector": "4efecaa5",
									"id": 744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferUnderlyingTo",
									"nameLocation": "3389:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3418:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "3410:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3432:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "3424:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3424:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3409:30:2"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "3474:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:9:2"
									},
									"scope": 745,
									"src": "3380:103:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 746,
							"src": "164:3321:2",
							"usedErrors": []
						}
					],
					"src": "37:3449:2"
				},
				"id": 2
			},
			"src/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "src/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							823
						]
					},
					"id": 824,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 747,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 748,
								"nodeType": "StructuredDocumentation",
								"src": "63:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 823,
							"linearizedBaseContracts": [
								823
							],
							"name": "IERC20",
							"nameLocation": "144:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "157:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "237:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "248:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "274:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "274:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "273:9:3"
									},
									"scope": 823,
									"src": "228:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "289:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "375:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "393:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "385:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "385:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "384:17:3"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "425:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:9:3"
									},
									"scope": 823,
									"src": "366:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "440:209:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 772,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "663:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "680:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "672:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "699:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "691:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:35:3"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "741:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 769,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "741:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "740:6:3"
									},
									"scope": 823,
									"src": "654:93:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "753:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 782,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1031:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1049:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "1041:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1064:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "1056:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1040:32:3"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "1120:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:9:3"
									},
									"scope": 823,
									"src": "1022:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "1135:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1791:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1807:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "1799:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1824:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "1816:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1816:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:33:3"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "1850:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 789,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1850:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1849:6:3"
									},
									"scope": 823,
									"src": "1782:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "1862:296:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2172:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2193:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "2185:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2185:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2209:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "2201:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2228:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "2220:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2220:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2184:51:3"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "2270:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 801,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2270:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:6:3"
									},
									"scope": 823,
									"src": "2163:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "2282:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 813,
									"name": "Transfer",
									"nameLocation": "2451:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2476:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "2460:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2498:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "2482:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2482:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2510:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "2502:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2459:57:3"
									},
									"src": "2445:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "2523:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 822,
									"name": "Approval",
									"nameLocation": "2682:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2716:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "2700:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2747:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "2731:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2731:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2772:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "2764:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2764:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:93:3"
									},
									"src": "2676:108:3"
								}
							],
							"scope": 824,
							"src": "134:2652:3",
							"usedErrors": []
						}
					],
					"src": "37:2750:3"
				},
				"id": 3
			},
			"src/contracts/interfaces/ILendingPool.sol": {
				"ast": {
					"absolutePath": "src/contracts/interfaces/ILendingPool.sol",
					"exportedSymbols": {
						"DataTypes": [
							1418
						],
						"ILendingPool": [
							1201
						],
						"ILendingPoolAddressesProvider": [
							1352
						]
					},
					"id": 1202,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 825,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:4"
						},
						{
							"absolutePath": "src/contracts/interfaces/ILendingPoolAddressesProvider.sol",
							"file": "./ILendingPoolAddressesProvider.sol",
							"id": 827,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1202,
							"sourceUnit": 1353,
							"src": "63:82:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 826,
										"name": "ILendingPoolAddressesProvider",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1352,
										"src": "71:29:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/contracts/types/DataTypes.sol",
							"file": "../types/DataTypes.sol",
							"id": 829,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1202,
							"sourceUnit": 1419,
							"src": "146:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 828,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1418,
										"src": "154:9:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILendingPool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1201,
							"linearizedBaseContracts": [
								1201
							],
							"name": "ILendingPool",
							"nameLocation": "207:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "224:325:4",
										"text": " @dev Emitted on deposit()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the deposit\n @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n @param amount The amount deposited\n @param referral The referral code used*"
									},
									"eventSelector": "de6857219544bb5b7746f48ed30be6386fefc61b2f864cacf559893bf50fd951",
									"id": 842,
									"name": "Deposit",
									"nameLocation": "558:7:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "587:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "571:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "608:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "600:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "634:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "618:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "658:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "650:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "650:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"indexed": true,
												"mutability": "mutable",
												"name": "referral",
												"nameLocation": "685:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "670:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 839,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "670:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:132:4"
									},
									"src": "552:146:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "702:288:4",
										"text": " @dev Emitted on withdraw()\n @param reserve The address of the underlyng asset being withdrawn\n @param user The address initiating the withdrawal, owner of aTokens\n @param to Address that will receive the underlying\n @param amount The amount to be withdrawn*"
									},
									"eventSelector": "3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f7",
									"id": 853,
									"name": "Withdraw",
									"nameLocation": "999:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1024:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1008:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1049:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1033:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1033:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1071:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1055:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1083:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1075:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1007:83:4"
									},
									"src": "993:98:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "1095:605:4",
										"text": " @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n @param reserve The address of the underlying asset being borrowed\n @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n initiator of the transaction on flashLoan()\n @param onBehalfOf The address that will be getting the debt\n @param amount The amount borrowed out\n @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable\n @param borrowRate The numeric rate at which the user has borrowed\n @param referral The referral code used*"
									},
									"eventSelector": "c6a898309e823ee50bac64e45ca8adba6690e99e7841c45d754e2a38e9019d9b",
									"id": 870,
									"name": "Borrow",
									"nameLocation": "1709:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1737:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1721:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1758:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1750:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1750:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "1784:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1768:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1808:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1800:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1800:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowRateMode",
												"nameLocation": "1828:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1820:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowRate",
												"nameLocation": "1856:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1848:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"indexed": true,
												"mutability": "mutable",
												"name": "referral",
												"nameLocation": "1887:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1872:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 867,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1872:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1715:184:4"
									},
									"src": "1703:197:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "1904:311:4",
										"text": " @dev Emitted on repay()\n @param reserve The address of the underlying asset of the reserve\n @param user The beneficiary of the repayment, getting his debt reduced\n @param repayer The address of the user initiating the repay(), providing the funds\n @param amount The amount repaid*"
									},
									"eventSelector": "4cdde6e09bb755c9a5589ebaec640bbfedff1362d4b255ebf8339782b9942faa",
									"id": 881,
									"name": "Repay",
									"nameLocation": "2224:5:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2251:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2235:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2235:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2280:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2264:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2264:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"indexed": true,
												"mutability": "mutable",
												"name": "repayer",
												"nameLocation": "2306:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2290:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2319:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2229:108:4"
									},
									"src": "2218:120:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "2342:253:4",
										"text": " @dev Emitted on swapBorrowRateMode()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user swapping his rate mode\n @param rateMode The rate mode that the user wants to swap to*"
									},
									"eventSelector": "ea368a40e9570069bb8e6511d668293ad2e1f03b0d982431fd223de9f3b70ca6",
									"id": 890,
									"name": "Swap",
									"nameLocation": "2604:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2625:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "2609:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2609:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2650:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "2634:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"indexed": false,
												"mutability": "mutable",
												"name": "rateMode",
												"nameLocation": "2664:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "2656:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:65:4"
									},
									"src": "2598:76:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "2678:208:4",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"
									},
									"eventSelector": "00058a56ea94653cdf4f152d227ace22d4c00ad99e2a43f58cb7d9e3feb295f2",
									"id": 897,
									"name": "ReserveUsedAsCollateralEnabled",
									"nameLocation": "2895:30:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2942:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "2926:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2967:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "2951:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2951:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2925:47:4"
									},
									"src": "2889:84:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "2977:208:4",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"
									},
									"eventSelector": "44c58d81365b66dd4b1a7f36c25aa97b8c71c361ee4937adc1a00000227db5dd",
									"id": 904,
									"name": "ReserveUsedAsCollateralDisabled",
									"nameLocation": "3194:31:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3242:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "3226:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3226:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3267:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "3251:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3251:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3225:47:4"
									},
									"src": "3188:85:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "3277:213:4",
										"text": " @dev Emitted on rebalanceStableBorrowRate()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user for which the rebalance has been executed*"
									},
									"eventSelector": "9f439ae0c81e41a04d3fdfe07aed54e6a179fb0db15be7702eb66fa8ef6f5300",
									"id": 911,
									"name": "RebalanceStableBorrowRate",
									"nameLocation": "3499:25:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3541:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3525:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3525:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3566:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3550:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3550:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3524:47:4"
									},
									"src": "3493:79:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "3576:370:4",
										"text": " @dev Emitted on flashLoan()\n @param target The address of the flash loan receiver contract\n @param initiator The address initiating the flash loan\n @param asset The address of the asset being flash borrowed\n @param amount The amount flash borrowed\n @param premium The fee flash borrowed\n @param referralCode The referral code used*"
									},
									"eventSelector": "631042c832b07452973831137f2d73e395028b44b250dedc5abb0ee766e168ac",
									"id": 926,
									"name": "FlashLoan",
									"nameLocation": "3955:9:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3986:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "3970:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3970:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"indexed": true,
												"mutability": "mutable",
												"name": "initiator",
												"nameLocation": "4014:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "3998:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3998:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "4045:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "4029:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4029:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4064:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "4056:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4056:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"indexed": false,
												"mutability": "mutable",
												"name": "premium",
												"nameLocation": "4084:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "4076:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"indexed": false,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "4104:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "4097:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 923,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4097:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3964:156:4"
									},
									"src": "3949:172:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "4125:56:4",
										"text": " @dev Emitted when the pause is triggered."
									},
									"eventSelector": "9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e752",
									"id": 929,
									"name": "Paused",
									"nameLocation": "4190:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4196:2:4"
									},
									"src": "4184:15:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "4203:53:4",
										"text": " @dev Emitted when the pause is lifted."
									},
									"eventSelector": "a45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d16933",
									"id": 932,
									"name": "Unpaused",
									"nameLocation": "4265:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4273:2:4"
									},
									"src": "4259:17:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "4280:928:4",
										"text": " @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n LendingPoolCollateral manager using a DELEGATECALL\n This allows to have the events in the generated ABI for LendingPool.\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n @param liquidator The address of the liquidator\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"
									},
									"eventSelector": "e413a321e8681d831f4dbccbca790d2952b56f977908e45be37335533e005286",
									"id": 949,
									"name": "LiquidationCall",
									"nameLocation": "5217:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"indexed": true,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nameLocation": "5254:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "5238:31:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5238:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"indexed": true,
												"mutability": "mutable",
												"name": "debtAsset",
												"nameLocation": "5291:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "5275:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5275:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5322:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "5306:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5306:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"indexed": false,
												"mutability": "mutable",
												"name": "debtToCover",
												"nameLocation": "5340:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "5332:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidatedCollateralAmount",
												"nameLocation": "5365:26:4",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "5357:34:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5357:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidator",
												"nameLocation": "5405:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "5397:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5397:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nameLocation": "5426:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "5421:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 946,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5421:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5232:211:4"
									},
									"src": "5211:233:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "5448:722:4",
										"text": " @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n gets added to the LendingPool ABI\n @param reserve The address of the underlying asset of the reserve\n @param liquidityRate The new liquidity rate\n @param stableBorrowRate The new stable borrow rate\n @param variableBorrowRate The new variable borrow rate\n @param liquidityIndex The new liquidity index\n @param variableBorrowIndex The new variable borrow index*"
									},
									"eventSelector": "804c9b842b2748a22bb64b345453a3de7ca54a6ca45ce00d415894979e22897a",
									"id": 964,
									"name": "ReserveDataUpdated",
									"nameLocation": "6179:18:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "6219:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "6203:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6203:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityRate",
												"nameLocation": "6240:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "6232:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6232:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"indexed": false,
												"mutability": "mutable",
												"name": "stableBorrowRate",
												"nameLocation": "6267:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "6259:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6259:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowRate",
												"nameLocation": "6297:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "6289:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6289:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityIndex",
												"nameLocation": "6329:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "6321:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6321:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowIndex",
												"nameLocation": "6357:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "6349:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6349:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6197:183:4"
									},
									"src": "6173:208:4"
								},
								{
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "6385:712:4",
										"text": " @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n @param asset The address of the underlying asset to deposit\n @param amount The amount to be deposited\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"
									},
									"functionSelector": "e8eda9df",
									"id": 976,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "7109:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "7130:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "7122:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7122:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7149:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "7141:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7141:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "7169:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "7161:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7161:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "7192:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "7185:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 972,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "7185:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7116:92:4"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7217:0:4"
									},
									"scope": 1201,
									"src": "7100:118:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "7222:665:4",
										"text": " @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n @param asset The address of the underlying asset to withdraw\n @param amount The underlying amount to be withdrawn\n   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n @param to Address that will receive the underlying, same as msg.sender if the user\n   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   different wallet\n @return The final amount withdrawn*"
									},
									"functionSelector": "69328dec",
									"id": 988,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "7899:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "7921:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "7913:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7913:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7940:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "7932:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7932:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7960:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "7952:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7952:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7907:59:4"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "7985:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7985:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7984:9:4"
									},
									"scope": 1201,
									"src": "7890:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "7998:1189:4",
										"text": " @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n corresponding debt token (StableDebtToken or VariableDebtToken)\n - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n @param asset The address of the underlying asset to borrow\n @param amount The amount to be borrowed\n @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n if he has been given credit delegation allowance*"
									},
									"functionSelector": "a415bcad",
									"id": 1002,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "borrow",
									"nameLocation": "9199:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "9219:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "9211:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9238:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "9230:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9230:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "9258:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "9250:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9250:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "9287:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "9280:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 996,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9280:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "9313:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "9305:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9305:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9205:122:4"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9336:0:4"
									},
									"scope": 1201,
									"src": "9190:147:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "9341:862:4",
										"text": " @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @return The final amount repaid*"
									},
									"functionSelector": "573ade81",
									"id": 1016,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repay",
									"nameLocation": "10215:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "10234:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "10226:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10226:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10253:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "10245:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10245:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "rateMode",
												"nameLocation": "10273:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "10265:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10265:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "10295:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "10287:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10287:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10220:89:4"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "10328:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10328:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10327:9:4"
									},
									"scope": 1201,
									"src": "10206:131:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "10341:231:4",
										"text": " @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n @param asset The address of the underlying asset borrowed\n @param rateMode The rate mode that the user wants to swap to*"
									},
									"functionSelector": "94ba89a2",
									"id": 1024,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapBorrowRateMode",
									"nameLocation": "10584:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "10611:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "10603:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10603:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "rateMode",
												"nameLocation": "10626:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "10618:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10618:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10602:33:4"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10644:0:4"
									},
									"scope": 1201,
									"src": "10575:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "10649:553:4",
										"text": " @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n - Users can be rebalanced if the following conditions are satisfied:\n     1. Usage ratio is above 95%\n     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n        borrowed at a stable rate and depositors are not earning enough\n @param asset The address of the underlying asset borrowed\n @param user The address of the user to be rebalanced*"
									},
									"functionSelector": "cd112382",
									"id": 1032,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebalanceStableBorrowRate",
									"nameLocation": "11214:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "11248:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "11240:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11240:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "11263:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "11255:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11255:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11239:29:4"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11277:0:4"
									},
									"scope": 1201,
									"src": "11205:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "11282:266:4",
										"text": " @dev Allows depositors to enable/disable a specific deposited asset as collateral\n @param asset The address of the underlying asset deposited\n @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise*"
									},
									"functionSelector": "5a3b74b9",
									"id": 1040,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUserUseReserveAsCollateral",
									"nameLocation": "11560:29:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "11598:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "11590:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11590:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "useAsCollateral",
												"nameLocation": "11610:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "11605:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1036,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11605:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11589:37:4"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11635:0:4"
									},
									"scope": 1201,
									"src": "11551:85:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "11640:860:4",
										"text": " @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"
									},
									"functionSelector": "00a718a9",
									"id": 1054,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidationCall",
									"nameLocation": "12512:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nameLocation": "12541:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "12533:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12533:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "debtAsset",
												"nameLocation": "12570:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "12562:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12562:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "12593:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "12585:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12585:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "debtToCover",
												"nameLocation": "12611:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "12603:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12603:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nameLocation": "12633:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "12628:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1050,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12628:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12527:123:4"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12659:0:4"
									},
									"scope": 1201,
									"src": "12503:157:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "12664:1376:4",
										"text": " @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n For further details please visit https://developers.aave.com\n @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n @param assets The addresses of the assets being flash-borrowed\n @param amounts The amounts amounts being flash-borrowed\n @param modes Types of the debt to open if the flash loan is not returned:\n   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"
									},
									"functionSelector": "ab9c4b5d",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoan",
									"nameLocation": "14052:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "receiverAddress",
												"nameLocation": "14075:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "14067:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14067:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "14115:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "14096:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1058,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "14096:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1059,
													"nodeType": "ArrayTypeName",
													"src": "14096:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14146:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "14127:26:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1061,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14127:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1062,
													"nodeType": "ArrayTypeName",
													"src": "14127:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "modes",
												"nameLocation": "14178:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "14159:24:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1064,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14159:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1065,
													"nodeType": "ArrayTypeName",
													"src": "14159:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "14197:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "14189:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14189:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "14228:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "14213:21:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1069,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14213:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "14247:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "14240:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1071,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "14240:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14061:202:4"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14272:0:4"
									},
									"scope": 1201,
									"src": "14043:230:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "14277:507:4",
										"text": " @dev Returns the user account data across all the reserves\n @param user The address of the user\n @return totalCollateralETH the total collateral in ETH of the user\n @return totalDebtETH the total debt in ETH of the user\n @return availableBorrowsETH the borrowing power left of the user\n @return currentLiquidationThreshold the liquidation threshold of the user\n @return ltv the loan to value of the user\n @return healthFactor the current health factor of the user*"
									},
									"functionSelector": "bf92857c",
									"id": 1093,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAccountData",
									"nameLocation": "14796:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "14823:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "14815:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14815:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14814:14:4"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "totalCollateralETH",
												"nameLocation": "14879:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "14871:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14871:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "totalDebtETH",
												"nameLocation": "14913:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "14905:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14905:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "availableBorrowsETH",
												"nameLocation": "14941:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "14933:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14933:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "currentLiquidationThreshold",
												"nameLocation": "14976:27:4",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "14968:35:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14968:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "ltv",
												"nameLocation": "15019:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "15011:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15011:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "healthFactor",
												"nameLocation": "15038:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "15030:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15030:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14863:193:4"
									},
									"scope": 1201,
									"src": "14787:270:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7a708e92",
									"id": 1106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initReserve",
									"nameLocation": "15070:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "15095:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "15087:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15087:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "aTokenAddress",
												"nameLocation": "15116:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "15108:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15108:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "stableDebtAddress",
												"nameLocation": "15143:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "15135:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15135:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "variableDebtAddress",
												"nameLocation": "15174:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "15166:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15166:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "interestRateStrategyAddress",
												"nameLocation": "15207:27:4",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "15199:35:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15199:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15081:157:4"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15247:0:4"
									},
									"scope": 1201,
									"src": "15061:187:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d2118f9",
									"id": 1113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setReserveInterestRateStrategyAddress",
									"nameLocation": "15261:37:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "15307:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "15299:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15299:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "rateStrategyAddress",
												"nameLocation": "15324:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "15316:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15298:46:4"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15357:0:4"
									},
									"scope": 1201,
									"src": "15252:106:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b8d29276",
									"id": 1120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setConfiguration",
									"nameLocation": "15371:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "15396:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "15388:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15388:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "configuration",
												"nameLocation": "15413:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "15405:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15405:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15387:40:4"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15436:0:4"
									},
									"scope": 1201,
									"src": "15362:75:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "15441:176:4",
										"text": " @dev Returns the configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The configuration of the reserve*"
									},
									"functionSelector": "c44b11f7",
									"id": 1129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getConfiguration",
									"nameLocation": "15629:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "15654:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "15646:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15646:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15645:15:4"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "15696:40:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1410_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"id": 1126,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1125,
														"name": "DataTypes.ReserveConfigurationMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1410,
														"src": "15696:33:4"
													},
													"referencedDeclaration": 1410,
													"src": "15696:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1410_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15695:42:4"
									},
									"scope": 1201,
									"src": "15620:118:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "15742:159:4",
										"text": " @dev Returns the configuration of the user across all the reserves\n @param user The user address\n @return The configuration of the user*"
									},
									"functionSelector": "4417a583",
									"id": 1138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserConfiguration",
									"nameLocation": "15913:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "15942:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "15934:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15934:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15933:14:4"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "15983:37:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$1413_memory_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												},
												"typeName": {
													"id": 1135,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1134,
														"name": "DataTypes.UserConfigurationMap",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1413,
														"src": "15983:30:4"
													},
													"referencedDeclaration": 1413,
													"src": "15983:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserConfigurationMap_$1413_storage_ptr",
														"typeString": "struct DataTypes.UserConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15982:39:4"
									},
									"scope": 1201,
									"src": "15904:118:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "16026:196:4",
										"text": " @dev Returns the normalized income normalized income of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The reserve's normalized income"
									},
									"functionSelector": "d15e0053",
									"id": 1146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedIncome",
									"nameLocation": "16234:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16269:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "16261:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16261:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16260:15:4"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "16299:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16299:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16298:9:4"
									},
									"scope": 1201,
									"src": "16225:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "16312:193:4",
										"text": " @dev Returns the normalized variable debt per unit of asset\n @param asset The address of the underlying asset of the reserve\n @return The reserve normalized variable debt"
									},
									"functionSelector": "386497fd",
									"id": 1154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedVariableDebt",
									"nameLocation": "16517:32:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16558:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "16550:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16550:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16549:15:4"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "16588:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16588:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16587:9:4"
									},
									"scope": 1201,
									"src": "16508:89:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "16601:178:4",
										"text": " @dev Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state of the reserve*"
									},
									"functionSelector": "35ea6a75",
									"id": 1163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveData",
									"nameLocation": "16791:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16814:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "16806:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16806:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16805:15:4"
									},
									"returnParameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "16844:28:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveData_$1407_memory_ptr",
													"typeString": "struct DataTypes.ReserveData"
												},
												"typeName": {
													"id": 1160,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1159,
														"name": "DataTypes.ReserveData",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1407,
														"src": "16844:21:4"
													},
													"referencedDeclaration": 1407,
													"src": "16844:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveData_$1407_storage_ptr",
														"typeString": "struct DataTypes.ReserveData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16843:30:4"
									},
									"scope": 1201,
									"src": "16782:92:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5ed3933",
									"id": 1178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "finalizeTransfer",
									"nameLocation": "16887:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16917:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "16909:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16909:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16936:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "16928:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16928:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16954:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "16946:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16946:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16970:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "16962:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16962:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "balanceFromAfter",
												"nameLocation": "16990:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "16982:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "balanceToBefore",
												"nameLocation": "17020:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "17012:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16903:136:4"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17048:0:4"
									},
									"scope": 1201,
									"src": "16878:171:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d1946dbc",
									"id": 1184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReservesList",
									"nameLocation": "17062:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17077:2:4"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "17103:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1180,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "17103:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1181,
													"nodeType": "ArrayTypeName",
													"src": "17103:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17102:18:4"
									},
									"scope": 1201,
									"src": "17053:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fe65acfe",
									"id": 1190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressesProvider",
									"nameLocation": "17134:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17154:2:4"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "17180:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1352",
													"typeString": "contract ILendingPoolAddressesProvider"
												},
												"typeName": {
													"id": 1187,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1186,
														"name": "ILendingPoolAddressesProvider",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1352,
														"src": "17180:29:4"
													},
													"referencedDeclaration": 1352,
													"src": "17180:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1352",
														"typeString": "contract ILendingPoolAddressesProvider"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17179:31:4"
									},
									"scope": 1201,
									"src": "17125:86:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bedb86fb",
									"id": 1195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPause",
									"nameLocation": "17224:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "val",
												"nameLocation": "17238:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "17233:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1191,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17233:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17232:10:4"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17251:0:4"
									},
									"scope": 1201,
									"src": "17215:37:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c975abb",
									"id": 1200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "17265:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17271:2:4"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "17297:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1197,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17297:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17296:6:4"
									},
									"scope": 1201,
									"src": "17256:47:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1202,
							"src": "197:17108:4",
							"usedErrors": []
						}
					],
					"src": "37:17269:4"
				},
				"id": 4
			},
			"src/contracts/interfaces/ILendingPoolAddressesProvider.sol": {
				"ast": {
					"absolutePath": "src/contracts/interfaces/ILendingPoolAddressesProvider.sol",
					"exportedSymbols": {
						"ILendingPoolAddressesProvider": [
							1352
						]
					},
					"id": 1353,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1203,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILendingPoolAddressesProvider",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1204,
								"nodeType": "StructuredDocumentation",
								"src": "63:311:5",
								"text": " @title LendingPoolAddressesProvider contract\n @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n - Acting also as factory of proxies and admin of those, so with right to change its implementations\n - Owned by the Aave Governance\n @author Aave*"
							},
							"fullyImplemented": false,
							"id": 1352,
							"linearizedBaseContracts": [
								1352
							],
							"name": "ILendingPoolAddressesProvider",
							"nameLocation": "385:29:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "5e667c32fd847cf8bce48ab3400175cbf107bdc82b2dea62e3364909dfaee799",
									"id": 1208,
									"name": "MarketIdSet",
									"nameLocation": "425:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMarketId",
												"nameLocation": "444:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "437:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1205,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "437:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:20:5"
									},
									"src": "419:38:5"
								},
								{
									"anonymous": false,
									"eventSelector": "c4e6c6cdf28d0edbd8bcf071d724d33cc2e7a30be7d06443925656e9cb492aa4",
									"id": 1212,
									"name": "LendingPoolUpdated",
									"nameLocation": "466:18:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "501:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "485:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:28:5"
									},
									"src": "460:53:5"
								},
								{
									"anonymous": false,
									"eventSelector": "c20a317155a9e7d84e06b716b4b355d47742ab9f8c5d630e7f556553f582430d",
									"id": 1216,
									"name": "ConfigurationAdminUpdated",
									"nameLocation": "522:25:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "564:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "548:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "547:28:5"
									},
									"src": "516:60:5"
								},
								{
									"anonymous": false,
									"eventSelector": "e19673fc861bfeb894cf2d6b7662505497ef31c0f489b742db24ee3310826916",
									"id": 1220,
									"name": "EmergencyAdminUpdated",
									"nameLocation": "585:21:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "623:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "607:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:28:5"
									},
									"src": "579:56:5"
								},
								{
									"anonymous": false,
									"eventSelector": "dfabe479bad36782fb1e77fbfddd4e382671713527e4786cfc93a022ae763729",
									"id": 1224,
									"name": "LendingPoolConfiguratorUpdated",
									"nameLocation": "644:30:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "691:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "675:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:28:5"
									},
									"src": "638:65:5"
								},
								{
									"anonymous": false,
									"eventSelector": "991888326f0eab3df6084aadb82bee6781b5c9aa75379e8bc50ae86934541638",
									"id": 1228,
									"name": "LendingPoolCollateralManagerUpdated",
									"nameLocation": "712:35:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "764:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "748:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:28:5"
									},
									"src": "706:70:5"
								},
								{
									"anonymous": false,
									"eventSelector": "efe8ab924ca486283a79dc604baa67add51afb82af1db8ac386ebbba643cdffd",
									"id": 1232,
									"name": "PriceOracleUpdated",
									"nameLocation": "785:18:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "820:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "804:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:28:5"
									},
									"src": "779:53:5"
								},
								{
									"anonymous": false,
									"eventSelector": "5c29179aba6942020a8a2d38f65de02fb6b7f784e7f049ed3a3cab97621859b5",
									"id": 1236,
									"name": "LendingRateOracleUpdated",
									"nameLocation": "841:24:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "882:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "866:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "865:28:5"
									},
									"src": "835:59:5"
								},
								{
									"anonymous": false,
									"eventSelector": "1eb35cb4b5bbb23d152f3b4016a5a46c37a07ae930ed0956aba951e231142438",
									"id": 1242,
									"name": "ProxyCreated",
									"nameLocation": "903:12:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "924:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "916:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1237,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "944:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "928:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "915:40:5"
									},
									"src": "897:59:5"
								},
								{
									"anonymous": false,
									"eventSelector": "f2689d5d5cd0c639e137642cae5d40afced201a1a0327e7ac9358461dc9fff31",
									"id": 1250,
									"name": "AddressSet",
									"nameLocation": "965:10:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "984:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "976:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1243,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1004:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "988:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"indexed": false,
												"mutability": "mutable",
												"name": "hasProxy",
												"nameLocation": "1021:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "1016:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1016:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:55:5"
									},
									"src": "959:72:5"
								},
								{
									"functionSelector": "568ef470",
									"id": 1255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketId",
									"nameLocation": "1044:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:2:5"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "1081:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1252,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1081:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1080:15:5"
									},
									"scope": 1352,
									"src": "1035:61:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f67b1847",
									"id": 1260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMarketId",
									"nameLocation": "1109:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "marketId",
												"nameLocation": "1137:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "1121:24:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1256,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1121:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1120:26:5"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1155:0:5"
									},
									"scope": 1352,
									"src": "1100:56:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ca446dd9",
									"id": 1267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddress",
									"nameLocation": "1169:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1188:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1180:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1261,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1200:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1192:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1192:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1179:32:5"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1220:0:5"
									},
									"scope": 1352,
									"src": "1160:61:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5dcc528c",
									"id": 1274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddressAsProxy",
									"nameLocation": "1234:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1260:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "1252:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1268,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "1272:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "1264:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1251:26:5"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:0:5"
									},
									"scope": 1352,
									"src": "1225:62:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "21f8a721",
									"id": 1281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nameLocation": "1300:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1319:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1311:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1275,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:12:5"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1346:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1346:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1345:9:5"
									},
									"scope": 1352,
									"src": "1291:64:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0261bf8b",
									"id": 1286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPool",
									"nameLocation": "1368:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1382:2:5"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1408:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1408:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1407:9:5"
									},
									"scope": 1352,
									"src": "1359:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5aef021f",
									"id": 1291,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolImpl",
									"nameLocation": "1430:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1457:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "1449:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1448:14:5"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1471:0:5"
									},
									"scope": 1352,
									"src": "1421:51:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85c858b1",
									"id": 1296,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolConfigurator",
									"nameLocation": "1485:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1511:2:5"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "1537:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1536:9:5"
									},
									"scope": 1352,
									"src": "1476:70:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c12542df",
									"id": 1301,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolConfiguratorImpl",
									"nameLocation": "1559:30:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "configurator",
												"nameLocation": "1598:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "1590:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1590:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1589:22:5"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1620:0:5"
									},
									"scope": 1352,
									"src": "1550:71:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "712d9171",
									"id": 1306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolCollateralManager",
									"nameLocation": "1634:31:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:2:5"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "1691:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1691:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1690:9:5"
									},
									"scope": 1352,
									"src": "1625:75:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "398e5553",
									"id": 1311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolCollateralManager",
									"nameLocation": "1713:31:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "manager",
												"nameLocation": "1753:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "1745:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:17:5"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1770:0:5"
									},
									"scope": 1352,
									"src": "1704:67:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aecda378",
									"id": 1316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAdmin",
									"nameLocation": "1784:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:2:5"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1822:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1822:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1821:9:5"
									},
									"scope": 1352,
									"src": "1775:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "283d62ad",
									"id": 1321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolAdmin",
									"nameLocation": "1844:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1865:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "1857:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1857:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1856:15:5"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1880:0:5"
									},
									"scope": 1352,
									"src": "1835:46:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ddcaa9ea",
									"id": 1326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEmergencyAdmin",
									"nameLocation": "1894:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1911:2:5"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "1937:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1937:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1936:9:5"
									},
									"scope": 1352,
									"src": "1885:61:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "35da3394",
									"id": 1331,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setEmergencyAdmin",
									"nameLocation": "1959:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1985:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "1977:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1977:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1976:15:5"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2000:0:5"
									},
									"scope": 1352,
									"src": "1950:51:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fca513a8",
									"id": 1336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOracle",
									"nameLocation": "2014:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:5"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "2054:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2054:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2053:9:5"
									},
									"scope": 1352,
									"src": "2005:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "530e784f",
									"id": 1341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceOracle",
									"nameLocation": "2076:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "priceOracle",
												"nameLocation": "2099:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "2091:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2091:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:21:5"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2120:0:5"
									},
									"scope": 1352,
									"src": "2067:54:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3618abba",
									"id": 1346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingRateOracle",
									"nameLocation": "2134:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2154:2:5"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "2180:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2180:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:9:5"
									},
									"scope": 1352,
									"src": "2125:64:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "820d1274",
									"id": 1351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingRateOracle",
									"nameLocation": "2202:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "lendingRateOracle",
												"nameLocation": "2231:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2223:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2222:27:5"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2258:0:5"
									},
									"scope": 1352,
									"src": "2193:66:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1353,
							"src": "375:1886:5",
							"usedErrors": []
						}
					],
					"src": "37:2225:5"
				},
				"id": 5
			},
			"src/contracts/interfaces/IScaledBalanceToken.sol": {
				"ast": {
					"absolutePath": "src/contracts/interfaces/IScaledBalanceToken.sol",
					"exportedSymbols": {
						"IScaledBalanceToken": [
							1379
						]
					},
					"id": 1380,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1354,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IScaledBalanceToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1379,
							"linearizedBaseContracts": [
								1379
							],
							"name": "IScaledBalanceToken",
							"nameLocation": "73:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1355,
										"nodeType": "StructuredDocumentation",
										"src": "97:296:6",
										"text": " @dev Returns the scaled balance of the user. The scaled balance is the sum of all the\n updated stored balance divided by the reserve's liquidity index at the moment of the update\n @param user The user whose balance is calculated\n @return The scaled balance of the user*"
									},
									"functionSelector": "1da24f3e",
									"id": 1362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "scaledBalanceOf",
									"nameLocation": "405:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "429:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "421:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "420:14:6"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "458:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:9:6"
									},
									"scope": 1379,
									"src": "396:71:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "471:233:6",
										"text": " @dev Returns the scaled balance of the user and the scaled total supply.\n @param user The address of the user\n @return The scaled balance of the user\n @return The scaled balance and the scaled total supply*"
									},
									"functionSelector": "0afbcdc9",
									"id": 1372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getScaledUserBalanceAndSupply",
									"nameLocation": "716:29:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "754:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "746:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:14:6"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "783:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "792:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "782:18:6"
									},
									"scope": 1379,
									"src": "707:94:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "805:144:6",
										"text": " @dev Returns the scaled total supply of the variable debt token. Represents sum(debt/index)\n @return The scaled total supply*"
									},
									"functionSelector": "b1bf962d",
									"id": 1378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "scaledTotalSupply",
									"nameLocation": "961:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:2:6"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "1004:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:9:6"
									},
									"scope": 1379,
									"src": "952:61:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1380,
							"src": "63:952:6",
							"usedErrors": []
						}
					],
					"src": "37:979:6"
				},
				"id": 6
			},
			"src/contracts/types/DataTypes.sol": {
				"ast": {
					"absolutePath": "src/contracts/types/DataTypes.sol",
					"exportedSymbols": {
						"DataTypes": [
							1418
						]
					},
					"id": 1419,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1381,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DataTypes",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1418,
							"linearizedBaseContracts": [
								1418
							],
							"name": "DataTypes",
							"nameLocation": "71:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DataTypes.ReserveData",
									"id": 1407,
									"members": [
										{
											"constant": false,
											"id": 1384,
											"mutability": "mutable",
											"name": "configuration",
											"nameLocation": "284:13:7",
											"nodeType": "VariableDeclaration",
											"scope": 1407,
											"src": "260:37:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1410_storage_ptr",
												"typeString": "struct DataTypes.ReserveConfigurationMap"
											},
											"typeName": {
												"id": 1383,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1382,
													"name": "ReserveConfigurationMap",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1410,
													"src": "260:23:7"
												},
												"referencedDeclaration": 1410,
												"src": "260:23:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1410_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1386,
											"mutability": "mutable",
											"name": "liquidityIndex",
											"nameLocation": "363:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1407,
											"src": "355:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1385,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "355:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1388,
											"mutability": "mutable",
											"name": "variableBorrowIndex",
											"nameLocation": "445:19:7",
											"nodeType": "VariableDeclaration",
											"scope": 1407,
											"src": "437:27:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1387,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "437:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1390,
											"mutability": "mutable",
											"name": "currentLiquidityRate",
											"nameLocation": "534:20:7",
											"nodeType": "VariableDeclaration",
											"scope": 1407,
											"src": "526:28:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1389,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "526:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1392,
											"mutability": "mutable",
											"name": "currentVariableBorrowRate",
											"nameLocation": "633:25:7",
											"nodeType": "VariableDeclaration",
											"scope": 1407,
											"src": "625:33:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1391,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "625:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1394,
											"mutability": "mutable",
											"name": "currentStableBorrowRate",
											"nameLocation": "735:23:7",
											"nodeType": "VariableDeclaration",
											"scope": 1407,
											"src": "727:31:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1393,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "727:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1396,
											"mutability": "mutable",
											"name": "lastUpdateTimestamp",
											"nameLocation": "775:19:7",
											"nodeType": "VariableDeclaration",
											"scope": 1407,
											"src": "768:26:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 1395,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "768:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1398,
											"mutability": "mutable",
											"name": "aTokenAddress",
											"nameLocation": "839:13:7",
											"nodeType": "VariableDeclaration",
											"scope": 1407,
											"src": "831:21:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1397,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "831:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1400,
											"mutability": "mutable",
											"name": "stableDebtTokenAddress",
											"nameLocation": "870:22:7",
											"nodeType": "VariableDeclaration",
											"scope": 1407,
											"src": "862:30:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1399,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "862:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1402,
											"mutability": "mutable",
											"name": "variableDebtTokenAddress",
											"nameLocation": "910:24:7",
											"nodeType": "VariableDeclaration",
											"scope": 1407,
											"src": "902:32:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1401,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "902:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1404,
											"mutability": "mutable",
											"name": "interestRateStrategyAddress",
											"nameLocation": "1000:27:7",
											"nodeType": "VariableDeclaration",
											"scope": 1407,
											"src": "992:35:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1403,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "992:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1406,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "1135:2:7",
											"nodeType": "VariableDeclaration",
											"scope": 1407,
											"src": "1129:8:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1405,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1129:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveData",
									"nameLocation": "199:11:7",
									"nodeType": "StructDefinition",
									"scope": 1418,
									"src": "192:952:7",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ReserveConfigurationMap",
									"id": 1410,
									"members": [
										{
											"constant": false,
											"id": 1409,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "1506:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 1410,
											"src": "1498:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1408,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1498:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveConfigurationMap",
									"nameLocation": "1157:23:7",
									"nodeType": "StructDefinition",
									"scope": 1418,
									"src": "1150:367:7",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.UserConfigurationMap",
									"id": 1413,
									"members": [
										{
											"constant": false,
											"id": 1412,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "1569:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 1413,
											"src": "1561:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1411,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1561:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserConfigurationMap",
									"nameLocation": "1530:20:7",
									"nodeType": "StructDefinition",
									"scope": 1418,
									"src": "1523:57:7",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.InterestRateMode",
									"id": 1417,
									"members": [
										{
											"id": 1414,
											"name": "NONE",
											"nameLocation": "1618:4:7",
											"nodeType": "EnumValue",
											"src": "1618:4:7"
										},
										{
											"id": 1415,
											"name": "STABLE",
											"nameLocation": "1632:6:7",
											"nodeType": "EnumValue",
											"src": "1632:6:7"
										},
										{
											"id": 1416,
											"name": "VARIABLE",
											"nameLocation": "1648:8:7",
											"nodeType": "EnumValue",
											"src": "1648:8:7"
										}
									],
									"name": "InterestRateMode",
									"nameLocation": "1591:16:7",
									"nodeType": "EnumDefinition",
									"src": "1586:76:7"
								}
							],
							"scope": 1419,
							"src": "63:1601:7",
							"usedErrors": []
						}
					],
					"src": "37:1628:7"
				},
				"id": 7
			}
		}
	}
}